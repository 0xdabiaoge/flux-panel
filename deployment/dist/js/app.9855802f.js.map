{"version":3,"file":"js/app.9855802f.js","mappings":"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","sources":["webpack://gost/./src/App.vue","webpack://gost/src/App.vue","webpack://gost/./src/App.vue?c036","webpack://gost/./src/App.vue?0e40","webpack://gost/./src/views/Home.vue","webpack://gost/./src/api/network.js","webpack://gost/./src/api/index.js","webpack://gost/src/views/Home.vue","webpack://gost/./src/views/Home.vue?a787","webpack://gost/./src/views/Home.vue?8611","webpack://gost/./src/views/Login.vue","webpack://gost/src/views/Login.vue","webpack://gost/./src/views/Login.vue?3cb7","webpack://gost/./src/views/Login.vue?a6ee","webpack://gost/./src/views/Index.vue","webpack://gost/src/views/Index.vue","webpack://gost/./src/views/Index.vue?cb95","webpack://gost/./src/views/Index.vue?e2bc","webpack://gost/./src/views/User.vue","webpack://gost/src/views/User.vue","webpack://gost/./src/views/User.vue?d7cc","webpack://gost/./src/views/User.vue?898b","webpack://gost/./src/views/node.vue","webpack://gost/./src/config/env.js","webpack://gost/src/views/node.vue","webpack://gost/./src/views/node.vue?0f3e","webpack://gost/./src/views/node.vue?21e4","webpack://gost/./src/views/Tunnel.vue","webpack://gost/src/views/Tunnel.vue","webpack://gost/./src/views/Tunnel.vue?3dcd","webpack://gost/./src/views/Tunnel.vue?dfaf","webpack://gost/./src/views/Forward.vue","webpack://gost/src/views/Forward.vue","webpack://gost/./src/views/Forward.vue?173e","webpack://gost/./src/views/Forward.vue?0567","webpack://gost/./src/views/Limit.vue","webpack://gost/src/views/Limit.vue","webpack://gost/./src/views/Limit.vue?55ea","webpack://gost/./src/views/Limit.vue?cc78","webpack://gost/./src/router/index.js","webpack://gost/./src/utils/jwt.js","webpack://gost/./src/utils/auth.js","webpack://gost/./src/directives/permission.js","webpack://gost/./src/main.js","webpack://gost/webpack/bootstrap","webpack://gost/webpack/runtime/amd options","webpack://gost/webpack/runtime/chunk loaded","webpack://gost/webpack/runtime/compat get default export","webpack://gost/webpack/runtime/define property getters","webpack://gost/webpack/runtime/global","webpack://gost/webpack/runtime/hasOwnProperty shorthand","webpack://gost/webpack/runtime/make namespace object","webpack://gost/webpack/runtime/node module decorator","webpack://gost/webpack/runtime/jsonp chunk loading","webpack://gost/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  created() {\n    // 设置移动端适配\n    this.setRem();\n    window.addEventListener('resize', this.setRem);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.setRem);\n  },\n  methods: {\n    setRem() {\n      const width = document.documentElement.clientWidth || document.body.clientWidth;\n      // 移动端适配，基准值为375px宽度设备\n      if (width < 768) {\n        const ratio = width / 375;\n        document.documentElement.style.fontSize = 14 * ratio + 'px';\n      } else {\n        document.documentElement.style.fontSize = '16px';\n      }\n    }\n  }\n}\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml, body {\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  -webkit-text-size-adjust: 100%;\n}\n\n#app {\n  font-family: 'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  height: 100%;\n  color: #333;\n}\n\n/* 移动端样式适配 */\n@media screen and (max-width: 768px) {\n  .el-table {\n    width: 100% !important;\n    font-size: 0.8rem;\n  }\n  \n  .el-button {\n    padding: 8px 15px;\n    font-size: 0.9rem;\n  }\n  \n  .el-form-item__label {\n    font-size: 0.9rem;\n  }\n  \n  .el-dialog {\n    width: 95% !important;\n    margin-top: 15vh !important;\n  }\n  \n  .el-card {\n    padding: 5px !important;\n  }\n  \n  .el-card__body {\n    padding: 10px !important;\n  }\n  \n  /* 确保文本可以换行，避免溢出 */\n  .el-table .cell,\n  .el-form-item__content,\n  .el-input__inner {\n    word-break: break-word !important;\n    white-space: normal !important;\n  }\n  \n  .el-message-box {\n    width: 90% !important;\n  }\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=ca514b1a\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=ca514b1a&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-container',[_c('el-header',{staticStyle:{\"height\":\"50px\"}},[_c('span',{staticStyle:{\"line-height\":\"50px\"}},[_vm._v(\"管理后台\")]),_c('div',{staticClass:\"header-avatar\"},[_c('el-avatar',{staticStyle:{\"margin-right\":\"10px\"},attrs:{\"size\":\"medium\",\"src\":\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"}}),_c('el-dropdown',[_c('span',{staticClass:\"el-dropdown-link\",staticStyle:{\"color\":\"white\"}},[_vm._v(_vm._s(_vm.name))]),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{nativeOn:{\"click\":function($event){return _vm.showPasswordDialog.apply(null, arguments)}}},[_c('i',{staticClass:\"el-icon-key\"}),_vm._v(\" 修改密码 \")]),_c('el-dropdown-item',{nativeOn:{\"click\":function($event){return _vm.logout.apply(null, arguments)}}},[_c('i',{staticClass:\"el-icon-switch-button\"}),_vm._v(\" 退出登录 \")])],1)],1)],1)]),_c('el-container',[_c('el-aside',{attrs:{\"width\":\"200px\"}},[_c('el-menu',{staticClass:\"el-menu-vertical-demo\",attrs:{\"default-active\":_vm.path}},[_c('router-link',{attrs:{\"to\":\"/index\"}},[_c('el-menu-item',{attrs:{\"index\":\"/index\"},on:{\"click\":function($event){return _vm.save('/index')}}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-box\"}),_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"首页\")])])],2)],1),_c('router-link',{directives:[{name:\"admin\",rawName:\"v-admin\"}],attrs:{\"to\":\"/limit\"}},[_c('el-menu-item',{attrs:{\"index\":\"/limit\"},on:{\"click\":function($event){return _vm.save('/limit')}}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-box\"}),_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"限速管理\")])])],2)],1),_c('router-link',{attrs:{\"to\":\"/forward\"}},[_c('el-menu-item',{attrs:{\"index\":\"/forward\"},on:{\"click\":function($event){return _vm.save('/forward')}}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-postcard\"}),_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"转发管理\")])])],2)],1),_c('router-link',{directives:[{name:\"admin\",rawName:\"v-admin\"}],attrs:{\"to\":\"/tunnel\"}},[_c('el-menu-item',{attrs:{\"index\":\"/tunnel\"},on:{\"click\":function($event){return _vm.save('/tunnel')}}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-postcard\"}),_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"隧道管理\")])])],2)],1),_c('router-link',{directives:[{name:\"admin\",rawName:\"v-admin\"}],attrs:{\"to\":\"/node\"}},[_c('el-menu-item',{attrs:{\"index\":\"/node\"},on:{\"click\":function($event){return _vm.save('/node')}}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-postcard\"}),_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"节点监控\")])])],2)],1),_c('router-link',{directives:[{name:\"admin\",rawName:\"v-admin\"}],attrs:{\"to\":\"/user\"}},[_c('el-menu-item',{attrs:{\"index\":\"/user\"},on:{\"click\":function($event){return _vm.save('/user')}}},[_c('template',{slot:\"title\"},[_c('i',{staticClass:\"el-icon-user\"}),_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"用户管理\")])])],2)],1)],1)],1),_c('el-main',[_c('div',{staticStyle:{\"margin\":\"15px 15px\"}},[_c('router-view'),_c('div',{staticStyle:{\"background-color\":\"white\",\"height\":\"50px\",\"position\":\"absolute\",\"bottom\":\"0\",\"left\":\"199px\",\"right\":\"0\",\"line-height\":\"50px\",\"padding-left\":\"30px\",\"font-size\":\"12px\",\"color\":\"#58666e\"}},[_vm._v(\" © 2023 Copyright. \")])],1)])],1),_c('el-dialog',{attrs:{\"title\":\"修改密码\",\"visible\":_vm.passwordDialogVisible,\"width\":\"400px\",\"before-close\":_vm.handlePasswordDialogClose},on:{\"update:visible\":function($event){_vm.passwordDialogVisible=$event}}},[_c('el-form',{ref:\"passwordForm\",attrs:{\"model\":_vm.passwordForm,\"rules\":_vm.passwordRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"当前密码\",\"prop\":\"currentPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入当前密码\",\"show-password\":\"\",\"clearable\":\"\"},model:{value:(_vm.passwordForm.currentPassword),callback:function ($$v) {_vm.$set(_vm.passwordForm, \"currentPassword\", $$v)},expression:\"passwordForm.currentPassword\"}})],1),_c('el-form-item',{attrs:{\"label\":\"新密码\",\"prop\":\"newPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入新密码\",\"show-password\":\"\",\"clearable\":\"\"},model:{value:(_vm.passwordForm.newPassword),callback:function ($$v) {_vm.$set(_vm.passwordForm, \"newPassword\", $$v)},expression:\"passwordForm.newPassword\"}})],1),_c('el-form-item',{attrs:{\"label\":\"确认密码\",\"prop\":\"confirmPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请再次输入新密码\",\"show-password\":\"\",\"clearable\":\"\"},model:{value:(_vm.passwordForm.confirmPassword),callback:function ($$v) {_vm.$set(_vm.passwordForm, \"confirmPassword\", $$v)},expression:\"passwordForm.confirmPassword\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.handlePasswordDialogClose}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.passwordLoading},on:{\"click\":_vm.submitPasswordChange}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import axios from 'axios';\r\n\r\nexport default {\r\n    get: function(path = '', data = {}) {\r\n        return new Promise(function(resolve, reject) {\r\n            axios.get(path, {\r\n                params: data,\r\n                timeout: 60000,\r\n                headers: {\r\n                    \"Authorization\": window.localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(function(response) {\r\n                    resolve(response.data);\r\n                })\r\n                .catch(function(error) {\r\n                    console.error('GET请求错误:', error);\r\n                    resolve({\"code\": -1, \"msg\": error.message || \"网络请求失败\"});\r\n                });\r\n        });\r\n    },\r\n    post: function(path = '', data = {}) {\r\n        return new Promise(function(resolve, reject) {\r\n            axios.post(path, data, {\r\n                timeout: 60000,\r\n                headers:{\r\n                    \"Authorization\": window.localStorage.getItem('token'),\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n                .then(function(response) {\r\n                    resolve(response.data);\r\n                })\r\n                .catch(function(error) {\r\n                    console.error('POST请求错误:', error);\r\n                    resolve({\"code\": -1, \"msg\": error.message || \"网络请求失败\"});\r\n                });\r\n        });\r\n    },\r\n    put: function(path = '', data = {}) {\r\n        return new Promise(function(resolve, reject) {\r\n            axios.put(path, data, {\r\n                timeout: 60000,\r\n                headers:{\r\n                    \"Authorization\": window.localStorage.getItem('token'),\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n                .then(function(response) {\r\n                    resolve(response.data);\r\n                })\r\n                .catch(function(error) {\r\n                    console.error('PUT请求错误:', error);\r\n                    resolve({\"code\": -1, \"msg\": error.message || \"网络请求失败\"});\r\n                });\r\n        });\r\n    },\r\n    delete: function(path = '') {\r\n        return new Promise(function(resolve, reject) {\r\n            axios.delete(path, {\r\n                timeout: 60000,\r\n                headers:{\r\n                    \"Authorization\": window.localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(function(response) {\r\n                    resolve(response.data);\r\n                })\r\n                .catch(function(error) {\r\n                    console.error('DELETE请求错误:', error);\r\n                    resolve({\"code\": -1, \"msg\": error.message || \"网络请求失败\"});\r\n                });\r\n        });\r\n    }\r\n};","import Network from './network';\n\nexport const login = (data) => Network.post(\"/user/login\", data)\n\n// 用户CRUD操作 - 全部使用POST请求\nexport const createUser = (data) => Network.post(\"/user/create\", data)\nexport const getAllUsers = (pageData = {}) => Network.post(\"/user/list\", pageData)\nexport const updateUser = (data) => Network.post(\"/user/update\", data)\nexport const deleteUser = (id) => Network.post(\"/user/delete\", { id })\nexport const getUserPackageInfo = () => Network.post(\"/user/package\")\n\n// 节点CRUD操作 - 全部使用POST请求\nexport const createNode = (data) => Network.post(\"/node/create\", data)\nexport const getNodeList = () => Network.post(\"/node/list\")\nexport const updateNode = (data) => Network.post(\"/node/update\", data)\nexport const deleteNode = (id) => Network.post(\"/node/delete\", { id })\nexport const getNodeInstallCommand = (id) => Network.post(\"/node/install\", { id })\n\n// 隧道CRUD操作 - 全部使用POST请求\nexport const createTunnel = (data) => Network.post(\"/tunnel/create\", data)\nexport const getTunnelList = () => Network.post(\"/tunnel/list\")\nexport const getTunnelById = (id) => Network.post(\"/tunnel/get\", { id })\nexport const deleteTunnel = (id) => Network.post(\"/tunnel/delete\", { id })\n\n// 用户隧道权限管理操作 - 全部使用POST请求\nexport const assignUserTunnel = (data) => Network.post(\"/tunnel/user/assign\", data)\nexport const getUserTunnelList = (queryData = {}) => Network.post(\"/tunnel/user/list\", queryData)\nexport const removeUserTunnel = (params) => Network.post(\"/tunnel/user/remove\", params)\nexport const updateUserTunnelFlow = (params) => Network.post(\"/tunnel/user/updateFlow\", params)\nexport const updateUserTunnel = (data) => Network.post(\"/tunnel/user/update\", data)\nexport const userTunnel = () => Network.post(\"/tunnel/user/tunnel\")\n\n// 转发CRUD操作 - 全部使用POST请求\nexport const createForward = (data) => Network.post(\"/forward/create\", data)\nexport const getForwardList = () => Network.post(\"/forward/list\")\nexport const updateForward = (data) => Network.post(\"/forward/update\", data)\nexport const deleteForward = (id) => Network.post(\"/forward/delete\", { id })\n\n// 转发服务控制操作 - 通过Java后端接口\nexport const pauseForwardService = (forwardId) => Network.post(\"/forward/pause\", { id: forwardId })\nexport const resumeForwardService = (forwardId) => Network.post(\"/forward/resume\", { id: forwardId })\n\n// 限速规则CRUD操作 - 全部使用POST请求\nexport const createSpeedLimit = (data) => Network.post(\"/speed-limit/create\", data)\nexport const getSpeedLimitList = () => Network.post(\"/speed-limit/list\")\nexport const updateSpeedLimit = (data) => Network.post(\"/speed-limit/update\", data)\nexport const deleteSpeedLimit = (id) => Network.post(\"/speed-limit/delete\", { id })\n\n// 修改密码接口\nexport const updatePassword = (data) => Network.post(\"/user/updatePassword\", data)\n\n","<template>\n  <el-container>\n    <el-header style=\"height: 50px;\">\n      <span style=\"line-height: 50px\">管理后台</span>\n      <div class=\"header-avatar\">\n        <el-avatar style=\"margin-right: 10px\" size=\"medium\" src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"></el-avatar>\n        <el-dropdown>\n\t\t\t\t\t\t<span class=\"el-dropdown-link\"  style=\"color: white\">{{name}}</span>\n\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item @click.native=\"showPasswordDialog\">\n              <i class=\"el-icon-key\"></i>\n              修改密码\n            </el-dropdown-item>\n            <el-dropdown-item @click.native=\"logout\">\n              <i class=\"el-icon-switch-button\"></i>\n              退出登录\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </div>\n    </el-header>\n\n    <el-container>\n      <el-aside width=\"200px\">\n        <el-menu\n            :default-active=\"path\"\n            class=\"el-menu-vertical-demo\">\n\n          <router-link to=\"/index\">\n            <el-menu-item index=\"/index\" @click=\"save('/index')\">\n              <template slot=\"title\">\n                <i class=\"el-icon-box\"></i>\n                <span slot=\"title\">首页</span>\n              </template>\n            </el-menu-item>\n          </router-link>\n\n          <router-link to=\"/limit\" v-admin>\n            <el-menu-item index=\"/limit\" @click=\"save('/limit')\">\n              <template slot=\"title\">\n                <i class=\"el-icon-box\"></i>\n                <span slot=\"title\">限速管理</span>\n              </template>\n            </el-menu-item>\n          </router-link>\n\n          <router-link to=\"/forward\">\n          <el-menu-item index=\"/forward\" @click=\"save('/forward')\">\n            <template slot=\"title\">\n              <i class=\"el-icon-postcard\"></i>\n              <span slot=\"title\">转发管理</span>\n            </template>\n          </el-menu-item>\n        </router-link>\n\n          <router-link to=\"/tunnel\" v-admin>\n            <el-menu-item index=\"/tunnel\" @click=\"save('/tunnel')\">\n              <template slot=\"title\">\n                <i class=\"el-icon-postcard\"></i>\n                <span slot=\"title\">隧道管理</span>\n              </template>\n            </el-menu-item>\n          </router-link>\n\n          <router-link to=\"/node\" v-admin>\n            <el-menu-item index=\"/node\" @click=\"save('/node')\">\n              <template slot=\"title\">\n                <i class=\"el-icon-postcard\"></i>\n                <span slot=\"title\">节点监控</span>\n              </template>\n            </el-menu-item>\n          </router-link>\n\n          <router-link to=\"/user\" v-admin>\n            <el-menu-item index=\"/user\" @click=\"save('/user')\">\n              <template slot=\"title\">\n                <i class=\"el-icon-user\"></i>\n                <span slot=\"title\">用户管理</span>\n              </template>\n            </el-menu-item>\n          </router-link>\n\n        </el-menu>\n      </el-aside>\n      <el-main>\n        <div style=\"margin: 15px 15px;\">\n          <router-view/>\n\n          <div style=\"background-color: white; height: 50px; position: absolute; bottom: 0;left: 199px;right: 0;line-height: 50px; padding-left: 30px;font-size: 12px;color:#58666e;\">\n            © 2023 Copyright.\n          </div>\n        </div>\n      </el-main>\n    </el-container>\n\n    <!-- 修改密码弹窗 -->\n    <el-dialog title=\"修改密码\" :visible.sync=\"passwordDialogVisible\" width=\"400px\" :before-close=\"handlePasswordDialogClose\">\n      <el-form :model=\"passwordForm\" :rules=\"passwordRules\" ref=\"passwordForm\" label-width=\"100px\">\n        <el-form-item label=\"当前密码\" prop=\"currentPassword\">\n          <el-input v-model=\"passwordForm.currentPassword\" type=\"password\" placeholder=\"请输入当前密码\" show-password clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input v-model=\"passwordForm.newPassword\" type=\"password\" placeholder=\"请输入新密码\" show-password clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input v-model=\"passwordForm.confirmPassword\" type=\"password\" placeholder=\"请再次输入新密码\" show-password clearable></el-input>\n        </el-form-item>\n      </el-form>\n      \n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"handlePasswordDialogClose\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitPasswordChange\" :loading=\"passwordLoading\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n  </el-container>\n</template>\n\n<script>\nimport { updatePassword } from '@/api'\n\nexport default {\n  name: \"home\",\n  data(){\n    return{\n      path:'',\n      name: '',\n      // 修改密码相关数据\n      passwordDialogVisible: false,\n      passwordLoading: false,\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      passwordRules: {\n        currentPassword: [\n          { required: true, message: '请输入当前密码', trigger: 'blur' },\n          { min: 1, message: '密码不能为空', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, message: '新密码长度不能少于6位', trigger: 'blur' },\n          { max: 20, message: '新密码长度不能超过20位', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\n          { validator: this.validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.path = localStorage.getItem('e')\n    this.name = localStorage.getItem(\"name\")\n  },\n  methods:{\n    save(e){\n      localStorage.setItem('e',e)\n      this.path = e\n    },\n    logout(){\n      localStorage.clear()\n      this.$router.push(\"/login\")\n    },\n    // 显示修改密码弹窗\n    showPasswordDialog() {\n      this.passwordDialogVisible = true\n    },\n    // 关闭修改密码弹窗\n    handlePasswordDialogClose() {\n      this.passwordDialogVisible = false\n      this.resetPasswordForm()\n    },\n    // 重置修改密码表单\n    resetPasswordForm() {\n      this.passwordForm = {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      }\n      if (this.$refs.passwordForm) {\n        this.$refs.passwordForm.clearValidate()\n      }\n    },\n    // 确认密码验证器\n    validateConfirmPassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.passwordForm.newPassword) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    },\n    // 提交密码修改\n    async submitPasswordChange() {\n      try {\n        // 表单验证\n        await this.$refs.passwordForm.validate()\n        \n        this.passwordLoading = true\n        \n        // 调用修改密码接口\n        const response = await updatePassword(this.passwordForm)\n        \n        if (response.code === 0) {\n          this.$message.success(response.msg || '密码修改成功')\n          this.handlePasswordDialogClose()\n          \n          // 提示用户重新登录\n          this.$confirm('密码修改成功，请重新登录', '提示', {\n            confirmButtonText: '确定',\n            type: 'success',\n            showCancelButton: false\n          }).then(() => {\n            this.logout()\n          }).catch(() => {\n            this.logout()\n          })\n        } else {\n          this.$message.error(response.msg || '密码修改失败')\n        }\n      } catch (error) {\n        if (error !== 'validate') {\n          this.$message.error('修改密码时发生错误')\n          console.error('修改密码错误:', error)\n        }\n      } finally {\n        this.passwordLoading = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-container {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n}\n\n.header-avatar {\n  float: right;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.el-dropdown-link {\n  cursor: pointer;\n}\n\n.el-header {\n  background-color: #2F54EB;\n  color: white;\n  line-height: 50px;\n}\n\n.el-aside {\n  color: white;\n  line-height: 200px;\n}\n\n.el-main {\n  padding: 0;\n  height: calc(100vh - 100px);\n}\n\na {\n  text-decoration: none;\n}\n.el-menu-vertical-demo {\n  height: 100%;\n}\n\n/* 修改密码弹窗样式 */\n.dialog-footer {\n  text-align: right;\n}\n\n.el-dialog__body {\n  padding: 20px;\n}\n\n.el-form-item {\n  margin-bottom: 22px;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=ddcf7afa&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=ddcf7afa&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ddcf7afa\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"login-container\"},[_vm._m(0),_c('div',{staticClass:\"login-wrapper\"},[_c('div',{staticClass:\"login-form-container\"},[_c('div',{staticClass:\"login-form\"},[_vm._m(1),_c('el-form',{ref:\"loginForm\",staticClass:\"login-form-content\",attrs:{\"model\":_vm.loginForm,\"rules\":_vm.rules},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleLogin.apply(null, arguments)}}},[_c('el-form-item',{attrs:{\"prop\":\"username\"}},[_c('div',{staticClass:\"input-wrapper\"},[_c('el-input',{staticClass:\"custom-input\",attrs:{\"prefix-icon\":\"el-icon-user\",\"placeholder\":\"请输入用户名\",\"clearable\":\"\",\"size\":\"large\"},model:{value:(_vm.loginForm.username),callback:function ($$v) {_vm.$set(_vm.loginForm, \"username\", $$v)},expression:\"loginForm.username\"}})],1)]),_c('el-form-item',{attrs:{\"prop\":\"password\"}},[_c('div',{staticClass:\"input-wrapper\"},[_c('el-input',{staticClass:\"custom-input\",attrs:{\"prefix-icon\":\"el-icon-lock\",\"placeholder\":\"请输入密码\",\"show-password\":\"\",\"size\":\"large\"},model:{value:(_vm.loginForm.password),callback:function ($$v) {_vm.$set(_vm.loginForm, \"password\", $$v)},expression:\"loginForm.password\"}})],1)]),_c('el-form-item',{staticClass:\"login-btn-item\"},[_c('el-button',{staticClass:\"login-btn\",attrs:{\"type\":\"primary\",\"loading\":_vm.loading,\"size\":\"large\"},on:{\"click\":_vm.handleLogin}},[(!_vm.loading)?_c('span',[_vm._v(\"立即登录\")]):_c('span',[_vm._v(\"登录中...\")])])],1)],1),_vm._m(2)],1)])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg-decoration\"},[_c('div',{staticClass:\"circle circle-1\"}),_c('div',{staticClass:\"circle circle-2\"}),_c('div',{staticClass:\"circle circle-3\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"form-header\"},[_c('h2',{staticClass:\"form-title\"},[_vm._v(\"账户登录\")]),_c('p',{staticClass:\"form-subtitle\"},[_vm._v(\"请输入您的登录凭据\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"form-footer\"},[_c('p',{staticClass:\"copyright\"},[_vm._v(\"© 2024 管理系统. All rights reserved.\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"login-container\">\n    <!-- 背景装饰 -->\n    <div class=\"bg-decoration\">\n      <div class=\"circle circle-1\"></div>\n      <div class=\"circle circle-2\"></div>\n      <div class=\"circle circle-3\"></div>\n    </div>\n    \n    <!-- 主要内容区域 -->\n    <div class=\"login-wrapper\">\n      <!-- 登录表单 -->\n      <div class=\"login-form-container\">\n        <div class=\"login-form\">\n          <div class=\"form-header\">\n            <h2 class=\"form-title\">账户登录</h2>\n            <p class=\"form-subtitle\">请输入您的登录凭据</p>\n          </div>\n          \n          <el-form \n            :model=\"loginForm\" \n            :rules=\"rules\" \n            ref=\"loginForm\" \n            @keyup.enter.native=\"handleLogin\"\n            class=\"login-form-content\"\n          >\n            <el-form-item prop=\"username\">\n              <div class=\"input-wrapper\">\n                <el-input \n                  v-model=\"loginForm.username\" \n                  prefix-icon=\"el-icon-user\" \n                  placeholder=\"请输入用户名\" \n                  clearable\n                  size=\"large\"\n                  class=\"custom-input\"\n                ></el-input>\n              </div>\n            </el-form-item>\n            \n            <el-form-item prop=\"password\">\n              <div class=\"input-wrapper\">\n                <el-input \n                  v-model=\"loginForm.password\" \n                  prefix-icon=\"el-icon-lock\" \n                  placeholder=\"请输入密码\" \n                  show-password\n                  size=\"large\"\n                  class=\"custom-input\"\n                ></el-input>\n              </div>\n            </el-form-item>\n            \n            <el-form-item class=\"login-btn-item\">\n              <el-button \n                type=\"primary\" \n                :loading=\"loading\" \n                @click=\"handleLogin\" \n                class=\"login-btn\"\n                size=\"large\"\n              >\n                <span v-if=\"!loading\">立即登录</span>\n                <span v-else>登录中...</span>\n              </el-button>\n            </el-form-item>\n          </el-form>\n          \n          <div class=\"form-footer\">\n            <p class=\"copyright\">© 2024 管理系统. All rights reserved.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {login} from \"@/api\";\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度至少6位', trigger: 'blur' }\n        ]\n      },\n      loading: false\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          login(this.loginForm).then(res=>{\n            this.loading = false\n            if (res.code !== 0) return this.$message.error(res.msg)\n            localStorage.setItem('token', res.data.token);\n            localStorage.setItem(\"e\", '/index')\n            localStorage.setItem(\"role_id\", res.data.role_id)\n            localStorage.setItem(\"name\", res.data.name)\n            this.$message.success('登录成功');\n            this.$router.push(\"/index\");\n          }).catch(() => {\n            this.loading = false;\n          })\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  width: 100vw;\n  position: relative;\n  overflow: hidden;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 背景装饰 */\n.bg-decoration {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  z-index: 1;\n}\n\n.circle {\n  position: absolute;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.1);\n  animation: float 6s ease-in-out infinite;\n}\n\n.circle-1 {\n  width: 200px;\n  height: 200px;\n  top: 10%;\n  left: 10%;\n  animation-delay: 0s;\n}\n\n.circle-2 {\n  width: 150px;\n  height: 150px;\n  top: 60%;\n  right: 15%;\n  animation-delay: 2s;\n}\n\n.circle-3 {\n  width: 100px;\n  height: 100px;\n  bottom: 20%;\n  left: 20%;\n  animation-delay: 4s;\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-20px) rotate(180deg); }\n}\n\n/* 主要内容区域 */\n.login-wrapper {\n  position: relative;\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 500px;\n}\n\n/* 登录表单 */\n.login-form-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n}\n\n.login-form {\n  width: 100%;\n  max-width: 400px;\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  padding: 40px;\n  backdrop-filter: blur(10px);\n}\n\n.form-header {\n  text-align: center;\n  margin-bottom: 40px;\n}\n\n.form-title {\n  font-size: 2rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 0.5rem;\n}\n\n.form-subtitle {\n  color: #6b7280;\n  font-size: 1rem;\n  margin: 0;\n}\n\n.login-form-content {\n  margin-bottom: 30px;\n}\n\n.input-wrapper {\n  position: relative;\n  margin-bottom: 20px;\n}\n\n/* 自定义输入框样式 */\n.custom-input >>> .el-input__inner {\n  height: 50px;\n  border-radius: 12px;\n  border: 2px solid #e5e7eb;\n  font-size: 16px;\n  padding-left: 45px;\n  transition: all 0.3s ease;\n  background: #f9fafb;\n}\n\n.custom-input >>> .el-input__inner:focus {\n  border-color: #667eea;\n  background: white;\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n}\n\n.custom-input >>> .el-input__prefix {\n  left: 15px;\n  color: #6b7280;\n}\n\n.custom-input >>> .el-input__suffix {\n  right: 15px;\n}\n\n/* 登录按钮 */\n.login-btn-item {\n  margin-bottom: 0;\n}\n\n.login-btn {\n  width: 100%;\n  height: 50px;\n  border-radius: 12px;\n  font-size: 16px;\n  font-weight: 600;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border: none;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\n}\n\n.login-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);\n}\n\n.login-btn:active {\n  transform: translateY(0);\n}\n\n/* 表单底部 */\n.form-footer {\n  text-align: center;\n  margin-top: 30px;\n}\n\n.copyright {\n  color: #9ca3af;\n  font-size: 0.875rem;\n  margin: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .login-form-container {\n    padding: 20px;\n  }\n  \n  .login-form {\n    padding: 30px 20px;\n  }\n  \n  .form-title {\n    font-size: 1.5rem;\n  }\n}\n\n/* 表单验证错误样式 */\n.login-form-content >>> .el-form-item__error {\n  font-size: 14px;\n  color: #ef4444;\n  margin-top: 5px;\n}\n\n/* 加载状态 */\n.login-btn.is-loading {\n  pointer-events: none;\n}\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=354d4782&scoped=true\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=354d4782&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"354d4782\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"package-container\"},[_c('div',{staticClass:\"overview-section\"},[_c('div',{staticClass:\"overview-card\"},[_c('div',{staticClass:\"card-header\"},[_c('h3',[_vm._v(\"账户概览\")]),(_vm.userInfo.expTime)?_c('el-tag',{attrs:{\"type\":_vm.getExpStatus(_vm.userInfo.expTime).type}},[_vm._v(\" \"+_vm._s(_vm.getExpStatus(_vm.userInfo.expTime).text)+\" \")]):_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"永久账户\")])],1),_c('div',{staticClass:\"overview-stats\"},[_c('div',{staticClass:\"stat-item\"},[_vm._m(0),_c('div',{staticClass:\"stat-content\"},[_c('div',{staticClass:\"stat-value\"},[_vm._v(_vm._s(_vm.formatFlow(_vm.userInfo.flow, 'gb')))]),_c('div',{staticClass:\"stat-label\"},[_vm._v(\"总流量配额\")])])]),_c('div',{staticClass:\"stat-item\"},[_vm._m(1),_c('div',{staticClass:\"stat-content\"},[_c('div',{staticClass:\"stat-value\"},[_vm._v(_vm._s(_vm.formatFlow(_vm.calculateUserTotalUsedFlow())))]),_c('div',{staticClass:\"stat-label\"},[_vm._v(\"已用流量\")])])]),_c('div',{staticClass:\"stat-item\"},[_vm._m(2),_c('div',{staticClass:\"stat-content\"},[_c('div',{staticClass:\"stat-value\"},[_vm._v(_vm._s(_vm.userInfo.num || 0))]),_c('div',{staticClass:\"stat-label\"},[_vm._v(\"转发配额\")])])]),_c('div',{staticClass:\"stat-item\"},[_vm._m(3),_c('div',{staticClass:\"stat-content\"},[_c('div',{staticClass:\"stat-value\"},[_vm._v(_vm._s(_vm.totalUsedForwards))]),_c('div',{staticClass:\"stat-label\"},[_vm._v(\"已用转发\")])])]),(_vm.userInfo.flowResetTime)?_c('div',{staticClass:\"stat-item\"},[_vm._m(4),_c('div',{staticClass:\"stat-content\"},[_c('div',{staticClass:\"stat-value\"},[_vm._v(_vm._s(_vm.formatResetTime(_vm.userInfo.flowResetTime)))]),_c('div',{staticClass:\"stat-label\"},[_vm._v(\"流量重置时间\")])])]):_vm._e()]),(_vm.userInfo.flow > 0)?_c('div',{staticClass:\"progress-section\"},[_c('div',{staticClass:\"progress-item\"},[_c('div',{staticClass:\"progress-header\"},[_c('span',[_vm._v(\"流量使用率\")]),_c('span',[_vm._v(_vm._s(_vm.calculateUsagePercentage('flow').toFixed(1))+\"%\")])]),_c('el-progress',{attrs:{\"percentage\":_vm.calculateUsagePercentage('flow'),\"status\":_vm.getUsageStatus('flow'),\"stroke-width\":8}})],1),_c('div',{staticClass:\"progress-item\"},[_c('div',{staticClass:\"progress-header\"},[_c('span',[_vm._v(\"转发使用率\")]),_c('span',[_vm._v(_vm._s(_vm.calculateUsagePercentage('forwards').toFixed(1))+\"%\")])]),_c('el-progress',{attrs:{\"percentage\":_vm.calculateUsagePercentage('forwards'),\"status\":_vm.getUsageStatus('forwards'),\"stroke-width\":8}})],1)]):_vm._e()])]),_c('div',{staticClass:\"tunnels-section\"},[_c('h3',{staticClass:\"section-title\"},[_vm._v(\"隧道权限\")]),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"tunnels-grid\"},[(_vm.userTunnels.length === 0 && !_vm.loading)?_c('div',{staticClass:\"empty-state\"},[_c('el-empty',{attrs:{\"description\":\"暂无隧道权限\"}})],1):_vm._e(),_vm._l((_vm.userTunnels),function(tunnel){return _c('div',{key:tunnel.id,staticClass:\"tunnel-card\"},[_c('div',{staticClass:\"tunnel-header\"},[_c('div',{staticClass:\"tunnel-name\"},[_c('i',{staticClass:\"el-icon-link\"}),_vm._v(\" \"+_vm._s(tunnel.tunnelName)+\" \")]),_c('div',{staticClass:\"tunnel-status\"},[(tunnel.expTime)?_c('el-tag',{attrs:{\"type\":_vm.getTunnelExpStatus(tunnel.expTime).type,\"size\":\"mini\"}},[_vm._v(\" \"+_vm._s(_vm.getTunnelExpStatus(tunnel.expTime).text)+\" \")]):_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"mini\"}},[_vm._v(\"永久\")]),(tunnel.tunnelFlow === 1)?_c('el-tag',{attrs:{\"type\":\"info\",\"size\":\"mini\"}},[_vm._v(\"单向计费\")]):_c('el-tag',{attrs:{\"type\":\"warning\",\"size\":\"mini\"}},[_vm._v(\"双向计费\")])],1)]),_c('div',{staticClass:\"tunnel-stats\"},[_c('div',{staticClass:\"tunnel-stat-row\"},[_c('div',{staticClass:\"tunnel-stat-item\"},[_c('span',{staticClass:\"stat-label\"},[_vm._v(\"流量配额:\")]),_c('span',{staticClass:\"stat-value\"},[_vm._v(_vm._s(_vm.formatFlow(tunnel.flow, 'gb')))])]),_c('div',{staticClass:\"tunnel-stat-item\"},[_c('span',{staticClass:\"stat-label\"},[_vm._v(\"已用流量:\")]),_c('span',{staticClass:\"stat-value used\"},[_vm._v(_vm._s(_vm.formatFlow(_vm.calculateTunnelUsedFlow(tunnel))))])])]),_c('div',{staticClass:\"tunnel-stat-row\"},[_c('div',{staticClass:\"tunnel-stat-item\"},[_c('span',{staticClass:\"stat-label\"},[_vm._v(\"转发配额:\")]),_c('span',{staticClass:\"stat-value\"},[_vm._v(_vm._s(tunnel.num))])]),_c('div',{staticClass:\"tunnel-stat-item\"},[_c('span',{staticClass:\"stat-label\"},[_vm._v(\"已用转发:\")]),_c('span',{staticClass:\"stat-value used\"},[_vm._v(_vm._s(_vm.getTunnelUsedForwards(tunnel.tunnelId)))])])])]),_c('div',{staticClass:\"tunnel-progress\"},[_c('div',{staticClass:\"progress-mini\"},[_c('div',{staticClass:\"progress-mini-header\"},[_c('span',[_vm._v(\"流量使用\")]),_c('span',[_vm._v(_vm._s(_vm.calculateTunnelFlowPercentage(tunnel).toFixed(1))+\"%\")])]),_c('el-progress',{attrs:{\"percentage\":_vm.calculateTunnelFlowPercentage(tunnel),\"status\":_vm.getTunnelFlowStatus(tunnel),\"stroke-width\":6,\"show-text\":false}})],1),_c('div',{staticClass:\"progress-mini\"},[_c('div',{staticClass:\"progress-mini-header\"},[_c('span',[_vm._v(\"转发使用\")]),_c('span',[_vm._v(_vm._s(_vm.calculateTunnelForwardPercentage(tunnel).toFixed(1))+\"%\")])]),_c('el-progress',{attrs:{\"percentage\":_vm.calculateTunnelForwardPercentage(tunnel),\"status\":_vm.getTunnelForwardStatus(tunnel),\"stroke-width\":6,\"show-text\":false}})],1)]),(tunnel.flowResetTime)?_c('div',{staticClass:\"tunnel-footer\"},[_c('span',{staticClass:\"reset-time\"},[_c('i',{staticClass:\"el-icon-time\"}),_vm._v(\" 流量重置: \"+_vm._s(_vm._f(\"dateFormat\")(new Date(tunnel.flowResetTime)))+\" \")])]):_vm._e()])})],2)]),_c('div',{staticClass:\"forwards-section\"},[_c('h3',{staticClass:\"section-title\"},[_vm._v(\"转发详情\")]),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"forwards-container\"},[(_vm.groupedForwards.length === 0 && !_vm.loading)?_c('div',{staticClass:\"empty-state\"},[_c('el-empty',{attrs:{\"description\":\"暂无转发配置\"}})],1):_vm._e(),_vm._l((_vm.groupedForwards),function(group){return _c('div',{key:group.tunnelName,staticClass:\"forward-group\"},[_c('div',{staticClass:\"group-header\"},[_c('h4',[_vm._v(_vm._s(group.tunnelName))]),_c('el-tag',{attrs:{\"type\":\"info\",\"size\":\"mini\"}},[_vm._v(_vm._s(group.forwards.length)+\" 个转发\")])],1),_c('div',{staticClass:\"forward-list\"},_vm._l((group.forwards),function(forward){return _c('div',{key:forward.id,staticClass:\"forward-item\"},[_c('div',{staticClass:\"forward-info\"},[_c('div',{staticClass:\"forward-name\"},[_vm._v(_vm._s(forward.name))]),_c('div',{staticClass:\"forward-address\"},[_c('div',{staticClass:\"address-source\"},[_vm._v(_vm._s(forward.inIp)+\":\"+_vm._s(forward.inPort))]),_c('div',{staticClass:\"address-arrow\"},[_vm._v(\"↓\")]),_c('div',{staticClass:\"address-target\"},[_vm._v(_vm._s(forward.remoteAddr))])])]),_c('div',{staticClass:\"forward-traffic\"},[_c('div',{staticClass:\"traffic-item\"},[_c('span',{staticClass:\"traffic-label\"},[_vm._v(\"入站:\")]),_c('span',{staticClass:\"traffic-value in\"},[_vm._v(_vm._s(_vm.formatFlow(forward.inFlow || 0)))])]),_c('div',{staticClass:\"traffic-item\"},[_c('span',{staticClass:\"traffic-label\"},[_vm._v(\"出站:\")]),_c('span',{staticClass:\"traffic-value out\"},[_vm._v(_vm._s(_vm.formatFlow(forward.outFlow || 0)))])]),_c('div',{staticClass:\"traffic-item total\"},[_c('span',{staticClass:\"traffic-label\"},[_vm._v(\"计费:\")]),_c('span',{staticClass:\"traffic-value total\"},[_vm._v(_vm._s(_vm.formatFlow(_vm.calculateForwardBillingFlow(forward))))])])])])}),0)])})],2)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-icon\"},[_c('i',{staticClass:\"el-icon-pie-chart\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-icon\"},[_c('i',{staticClass:\"el-icon-upload\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-icon\"},[_c('i',{staticClass:\"el-icon-connection\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-icon\"},[_c('i',{staticClass:\"el-icon-s-operation\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-icon\"},[_c('i',{staticClass:\"el-icon-refresh\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"package-container\">\n\n    <div class=\"overview-section\">\n      <div class=\"overview-card\">\n        <div class=\"card-header\">\n          <h3>账户概览</h3>\n          <el-tag v-if=\"userInfo.expTime\" :type=\"getExpStatus(userInfo.expTime).type\">\n            {{ getExpStatus(userInfo.expTime).text }}\n          </el-tag>\n          <el-tag v-else type=\"success\">永久账户</el-tag>\n        </div>\n        <div class=\"overview-stats\">\n          <div class=\"stat-item\">\n            <div class=\"stat-icon\">\n              <i class=\"el-icon-pie-chart\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">{{ formatFlow(userInfo.flow, 'gb') }}</div>\n              <div class=\"stat-label\">总流量配额</div>\n            </div>\n          </div>\n          <div class=\"stat-item\">\n            <div class=\"stat-icon\">\n              <i class=\"el-icon-upload\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">{{ formatFlow(calculateUserTotalUsedFlow()) }}</div>\n              <div class=\"stat-label\">已用流量</div>\n            </div>\n          </div>\n          <div class=\"stat-item\">\n            <div class=\"stat-icon\">\n              <i class=\"el-icon-connection\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">{{ userInfo.num || 0 }}</div>\n              <div class=\"stat-label\">转发配额</div>\n            </div>\n          </div>\n          <div class=\"stat-item\">\n            <div class=\"stat-icon\">\n              <i class=\"el-icon-s-operation\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">{{ totalUsedForwards }}</div>\n              <div class=\"stat-label\">已用转发</div>\n            </div>\n          </div>\n          <div class=\"stat-item\" v-if=\"userInfo.flowResetTime\">\n            <div class=\"stat-icon\">\n              <i class=\"el-icon-refresh\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">{{ formatResetTime(userInfo.flowResetTime) }}</div>\n              <div class=\"stat-label\">流量重置时间</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"progress-section\" v-if=\"userInfo.flow > 0\">\n          <div class=\"progress-item\">\n            <div class=\"progress-header\">\n              <span>流量使用率</span>\n              <span>{{ calculateUsagePercentage('flow').toFixed(1) }}%</span>\n            </div>\n            <el-progress\n                :percentage=\"calculateUsagePercentage('flow')\"\n                :status=\"getUsageStatus('flow')\"\n                :stroke-width=\"8\"\n            ></el-progress>\n          </div>\n          <div class=\"progress-item\">\n            <div class=\"progress-header\">\n              <span>转发使用率</span>\n              <span>{{ calculateUsagePercentage('forwards').toFixed(1) }}%</span>\n            </div>\n            <el-progress\n                :percentage=\"calculateUsagePercentage('forwards')\"\n                :status=\"getUsageStatus('forwards')\"\n                :stroke-width=\"8\"\n            ></el-progress>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 隧道权限列表 -->\n    <div class=\"tunnels-section\">\n      <h3 class=\"section-title\">隧道权限</h3>\n      <div v-loading=\"loading\" class=\"tunnels-grid\">\n        <div v-if=\"userTunnels.length === 0 && !loading\" class=\"empty-state\">\n          <el-empty description=\"暂无隧道权限\"></el-empty>\n        </div>\n\n        <div\n            v-for=\"tunnel in userTunnels\"\n            :key=\"tunnel.id\"\n            class=\"tunnel-card\"\n        >\n          <div class=\"tunnel-header\">\n            <div class=\"tunnel-name\">\n              <i class=\"el-icon-link\"></i>\n              {{ tunnel.tunnelName }}\n            </div>\n            <div class=\"tunnel-status\">\n              <el-tag v-if=\"tunnel.expTime\" :type=\"getTunnelExpStatus(tunnel.expTime).type\" size=\"mini\">\n                {{ getTunnelExpStatus(tunnel.expTime).text }}\n              </el-tag>\n              <el-tag v-else type=\"success\" size=\"mini\">永久</el-tag>\n              <el-tag v-if=\"tunnel.tunnelFlow === 1\" type=\"info\" size=\"mini\">单向计费</el-tag>\n              <el-tag v-else type=\"warning\" size=\"mini\">双向计费</el-tag>\n            </div>\n          </div>\n\n          <div class=\"tunnel-stats\">\n            <div class=\"tunnel-stat-row\">\n              <div class=\"tunnel-stat-item\">\n                <span class=\"stat-label\">流量配额:</span>\n                <span class=\"stat-value\">{{ formatFlow(tunnel.flow, 'gb') }}</span>\n              </div>\n              <div class=\"tunnel-stat-item\">\n                <span class=\"stat-label\">已用流量:</span>\n                <span class=\"stat-value used\">{{ formatFlow(calculateTunnelUsedFlow(tunnel)) }}</span>\n              </div>\n            </div>\n            <div class=\"tunnel-stat-row\">\n              <div class=\"tunnel-stat-item\">\n                <span class=\"stat-label\">转发配额:</span>\n                <span class=\"stat-value\">{{ tunnel.num }}</span>\n              </div>\n              <div class=\"tunnel-stat-item\">\n                <span class=\"stat-label\">已用转发:</span>\n                <span class=\"stat-value used\">{{ getTunnelUsedForwards(tunnel.tunnelId) }}</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"tunnel-progress\">\n            <div class=\"progress-mini\">\n              <div class=\"progress-mini-header\">\n                <span>流量使用</span>\n                <span>{{ calculateTunnelFlowPercentage(tunnel).toFixed(1) }}%</span>\n              </div>\n              <el-progress\n                  :percentage=\"calculateTunnelFlowPercentage(tunnel)\"\n                  :status=\"getTunnelFlowStatus(tunnel)\"\n                  :stroke-width=\"6\"\n                  :show-text=\"false\"\n              ></el-progress>\n            </div>\n            <div class=\"progress-mini\">\n              <div class=\"progress-mini-header\">\n                <span>转发使用</span>\n                <span>{{ calculateTunnelForwardPercentage(tunnel).toFixed(1) }}%</span>\n              </div>\n              <el-progress\n                  :percentage=\"calculateTunnelForwardPercentage(tunnel)\"\n                  :status=\"getTunnelForwardStatus(tunnel)\"\n                  :stroke-width=\"6\"\n                  :show-text=\"false\"\n              ></el-progress>\n            </div>\n          </div>\n\n          <!-- 流量重置时间 -->\n          <div class=\"tunnel-footer\" v-if=\"tunnel.flowResetTime\">\n            <span class=\"reset-time\">\n              <i class=\"el-icon-time\"></i>\n              流量重置: {{ new Date(tunnel.flowResetTime) | dateFormat }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 转发详情 -->\n    <div class=\"forwards-section\">\n      <h3 class=\"section-title\">转发详情</h3>\n      <div v-loading=\"loading\" class=\"forwards-container\">\n        <div v-if=\"groupedForwards.length === 0 && !loading\" class=\"empty-state\">\n          <el-empty description=\"暂无转发配置\"></el-empty>\n        </div>\n\n        <div v-for=\"group in groupedForwards\" :key=\"group.tunnelName\" class=\"forward-group\">\n          <div class=\"group-header\">\n            <h4>{{ group.tunnelName }}</h4>\n            <el-tag type=\"info\" size=\"mini\">{{ group.forwards.length }} 个转发</el-tag>\n          </div>\n          <div class=\"forward-list\">\n            <div v-for=\"forward in group.forwards\" :key=\"forward.id\" class=\"forward-item\">\n              <div class=\"forward-info\">\n                <div class=\"forward-name\">{{ forward.name }}</div>\n                <div class=\"forward-address\">\n                  <div class=\"address-source\">{{ forward.inIp }}:{{ forward.inPort }}</div>\n                  <div class=\"address-arrow\">↓</div>\n                  <div class=\"address-target\">{{ forward.remoteAddr }}</div>\n                </div>\n              </div>\n              <div class=\"forward-traffic\">\n                <div class=\"traffic-item\">\n                  <span class=\"traffic-label\">入站:</span>\n                  <span class=\"traffic-value in\">{{ formatFlow(forward.inFlow || 0) }}</span>\n                </div>\n                <div class=\"traffic-item\">\n                  <span class=\"traffic-label\">出站:</span>\n                  <span class=\"traffic-value out\">{{ formatFlow(forward.outFlow || 0) }}</span>\n                </div>\n                <div class=\"traffic-item total\">\n                  <span class=\"traffic-label\">计费:</span>\n                  <span class=\"traffic-value total\">{{ formatFlow(calculateForwardBillingFlow(forward)) }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getUserPackageInfo } from \"@/api\";\n\nexport default {\n  name: \"Index\",\n  data() {\n    return {\n      refreshLoading: false,\n      loading: false,\n      userInfo: {},\n      userTunnels: [],\n      forwardList: [],\n    };\n  },\n  computed: {\n    totalUsedForwards() {\n      return this.forwardList.length;\n    },\n\n    groupedForwards() {\n      const groups = {};\n      this.forwardList.forEach(forward => {\n        const tunnelName = forward.tunnelName || '未知隧道';\n        if (!groups[tunnelName]) {\n          groups[tunnelName] = {\n            tunnelName,\n            forwards: []\n          };\n        }\n        groups[tunnelName].forwards.push(forward);\n      });\n      return Object.values(groups);\n    }\n  },\n  mounted() {\n    this.loadPackageData();\n  },\n  methods: {\n    async loadPackageData() {\n      this.loading = true;\n      try {\n        const res = await getUserPackageInfo();\n        if (res.code === 0) {\n          const data = res.data;\n          this.userInfo = data.userInfo;\n          this.userTunnels = data.tunnelPermissions || [];\n          this.forwardList = data.forwards || [];\n        } else {\n          this.$message.error(res.msg || '获取套餐信息失败');\n        }\n      } catch (error) {\n        console.error('获取套餐信息失败:', error);\n        this.$message.error('获取套餐信息失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async refreshData() {\n      this.refreshLoading = true;\n      try {\n        await this.loadPackageData();\n        this.$message.success('数据刷新成功');\n      } catch (error) {\n        this.$message.error('数据刷新失败');\n      } finally {\n        this.refreshLoading = false;\n      }\n    },\n\n    formatFlow(value, unit = 'bytes') {\n      if (unit === 'gb') {\n        return value + ' GB';\n      } else {\n        if (value === 0) return '0 B';\n        if (value < 1024) return value + ' B';\n        if (value < 1024 * 1024) return (value / 1024).toFixed(2) + ' KB';\n        if (value < 1024 * 1024 * 1024) return (value / (1024 * 1024)).toFixed(2) + ' MB';\n        return (value / (1024 * 1024 * 1024)).toFixed(2) + ' GB';\n      }\n    },\n\n    getExpStatus(expTime) {\n      const now = new Date();\n      const expDate = new Date(expTime);\n\n      if (expDate < now) {\n        return { type: 'danger', text: '已过期' };\n      }\n\n      const diffTime = expDate - now;\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n      if (diffDays <= 7) {\n        return { type: 'danger', text: `${diffDays}天后过期` };\n      } else if (diffDays <= 30) {\n        return { type: 'warning', text: `${diffDays}天后过期` };\n      } else {\n        return { type: 'success', text: '有效期充足' };\n      }\n    },\n\n    getTunnelExpStatus(expTime) {\n      return this.getExpStatus(expTime);\n    },\n\n    calculateUsagePercentage(type) {\n      if (type === 'flow') {\n        const totalUsed = this.calculateUserTotalUsedFlow();\n        const totalLimit = (this.userInfo.flow || 0) * 1024 * 1024 * 1024;\n        return totalLimit > 0 ? Math.min((totalUsed / totalLimit) * 100, 100) : 0;\n      } else if (type === 'forwards') {\n        const totalUsed = this.totalUsedForwards;\n        const totalLimit = this.userInfo.num || 0;\n        return totalLimit > 0 ? Math.min((totalUsed / totalLimit) * 100, 100) : 0;\n      }\n      return 0;\n    },\n\n    getUsageStatus(type) {\n      const percentage = this.calculateUsagePercentage(type);\n      if (percentage >= 90) return 'exception';\n      if (percentage >= 70) return 'warning';\n      return 'success';\n    },\n\n    calculateTunnelFlowPercentage(tunnel) {\n      const totalUsed = this.calculateTunnelUsedFlow(tunnel);\n      const totalLimit = (tunnel.flow || 0) * 1024 * 1024 * 1024;\n      return totalLimit > 0 ? Math.min((totalUsed / totalLimit) * 100, 100) : 0;\n    },\n\n    calculateTunnelForwardPercentage(tunnel) {\n      const totalUsed = this.getTunnelUsedForwards(tunnel.tunnelId);\n      const totalLimit = tunnel.num || 0;\n      return totalLimit > 0 ? Math.min((totalUsed / totalLimit) * 100, 100) : 0;\n    },\n\n    getTunnelFlowStatus(tunnel) {\n      const percentage = this.calculateTunnelFlowPercentage(tunnel);\n      if (percentage >= 90) return 'exception';\n      if (percentage >= 70) return 'warning';\n      return 'success';\n    },\n\n    getTunnelForwardStatus(tunnel) {\n      const percentage = this.calculateTunnelForwardPercentage(tunnel);\n      if (percentage >= 90) return 'exception';\n      if (percentage >= 70) return 'warning';\n      return 'success';\n    },\n\n    getTunnelUsedForwards(tunnelId) {\n      return this.forwardList.filter(forward => forward.tunnelId === tunnelId).length;\n    },\n\n         /**\n      * 计算隧道已用流量\n      * 根据隧道的流量计算类型（tunnelFlow）决定单向还是双向计算\n      */\n     calculateTunnelUsedFlow(tunnel) {\n       if (!tunnel) return 0;\n       \n       const inFlow = tunnel.inFlow || 0;   // 下载流量\n       const outFlow = tunnel.outFlow || 0; // 上传流量\n       \n       // tunnelFlow: 1-单向计算（仅上传），2-双向计算（上传+下载）\n       if (tunnel.tunnelFlow === 1) {\n         // 单向计算：只计算上传流量（outFlow）\n         return outFlow;\n       } else {\n         // 双向计算或默认：计算上传和下载的总流量\n         return inFlow + outFlow;\n       }\n     },\n\n         /**\n      * 计算用户总已用流量\n      * 直接使用后端计算好的用户流量统计\n      */\n         calculateUserTotalUsedFlow() {\n      // 后端已经根据隧道类型计算了实际流量，直接使用\n      return (this.userInfo.inFlow || 0) + (this.userInfo.outFlow || 0);\n    },\n\n    // 格式化重置时间显示\n    formatResetTime(resetDay) {\n      if (!resetDay) return '未设置';\n      \n      // 获取当前日期\n      const now = new Date();\n      const currentDay = now.getDate();\n      \n      // 计算下次重置还有多少天\n      let daysUntilReset;\n      if (resetDay > currentDay) {\n        daysUntilReset = resetDay - currentDay;\n      } else if (resetDay < currentDay) {\n        // 下个月的重置日\n        const nextMonth = new Date(now.getFullYear(), now.getMonth() + 1, resetDay);\n        const diffTime = nextMonth - now;\n        daysUntilReset = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      } else {\n        // 今天就是重置日\n        daysUntilReset = 0;\n      }\n      \n      if (daysUntilReset === 0) {\n        return `今天重置（${resetDay}号）`;\n      } else if (daysUntilReset === 1) {\n        return `明天重置（${resetDay}号）`;\n      } else {\n        return `${daysUntilReset}天后重置（${resetDay}号）`;\n      }\n    },\n\n           /**\n       * 计算转发的计费流量\n       * 根据对应隧道的流量计算类型决定单向还是双向计算\n       */\n      calculateForwardBillingFlow(forward) {\n        if (!forward) return 0;\n        \n        // 查找对应的隧道\n        const tunnel = this.userTunnels.find(t => t.tunnelId === forward.tunnelId);\n        if (!tunnel) {\n          // 如果找不到隧道信息，默认使用双向计算\n          return (forward.inFlow || 0) + (forward.outFlow || 0);\n        }\n        \n        const inFlow = forward.inFlow || 0;   // 下载流量\n        const outFlow = forward.outFlow || 0; // 上传流量\n        \n        // 根据隧道的流量计算类型\n        if (tunnel.tunnelFlow === 1) {\n          // 单向计算：只计算上传流量（outFlow）\n          return outFlow;\n        } else {\n          // 双向计算：计算上传和下载的总流量\n          return inFlow + outFlow;\n        }\n      }\n  },\n\n  filters: {\n    dateFormat(value) {\n      if (!value) return '';\n      const date = new Date(value);\n      return date.toLocaleString();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.package-container {\n  padding: 20px;\n  background-color: #f5f5f5;\n  min-height: 100vh;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 20px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n}\n\n.overview-section {\n  margin-bottom: 24px;\n}\n\n.overview-card {\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n}\n\n.overview-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  margin-bottom: 24px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n}\n\n.stat-icon {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 16px;\n}\n\n.stat-icon i {\n  font-size: 24px;\n  color: white;\n}\n\n.stat-content {\n  flex: 1;\n}\n\n.stat-value {\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n  line-height: 1.2;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #666;\n  margin-top: 4px;\n}\n\n.progress-section {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n}\n\n.progress-item {\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n}\n\n.progress-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n  font-weight: 500;\n}\n\n.section-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 16px;\n}\n\n.tunnels-section, .forwards-section {\n  margin-bottom: 24px;\n}\n\n.tunnels-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\n  gap: 20px;\n}\n\n.tunnel-card {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s ease;\n}\n\n.tunnel-card:hover {\n  transform: translateY(-2px);\n}\n\n.tunnel-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.tunnel-name {\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  display: flex;\n  align-items: center;\n}\n\n.tunnel-name i {\n  margin-right: 8px;\n  color: #409EFF;\n}\n\n.tunnel-status {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.tunnel-stats {\n  margin-bottom: 16px;\n}\n\n.tunnel-stat-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.tunnel-stat-item {\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.tunnel-stat-item:first-child {\n  margin-right: 16px;\n}\n\n.stat-label {\n  font-size: 12px;\n  color: #666;\n}\n\n.stat-value {\n  font-size: 14px;\n  font-weight: 500;\n  color: #333;\n}\n\n.stat-value.used {\n  color: #F56C6C;\n}\n\n.tunnel-progress {\n  margin-bottom: 16px;\n}\n\n.progress-mini {\n  margin-bottom: 12px;\n}\n\n.progress-mini:last-child {\n  margin-bottom: 0;\n}\n\n.progress-mini-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  font-size: 12px;\n  color: #666;\n}\n\n.tunnel-footer {\n  border-top: 1px solid #f0f0f0;\n  padding-top: 12px;\n  margin-top: 16px;\n}\n\n.reset-time {\n  font-size: 12px;\n  color: #666;\n  display: flex;\n  align-items: center;\n}\n\n.reset-time i {\n  margin-right: 4px;\n}\n\n.forwards-container {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.forward-group {\n  margin-bottom: 24px;\n}\n\n.forward-group:last-child {\n  margin-bottom: 0;\n}\n\n.group-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.group-header h4 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n}\n\n.forward-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 12px;\n}\n\n.forward-item {\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  background: #ffffff;\n  border-radius: 12px;\n  border-left: 4px solid #409EFF;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.forward-item:hover {\n  background: #f8fafe;\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(64, 158, 255, 0.2);\n}\n\n.forward-info {\n  width: 100%;\n  margin-bottom: 8px;\n}\n\n.forward-name {\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 8px;\n  text-align: center;\n}\n\n.forward-address {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  padding: 8px;\n  background: #f5f7fa;\n  border-radius: 8px;\n  margin-bottom: 8px;\n}\n\n.address-source,\n.address-target {\n  font-size: 15px;\n  color: #333;\n  font-family: 'Courier New', monospace;\n  font-weight: 600;\n  text-align: center;\n  padding: 4px 12px;\n  background: #ebeef5;\n  border-radius: 4px;\n  min-width: 120px;\n}\n\n.address-source {\n  color: #52c41a;\n}\n\n.address-target {\n  color: #1890ff;\n}\n\n.address-arrow {\n  font-size: 18px;\n  color: #409EFF;\n  font-weight: bold;\n  margin: 2px 0;\n}\n\n.forward-traffic {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background: #f5f7fa;\n  border-radius: 8px;\n  padding: 8px;\n}\n\n.traffic-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n}\n\n.traffic-label {\n  font-size: 12px;\n  color: #666;\n  margin-bottom: 4px;\n  font-weight: 500;\n}\n\n.traffic-value {\n  font-size: 14px;\n  font-weight: 600;\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n.traffic-value.in {\n  color: #52c41a;\n  background: #f6ffed;\n}\n\n.traffic-value.out {\n  color: #fa8c16;\n  background: #fff7e6;\n}\n\n.traffic-value.total {\n  color: #722ed1;\n  background: #f9f0ff;\n  font-weight: 600;\n}\n\n.empty-state {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .package-container {\n    padding: 10px;\n  }\n\n  .page-header {\n    flex-direction: column;\n    gap: 15px;\n    align-items: stretch;\n  }\n\n  .overview-stats {\n    grid-template-columns: 1fr;\n  }\n\n  .progress-section {\n    grid-template-columns: 1fr;\n  }\n\n  .tunnels-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .forward-list {\n    grid-template-columns: 1fr;\n  }\n\n  .forward-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n\n  .forward-info {\n    width: 100%;\n    margin-bottom: 8px;\n  }\n\n  .forward-traffic {\n    width: 100%;\n  }\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=6e2af254&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=6e2af254&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e2af254\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"user-container\"},[_c('div',{staticClass:\"page-header\"},[_c('h1',{staticClass:\"page-title\"},[_vm._v(\"用户管理\")]),_c('div',{staticClass:\"header-actions\"},[_c('el-input',{staticStyle:{\"width\":\"250px\",\"margin-right\":\"15px\"},attrs:{\"placeholder\":\"搜索用户名或姓名\",\"prefix-icon\":\"el-icon-search\",\"clearable\":\"\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleSearch.apply(null, arguments)}},model:{value:(_vm.searchKeyword),callback:function ($$v) {_vm.searchKeyword=$$v},expression:\"searchKeyword\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.handleSearch},slot:\"append\"})],1),_c('el-button',{staticClass:\"add-btn\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\" 新增用户 \")])],1)]),_c('div',{staticClass:\"table-container\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.userList,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\"}}),_c('el-table-column',{attrs:{\"prop\":\"user\",\"label\":\"用户名\"}}),_c('el-table-column',{attrs:{\"label\":\"流量统计\",\"width\":\"220\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"flow-stats\"},[_c('div',{staticClass:\"flow-item\"},[_c('span',{staticClass:\"flow-label\"},[_vm._v(\"总流量:\")]),_c('span',{staticClass:\"flow-value\"},[_vm._v(_vm._s(_vm.formatFlow(scope.row.flow, 'gb')))])]),_c('div',{staticClass:\"flow-item\"},[_c('span',{staticClass:\"flow-label\"},[_vm._v(\"已用:\")]),_c('span',{staticClass:\"flow-value used\"},[_vm._v(_vm._s(_vm.formatFlow(_vm.calculateUserTotalUsedFlow(scope.row))))])])])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"num\",\"label\":\"转发数量\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":scope.row.status === 1 ? 'success' : 'danger'}},[_vm._v(\" \"+_vm._s(scope.row.status === 1 ? '正常' : '禁用')+\" \")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"flowResetTime\",\"label\":\"流量重置日期\",\"width\":\"130\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.flowResetTime)?_c('span',[_vm._v(\" 每月\"+_vm._s(scope.row.flowResetTime)+\"号 \")]):_c('span',{staticClass:\"no-reset-time\"},[_vm._v(\"未设置\")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"expTime\",\"label\":\"过期时间\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.expTime)?_c('span',{class:_vm.getExpTimeClass(scope.row.expTime)},[_vm._v(\" \"+_vm._s(_vm._f(\"dateFormat\")(scope.row.expTime))+\" \")]):_c('span',{staticClass:\"no-exptime\"},[_vm._v(\"永久\")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"createdTime\",\"label\":\"创建时间\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm._f(\"dateFormat\")(scope.row.createdTime))+\" \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"updatedTime\",\"label\":\"更新时间\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm._f(\"dateFormat\")(scope.row.updatedTime))+\" \")]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"280\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.handleEdit(scope.row)}}},[_vm._v(\" 编辑 \")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"success\",\"icon\":\"el-icon-s-tools\"},on:{\"click\":function($event){return _vm.handleAssignTunnel(scope.row)}}},[_vm._v(\" 分配 \")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.handleDelete(scope.row)}}},[_vm._v(\" 删除 \")])]}}])})],1),_c('div',{staticClass:\"pagination-container\"},[_c('el-pagination',{attrs:{\"current-page\":_vm.pagination.current,\"page-sizes\":[10, 20, 50, 100],\"page-size\":_vm.pagination.size,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.pagination.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.dialogTitle,\"visible\":_vm.dialogVisible,\"width\":\"500px\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.resetForm}},[_c('el-form',{ref:\"userForm\",attrs:{\"model\":_vm.userForm,\"rules\":_vm.rules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"姓名\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入姓名\",\"clearable\":\"\"},model:{value:(_vm.userForm.name),callback:function ($$v) {_vm.$set(_vm.userForm, \"name\", $$v)},expression:\"userForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"用户名\",\"prop\":\"user\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入用户名\",\"clearable\":\"\"},model:{value:(_vm.userForm.user),callback:function ($$v) {_vm.$set(_vm.userForm, \"user\", $$v)},expression:\"userForm.user\"}})],1),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"pwd\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":_vm.isEdit ? '留空则不修改密码' : '请输入密码',\"clearable\":\"\",\"show-password\":\"\"},model:{value:(_vm.userForm.pwd),callback:function ($$v) {_vm.$set(_vm.userForm, \"pwd\", $$v)},expression:\"userForm.pwd\"}})],1),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"流量(GB)\",\"prop\":\"flow\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":0,\"max\":99999,\"placeholder\":\"请输入流量\"},model:{value:(_vm.userForm.flow),callback:function ($$v) {_vm.$set(_vm.userForm, \"flow\", $$v)},expression:\"userForm.flow\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"转发数量\",\"prop\":\"num\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":0,\"max\":9999,\"placeholder\":\"请输入转发数量\"},model:{value:(_vm.userForm.num),callback:function ($$v) {_vm.$set(_vm.userForm, \"num\", $$v)},expression:\"userForm.num\"}})],1)],1)],1),_c('el-form-item',{attrs:{\"label\":\"过期时间\",\"prop\":\"expTime\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"datetime\",\"placeholder\":\"选择过期时间\",\"picker-options\":_vm.pickerOptions},model:{value:(_vm.userForm.expTime),callback:function ($$v) {_vm.$set(_vm.userForm, \"expTime\", $$v)},expression:\"userForm.expTime\"}})],1),_c('el-form-item',{attrs:{\"label\":\"流量重置日期\",\"prop\":\"flowResetTime\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"选择每月重置日期\"},model:{value:(_vm.userForm.flowResetTime),callback:function ($$v) {_vm.$set(_vm.userForm, \"flowResetTime\", $$v)},expression:\"userForm.flowResetTime\"}},_vm._l((31),function(day){return _c('el-option',{key:day,attrs:{\"label\":`每月${day}号（0点重置）`,\"value\":day}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"状态\",\"prop\":\"status\"}},[_c('el-radio-group',{model:{value:(_vm.userForm.status),callback:function ($$v) {_vm.$set(_vm.userForm, \"status\", $$v)},expression:\"userForm.status\"}},[_c('el-radio',{attrs:{\"label\":1}},[_vm._v(\"正常\")]),_c('el-radio',{attrs:{\"label\":0}},[_vm._v(\"禁用\")])],1)],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.submitLoading},on:{\"click\":_vm.handleSubmit}},[_vm._v(\" \"+_vm._s(_vm.submitLoading ? '提交中...' : '确 定')+\" \")])],1)],1),_c('el-dialog',{attrs:{\"title\":`用户 ${_vm.currentUser.name} 的隧道权限管理`,\"visible\":_vm.tunnelDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.tunnelDialogVisible=$event},\"close\":_vm.resetTunnelDialog}},[_c('div',{staticClass:\"assign-section\"},[_c('h4',[_vm._v(\"分配新隧道权限\")]),_c('el-form',{ref:\"tunnelForm\",attrs:{\"model\":_vm.tunnelForm,\"rules\":_vm.tunnelRules,\"label-width\":\"120px\"}},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"选择隧道\",\"prop\":\"tunnelId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择隧道\"},model:{value:(_vm.tunnelForm.tunnelId),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"tunnelId\", $$v)},expression:\"tunnelForm.tunnelId\"}},_vm._l((_vm.availableTunnels),function(tunnel){return _c('el-option',{key:tunnel.id,attrs:{\"label\":`${tunnel.name}`,\"value\":tunnel.id}})}),1)],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"限速规则\",\"prop\":\"speedId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择限速规则\",\"clearable\":\"\"},model:{value:(_vm.tunnelForm.speedId),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"speedId\", $$v)},expression:\"tunnelForm.speedId\"}},[_c('el-option',{attrs:{\"label\":\"不限速\",\"value\":null}}),_vm._l((_vm.speedLimitList),function(speedLimit){return _c('el-option',{key:speedLimit.id,attrs:{\"label\":`${speedLimit.name}`,\"value\":speedLimit.id}})})],2)],1)],1)],1),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"流量限制(GB)\",\"prop\":\"flow\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":0,\"max\":99999,\"placeholder\":\"流量限制\"},model:{value:(_vm.tunnelForm.flow),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"flow\", $$v)},expression:\"tunnelForm.flow\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"转发数量\",\"prop\":\"num\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":0,\"max\":9999,\"placeholder\":\"转发数量\"},model:{value:(_vm.tunnelForm.num),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"num\", $$v)},expression:\"tunnelForm.num\"}})],1)],1)],1),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"流量重置日期\",\"prop\":\"flowResetTime\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"选择每月重置日期\"},model:{value:(_vm.tunnelForm.flowResetTime),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"flowResetTime\", $$v)},expression:\"tunnelForm.flowResetTime\"}},_vm._l((31),function(day){return _c('el-option',{key:day,attrs:{\"label\":`每月${day}号（0点重置）`,\"value\":day}})}),1)],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"到期时间\",\"prop\":\"expTime\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"datetime\",\"placeholder\":\"选择到期时间\",\"picker-options\":_vm.pickerOptions},model:{value:(_vm.tunnelForm.expTime),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"expTime\", $$v)},expression:\"tunnelForm.expTime\"}})],1)],1)],1),_c('el-form',{attrs:{\"item\":\"\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.assignLoading},on:{\"click\":_vm.handleAssignTunnelPermission}},[_vm._v(\" 分配权限 \")])],1)],1)],1),_c('el-divider'),_c('div',{staticClass:\"permission-list-section\"},[_c('h4',[_vm._v(\"已有隧道权限\")]),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tunnelListLoading),expression:\"tunnelListLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.userTunnelList,\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"tunnelName\",\"label\":\"隧道名称\"}}),_c('el-table-column',{attrs:{\"label\":\"状态\",\"width\":\"80\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":scope.row.status === 1 ? 'success' : 'danger',\"size\":\"small\"}},[_vm._v(\" \"+_vm._s(scope.row.status === 1 ? '正常' : '禁用')+\" \")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"流量统计\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"tunnel-flow-stats\"},[_c('div',{staticClass:\"tunnel-flow-item\"},[_c('span',{staticClass:\"tunnel-flow-label\"},[_vm._v(\"限制:\")]),_c('span',{staticClass:\"tunnel-flow-value\"},[_vm._v(_vm._s(_vm.formatFlow(scope.row.flow, 'gb')))])]),_c('div',{staticClass:\"tunnel-flow-item\"},[_c('span',{staticClass:\"tunnel-flow-label\"},[_vm._v(\"已用:\")]),_c('span',{staticClass:\"tunnel-flow-value used\"},[_vm._v(_vm._s(_vm.formatFlow(_vm.calculateTunnelUsedFlow(scope.row))))])])])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"num\",\"label\":\"转发数量\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"prop\":\"speedLimitName\",\"label\":\"限速规则\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.speedLimitName)?_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\" \"+_vm._s(scope.row.speedLimitName)+\" \")]):_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"不限速\")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"flowResetTime\",\"label\":\"流量重置日期\",\"width\":\"130\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" 每月\"+_vm._s(scope.row.flowResetTime)+\"号 \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"expTime\",\"label\":\"到期时间\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm._f(\"dateFormat\")(scope.row.expTime))+\" \")]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.handleEditTunnelPermission(scope.row)}}}),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.handleRemoveTunnelPermission(scope.row)}}})]}}])})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.tunnelDialogVisible = false}}},[_vm._v(\"关 闭\")])],1)],1),_c('el-dialog',{attrs:{\"title\":`编辑隧道权限 - ${_vm.editTunnelForm.tunnelName}`,\"visible\":_vm.editTunnelDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editTunnelDialogVisible=$event},\"close\":_vm.resetEditTunnelForm}},[_c('el-form',{ref:\"editTunnelForm\",attrs:{\"model\":_vm.editTunnelForm,\"rules\":_vm.editTunnelRules,\"label-width\":\"120px\"}},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"流量限制(GB)\",\"prop\":\"flow\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":0,\"max\":99999,\"placeholder\":\"流量限制\"},model:{value:(_vm.editTunnelForm.flow),callback:function ($$v) {_vm.$set(_vm.editTunnelForm, \"flow\", $$v)},expression:\"editTunnelForm.flow\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"转发数量\",\"prop\":\"num\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":0,\"max\":9999,\"placeholder\":\"转发数量\"},model:{value:(_vm.editTunnelForm.num),callback:function ($$v) {_vm.$set(_vm.editTunnelForm, \"num\", $$v)},expression:\"editTunnelForm.num\"}})],1)],1)],1),_c('el-form-item',{attrs:{\"label\":\"限速规则\",\"prop\":\"speedId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择限速规则\",\"clearable\":\"\"},model:{value:(_vm.editTunnelForm.speedId),callback:function ($$v) {_vm.$set(_vm.editTunnelForm, \"speedId\", $$v)},expression:\"editTunnelForm.speedId\"}},[_c('el-option',{attrs:{\"label\":\"不限速\",\"value\":null}}),_vm._l((_vm.speedLimitList),function(speedLimit){return _c('el-option',{key:speedLimit.id,attrs:{\"label\":`${speedLimit.name}`,\"value\":speedLimit.id}})})],2)],1),_c('el-form-item',{attrs:{\"label\":\"流量重置日期\",\"prop\":\"flowResetTime\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"选择每月重置日期\"},model:{value:(_vm.editTunnelForm.flowResetTime),callback:function ($$v) {_vm.$set(_vm.editTunnelForm, \"flowResetTime\", $$v)},expression:\"editTunnelForm.flowResetTime\"}},_vm._l((31),function(day){return _c('el-option',{key:day,attrs:{\"label\":`每月${day}号（0点重置）`,\"value\":day}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"到期时间\",\"prop\":\"expTime\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"datetime\",\"placeholder\":\"选择到期时间\",\"picker-options\":_vm.pickerOptions},model:{value:(_vm.editTunnelForm.expTime),callback:function ($$v) {_vm.$set(_vm.editTunnelForm, \"expTime\", $$v)},expression:\"editTunnelForm.expTime\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editTunnelDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.updateLoading},on:{\"click\":_vm.handleUpdateTunnelPermission}},[_vm._v(\" 确 定 \")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"user-container\">\n    <!-- 页面头部 -->\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">用户管理</h1>\n      <div class=\"header-actions\">\n        <!-- 搜索框 -->\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索用户名或姓名\"\n          prefix-icon=\"el-icon-search\"\n          @keyup.enter.native=\"handleSearch\"\n          clearable\n          style=\"width: 250px; margin-right: 15px;\"\n        >\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\n        </el-input>\n        \n        <el-button \n          type=\"primary\" \n          icon=\"el-icon-plus\" \n          @click=\"handleAdd\"\n          class=\"add-btn\"\n        >\n          新增用户\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 用户列表 -->\n    <div class=\"table-container\">\n      <el-table \n        :data=\"userList\" \n        v-loading=\"loading\"\n        stripe\n        border\n        style=\"width: 100%\"\n      >\n        <el-table-column prop=\"id\" label=\"ID\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\n        <el-table-column prop=\"user\" label=\"用户名\"></el-table-column>\n        <el-table-column label=\"流量统计\" width=\"220\">\n          <template slot-scope=\"scope\">\n            <div class=\"flow-stats\">\n              <div class=\"flow-item\">\n                <span class=\"flow-label\">总流量:</span>\n                <span class=\"flow-value\">{{ formatFlow(scope.row.flow, 'gb') }}</span>\n              </div>\n              <div class=\"flow-item\">\n                <span class=\"flow-label\">已用:</span>\n                <span class=\"flow-value used\">{{ formatFlow(calculateUserTotalUsedFlow(scope.row)) }}</span>\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"num\" label=\"转发数量\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '正常' : '禁用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"flowResetTime\" label=\"流量重置日期\" width=\"130\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.flowResetTime\">\n              每月{{ scope.row.flowResetTime }}号\n            </span>\n            <span v-else class=\"no-reset-time\">未设置</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"expTime\" label=\"过期时间\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.expTime\" :class=\"getExpTimeClass(scope.row.expTime)\">\n              {{ scope.row.expTime | dateFormat }}\n            </span>\n            <span v-else class=\"no-exptime\">永久</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createdTime\" label=\"创建时间\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.createdTime | dateFormat }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"updatedTime\" label=\"更新时间\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.updatedTime | dateFormat }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"280\">\n          <template slot-scope=\"scope\">\n            <el-button \n              size=\"mini\" \n              type=\"primary\" \n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(scope.row)\"\n            >\n              编辑\n            </el-button>\n            <el-button \n              size=\"mini\" \n              type=\"success\" \n              icon=\"el-icon-s-tools\"\n              @click=\"handleAssignTunnel(scope.row)\"\n            >\n              分配\n            </el-button>\n            <el-button \n              size=\"mini\" \n              type=\"danger\" \n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.row)\"\n            >\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页组件 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.current\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"pagination.size\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"pagination.total\"\n        >\n        </el-pagination>\n      </div>\n    </div>\n\n    <!-- 新增/编辑用户对话框 -->\n    <el-dialog \n      :title=\"dialogTitle\" \n      :visible.sync=\"dialogVisible\" \n      width=\"500px\"\n      @close=\"resetForm\"\n    >\n      <el-form \n        :model=\"userForm\" \n        :rules=\"rules\" \n        ref=\"userForm\" \n        label-width=\"80px\"\n      >\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input \n            v-model=\"userForm.name\" \n            placeholder=\"请输入姓名\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"用户名\" prop=\"user\">\n          <el-input \n            v-model=\"userForm.user\" \n            placeholder=\"请输入用户名\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"密码\" prop=\"pwd\">\n          <el-input \n            v-model=\"userForm.pwd\" \n            type=\"password\" \n            :placeholder=\"isEdit ? '留空则不修改密码' : '请输入密码'\"\n            clearable\n            show-password\n          ></el-input>\n        </el-form-item>\n        \n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"流量(GB)\" prop=\"flow\">\n              <el-input-number \n                v-model=\"userForm.flow\" \n                :min=\"0\" \n                :max=\"99999\"\n                placeholder=\"请输入流量\"\n                style=\"width: 100%;\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"转发数量\" prop=\"num\">\n              <el-input-number \n                v-model=\"userForm.num\" \n                :min=\"0\" \n                :max=\"9999\"\n                placeholder=\"请输入转发数量\"\n                style=\"width: 100%;\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        \n        <el-form-item label=\"过期时间\" prop=\"expTime\">\n          <el-date-picker\n            v-model=\"userForm.expTime\"\n            type=\"datetime\"\n            placeholder=\"选择过期时间\"\n            style=\"width: 100%;\"\n            :picker-options=\"pickerOptions\"\n          >\n          </el-date-picker>\n        </el-form-item>\n        \n        <el-form-item label=\"流量重置日期\" prop=\"flowResetTime\">\n          <el-select \n            v-model=\"userForm.flowResetTime\" \n            placeholder=\"选择每月重置日期\"\n            style=\"width: 100%;\"\n          >\n            <el-option\n              v-for=\"day in 31\"\n              :key=\"day\"\n              :label=\"`每月${day}号（0点重置）`\"\n              :value=\"day\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"userForm.status\">\n            <el-radio :label=\"1\">正常</el-radio>\n            <el-radio :label=\"0\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      \n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button \n          type=\"primary\" \n          @click=\"handleSubmit\"\n          :loading=\"submitLoading\"\n        >\n          {{ submitLoading ? '提交中...' : '确 定' }}\n        </el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 用户隧道权限分配对话框 -->\n    <el-dialog \n      :title=\"`用户 ${currentUser.name} 的隧道权限管理`\" \n      :visible.sync=\"tunnelDialogVisible\" \n      width=\"50%\"\n      @close=\"resetTunnelDialog\"\n    >\n      <!-- 分配新隧道权限 -->\n      <div class=\"assign-section\">\n        <h4>分配新隧道权限</h4>\n        <el-form :model=\"tunnelForm\" :rules=\"tunnelRules\" ref=\"tunnelForm\" label-width=\"120px\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"12\">\n              <el-form-item label=\"选择隧道\" prop=\"tunnelId\">\n                <el-select \n                  v-model=\"tunnelForm.tunnelId\" \n                  placeholder=\"请选择隧道\"\n                  style=\"width: 100%;\"\n                >\n                  <el-option\n                    v-for=\"tunnel in availableTunnels\"\n                    :key=\"tunnel.id\"\n                    :label=\"`${tunnel.name}`\"\n                    :value=\"tunnel.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"限速规则\" prop=\"speedId\">\n                <el-select \n                  v-model=\"tunnelForm.speedId\" \n                  placeholder=\"请选择限速规则\"\n                  style=\"width: 100%;\"\n                  clearable\n                >\n                  <el-option\n                    label=\"不限速\"\n                    :value=\"null\"\n                  ></el-option>\n                  <el-option\n                    v-for=\"speedLimit in speedLimitList\"\n                    :key=\"speedLimit.id\"\n                    :label=\"`${speedLimit.name}`\"\n                    :value=\"speedLimit.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          \n          <el-row :gutter=\"20\">\n            <el-col :span=\"12\">\n              <el-form-item label=\"流量限制(GB)\" prop=\"flow\">\n                <el-input-number \n                  v-model=\"tunnelForm.flow\" \n                  :min=\"0\" \n                  :max=\"99999\"\n                  placeholder=\"流量限制\"\n                  style=\"width: 100%;\"\n                ></el-input-number>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"转发数量\" prop=\"num\">\n                <el-input-number \n                  v-model=\"tunnelForm.num\" \n                  :min=\"0\" \n                  :max=\"9999\"\n                  placeholder=\"转发数量\"\n                  style=\"width: 100%;\"\n                ></el-input-number>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          \n          <el-row :gutter=\"20\">\n            <el-col :span=\"12\">\n              <el-form-item label=\"流量重置日期\" prop=\"flowResetTime\">\n                <el-select \n                  v-model=\"tunnelForm.flowResetTime\" \n                  placeholder=\"选择每月重置日期\"\n                  style=\"width: 100%;\"\n                >\n                  <el-option\n                    v-for=\"day in 31\"\n                    :key=\"day\"\n                    :label=\"`每月${day}号（0点重置）`\"\n                    :value=\"day\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"到期时间\" prop=\"expTime\">\n                <el-date-picker\n                  v-model=\"tunnelForm.expTime\"\n                  type=\"datetime\"\n                  placeholder=\"选择到期时间\"\n                  style=\"width: 100%;\"\n                  :picker-options=\"pickerOptions\"\n                >\n                </el-date-picker>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          \n          <el-form item>\n            <el-button \n              type=\"primary\" \n              @click=\"handleAssignTunnelPermission\"\n              :loading=\"assignLoading\"\n            >\n              分配权限\n            </el-button>\n          </el-form>\n        </el-form>\n      </div>\n\n      <el-divider></el-divider>\n\n      <!-- 已有隧道权限列表 -->\n      <div class=\"permission-list-section\">\n        <h4>已有隧道权限</h4>\n        <el-table \n          :data=\"userTunnelList\" \n          v-loading=\"tunnelListLoading\"\n          border\n          style=\"width: 100%\"\n        >\n          <el-table-column prop=\"tunnelName\" label=\"隧道名称\"></el-table-column>\n          <el-table-column label=\"状态\" width=\"80\">\n            <template slot-scope=\"scope\">\n              <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\" size=\"small\">\n                {{ scope.row.status === 1 ? '正常' : '禁用' }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"流量统计\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <div class=\"tunnel-flow-stats\">\n                <div class=\"tunnel-flow-item\">\n                  <span class=\"tunnel-flow-label\">限制:</span>\n                  <span class=\"tunnel-flow-value\">{{ formatFlow(scope.row.flow, 'gb') }}</span>\n                </div>\n                <div class=\"tunnel-flow-item\">\n                  <span class=\"tunnel-flow-label\">已用:</span>\n                  <span class=\"tunnel-flow-value used\">{{ formatFlow(calculateTunnelUsedFlow(scope.row)) }}</span>\n                </div>\n              \n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"num\" label=\"转发数量\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"speedLimitName\" label=\"限速规则\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-tag v-if=\"scope.row.speedLimitName\" type=\"warning\">\n                {{ scope.row.speedLimitName }}\n              </el-tag>\n              <el-tag v-else type=\"success\">不限速</el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"flowResetTime\" label=\"流量重置日期\" width=\"130\">\n            <template slot-scope=\"scope\">\n              每月{{ scope.row.flowResetTime }}号\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"expTime\" label=\"到期时间\" width=\"180\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.expTime | dateFormat }}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-button \n                size=\"mini\" \n                type=\"primary\" \n                icon=\"el-icon-edit\"\n                @click=\"handleEditTunnelPermission(scope.row)\"\n              >\n              </el-button>\n              <el-button \n                size=\"mini\" \n                type=\"danger\" \n                icon=\"el-icon-delete\"\n                @click=\"handleRemoveTunnelPermission(scope.row)\"\n              >\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      \n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"tunnelDialogVisible = false\">关 闭</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑隧道权限对话框 -->\n    <el-dialog \n      :title=\"`编辑隧道权限 - ${editTunnelForm.tunnelName}`\" \n      :visible.sync=\"editTunnelDialogVisible\" \n      width=\"50%\"\n      @close=\"resetEditTunnelForm\"\n    >\n      <el-form :model=\"editTunnelForm\" :rules=\"editTunnelRules\" ref=\"editTunnelForm\" label-width=\"120px\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"流量限制(GB)\" prop=\"flow\">\n              <el-input-number \n                v-model=\"editTunnelForm.flow\" \n                :min=\"0\" \n                :max=\"99999\"\n                placeholder=\"流量限制\"\n                style=\"width: 100%;\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"转发数量\" prop=\"num\">\n              <el-input-number \n                v-model=\"editTunnelForm.num\" \n                :min=\"0\" \n                :max=\"9999\"\n                placeholder=\"转发数量\"\n                style=\"width: 100%;\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        \n        <el-form-item label=\"限速规则\" prop=\"speedId\">\n          <el-select \n            v-model=\"editTunnelForm.speedId\" \n            placeholder=\"请选择限速规则\"\n            style=\"width: 100%;\"\n            clearable\n          >\n            <el-option\n              label=\"不限速\"\n              :value=\"null\"\n            ></el-option>\n            <el-option\n              v-for=\"speedLimit in speedLimitList\"\n              :key=\"speedLimit.id\"\n              :label=\"`${speedLimit.name}`\"\n              :value=\"speedLimit.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"流量重置日期\" prop=\"flowResetTime\">\n          <el-select \n            v-model=\"editTunnelForm.flowResetTime\" \n            placeholder=\"选择每月重置日期\"\n            style=\"width: 100%;\"\n          >\n            <el-option\n              v-for=\"day in 31\"\n              :key=\"day\"\n              :label=\"`每月${day}号（0点重置）`\"\n              :value=\"day\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"到期时间\" prop=\"expTime\">\n          <el-date-picker\n            v-model=\"editTunnelForm.expTime\"\n            type=\"datetime\"\n            placeholder=\"选择到期时间\"\n            style=\"width: 100%;\"\n            :picker-options=\"pickerOptions\"\n          >\n          </el-date-picker>\n        </el-form-item>\n      </el-form>\n      \n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editTunnelDialogVisible = false\">取 消</el-button>\n        <el-button \n          type=\"primary\" \n          @click=\"handleUpdateTunnelPermission\"\n          :loading=\"updateLoading\"\n        >\n          确 定\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getAllUsers, createUser, updateUser, deleteUser, getTunnelList, assignUserTunnel, getUserTunnelList, removeUserTunnel, updateUserTunnelFlow, updateUserTunnel, getSpeedLimitList } from \"@/api\";\n\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      userList: [],\n      loading: false,\n      dialogVisible: false,\n      dialogTitle: '',\n      isEdit: false,\n      submitLoading: false,\n      searchKeyword: '',\n      pagination: {\n        current: 1,\n        size: 10,\n        total: 0\n      },\n      userForm: {\n        id: null,\n        name: '',\n        user: '',\n        pwd: '',\n        status: 1,\n        flow: 0,\n        num: 0,\n        expTime: null,\n        flowResetTime: 1\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入姓名', trigger: 'blur' }\n        ],\n        user: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, message: '用户名长度至少3位', trigger: 'blur' }\n        ],\n        pwd: [\n          { \n            validator: (rule, value, callback) => {\n              if (!this.isEdit && (!value || value.trim() === '')) {\n                callback(new Error('请输入密码'));\n              } else if (value && value.length > 0 && value.length < 6) {\n                callback(new Error('密码长度至少6位'));\n              } else {\n                callback();\n              }\n            }, \n            trigger: 'blur' \n          }\n        ],\n        status: [\n          { required: true, message: '请选择状态', trigger: 'change' }\n        ],\n        flow: [\n          { required: true, message: '请输入流量', trigger: 'blur' }\n        ],\n        num: [\n          { required: true, message: '请输入转发数量', trigger: 'blur' }\n        ],\n        expTime: [\n          { required: true, message: '请选择过期时间', trigger: 'change' }\n        ],\n        flowResetTime: [\n          { required: true, message: '请选择流量重置日期', trigger: 'change' }\n        ]\n      },\n      // 隧道权限管理相关数据\n      tunnelDialogVisible: false,\n      currentUser: {},\n      userTunnelList: [],\n      tunnelListLoading: false,\n      assignLoading: false,\n      allTunnels: [],\n      tunnelForm: {\n        tunnelId: null,\n        flow: 100,\n        flowResetTime: 1,\n        expTime: null,\n        speedId: null,\n        num: 0\n      },\n      tunnelRules: {\n        tunnelId: [\n          { required: true, message: '请选择隧道', trigger: 'change' }\n        ],\n        flow: [\n          { required: true, message: '请输入流量限制', trigger: 'blur' }\n        ],\n        num: [\n          { required: true, message: '请输入转发数量', trigger: 'blur' }\n        ],\n        flowResetTime: [\n          { required: true, message: '请选择流量重置日期', trigger: 'change' }\n        ],\n        expTime: [\n          { required: true, message: '请选择到期时间', trigger: 'change' }\n        ]\n      },\n      pickerOptions: {\n        disabledDate(date) {\n          return date.getTime() < Date.now() - 86400000; // 禁用今天之前的日期\n        }\n      },\n      editTunnelDialogVisible: false,\n      editTunnelForm: {\n        id: null,\n        tunnelId: null,\n        tunnelName: '',\n        flow: 100,\n        flowResetTime: 1,\n        expTime: null,\n        speedId: null,\n        num: 0\n      },\n      editTunnelRules: {\n        flow: [\n          { required: true, message: '请输入流量限制', trigger: 'blur' }\n        ],\n        num: [\n          { required: true, message: '请输入转发数量', trigger: 'blur' }\n        ],\n        flowResetTime: [\n          { required: true, message: '请选择流量重置日期', trigger: 'change' }\n        ],\n        expTime: [\n          { required: true, message: '请选择到期时间', trigger: 'change' }\n        ]\n      },\n      updateLoading: false,\n      speedLimitList: []\n    };\n  },\n  computed: {\n    // 可分配的隧道列表（排除已分配的）\n    availableTunnels() {\n      const assignedTunnelIds = this.userTunnelList.map(item => item.tunnelId);\n      return this.allTunnels.filter(tunnel => !assignedTunnelIds.includes(tunnel.id));\n    }\n  },\n  mounted() {\n    this.getUserList();\n    this.getTunnelList();\n    this.getSpeedLimitList();\n  },\n  methods: {\n    // 获取用户列表\n    getUserList() {\n      this.loading = true;\n      const params = {\n        current: this.pagination.current,\n        size: this.pagination.size,\n        keyword: this.searchKeyword\n      };\n      \n      getAllUsers(params).then(res => {\n        this.loading = false;\n        if (res.code !== 0) {\n          return this.$message.error(res.msg);\n        }\n        \n        const data = res.data || {};\n        this.userList = data.records || [];\n        this.pagination.total = data.total || 0;\n        this.pagination.current = data.current || 1;\n        this.pagination.size = data.size || 10;\n      }).catch(() => {\n        this.loading = false;\n        this.$message.error('获取用户列表失败');\n      });\n    },\n\n    // 获取隧道列表\n    getTunnelList() {\n      getTunnelList().then(res => {\n        if (res.code === 0) {\n          this.allTunnels = res.data || [];\n        }\n      }).catch(() => {\n        console.error('获取隧道列表失败');\n      });\n    },\n    \n    // 搜索\n    handleSearch() {\n      this.pagination.current = 1; // 重置到第一页\n      this.getUserList();\n    },\n    \n    // 每页条数改变\n    handleSizeChange(size) {\n      this.pagination.size = size;\n      this.pagination.current = 1; // 重置到第一页\n      this.getUserList();\n    },\n    \n    // 当前页改变\n    handleCurrentChange(current) {\n      this.pagination.current = current;\n      this.getUserList();\n    },\n    \n    // 新增用户\n    handleAdd() {\n      this.dialogTitle = '新增用户';\n      this.isEdit = false;\n      this.dialogVisible = true;\n    },\n    \n    // 编辑用户\n    handleEdit(row) {\n      this.dialogTitle = '编辑用户';\n      this.isEdit = true;\n      this.userForm = {\n        id: row.id,\n        name: row.name,\n        user: row.user,\n        pwd: '',\n        status: row.status,\n        flow: row.flow,\n        num: row.num,\n        expTime: row.expTime ? new Date(row.expTime) : null,\n        flowResetTime: row.flowResetTime || 1\n      };\n      this.dialogVisible = true;\n    },\n\n    // 分配隧道权限\n    handleAssignTunnel(row) {\n      this.currentUser = row;\n      this.tunnelDialogVisible = true;\n      this.getUserTunnelList();\n      // 设置默认时间为下个月的今天\n      this.setDefaultTimes();\n    },\n\n    // 设置默认时间为下个月的今天\n    setDefaultTimes() {\n      const now = new Date();\n      const nextMonth = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate(), now.getHours(), now.getMinutes());\n      // 流量重置时间现在是数字选择，不需要设置\n      this.tunnelForm.expTime = nextMonth;\n    },\n    \n    // 删除用户\n    handleDelete(row) {\n      this.$confirm(`确定要删除用户 \"${row.name}\" 吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteUser(row.id).then(res => {\n          if (res.code !== 0) {\n            return this.$message.error(res.msg);\n          }\n          this.$message.success('删除成功');\n          this.getUserList();\n        }).catch(() => {\n          this.$message.error('删除失败');\n        });\n      });\n    },\n    \n    // 提交表单\n    handleSubmit() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          \n          const apiCall = this.isEdit ? updateUser : createUser;\n          const submitData = { ...this.userForm };\n          \n          // 如果是编辑且密码为空，则不提交密码字段\n          if (this.isEdit && !submitData.pwd) {\n            delete submitData.pwd;\n          }\n          \n          // 转换过期时间为时间戳\n          if (submitData.expTime) {\n            submitData.expTime = submitData.expTime.getTime();\n          }\n          \n          // 流量重置时间现在是数字（几号），直接使用\n          \n          apiCall(submitData).then(res => {\n            this.submitLoading = false;\n            if (res.code !== 0) {\n              return this.$message.error(res.msg);\n            }\n            \n            this.$message.success(this.isEdit ? '更新成功' : '创建成功');\n            this.dialogVisible = false;\n            this.getUserList();\n          }).catch(() => {\n            this.submitLoading = false;\n            this.$message.error(this.isEdit ? '更新失败' : '创建失败');\n          });\n        }\n      });\n    },\n\n    // ============ 隧道权限管理相关方法 ============\n\n    // 获取用户隧道权限列表\n    getUserTunnelList() {\n      this.tunnelListLoading = true;\n      getUserTunnelList({ userId: this.currentUser.id }).then(res => {\n        this.tunnelListLoading = false;\n        if (res.code === 0) {\n          this.userTunnelList = res.data || [];\n        } else {\n          this.$message.error(res.msg || '获取隧道权限列表失败');\n        }\n      }).catch(() => {\n        this.tunnelListLoading = false;\n        this.$message.error('获取隧道权限列表失败');\n      });\n    },\n\n    // 分配隧道权限\n    handleAssignTunnelPermission() {\n      this.$refs.tunnelForm.validate(valid => {\n        if (valid) {\n          this.assignLoading = true;\n          const data = {\n            userId: this.currentUser.id,\n            tunnelId: this.tunnelForm.tunnelId,\n            flow: this.tunnelForm.flow,\n            flowResetTime: this.tunnelForm.flowResetTime,\n            expTime: this.tunnelForm.expTime.getTime(),\n            speedId: this.tunnelForm.speedId,\n            num: this.tunnelForm.num\n          };\n          \n          assignUserTunnel(data).then(res => {\n            this.assignLoading = false;\n            if (res.code === 0) {\n              this.$message.success('分配成功');\n              this.resetTunnelForm();\n              this.getUserTunnelList(); // 刷新列表\n            } else {\n              this.$message.error(res.msg || '分配失败');\n            }\n          }).catch(() => {\n            this.assignLoading = false;\n            this.$message.error('分配失败');\n          });\n        }\n      });\n    },\n\n    // 删除隧道权限\n    handleRemoveTunnelPermission(row) {\n      this.$confirm(`确定要删除该隧道权限吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        removeUserTunnel({ id: row.id }).then(res => {\n          if (res.code === 0) {\n            this.$message.success('删除成功');\n            this.getUserTunnelList(); // 刷新列表\n          } else {\n            this.$message.error(res.msg || '删除失败');\n          }\n        }).catch(() => {\n          this.$message.error('删除失败');\n        });\n      });\n    },\n\n    // 重置表单\n    resetForm() {\n      this.userForm = {\n        id: null,\n        name: '',\n        user: '',\n        pwd: '',\n        status: 1,\n        flow: 0,\n        num: 0,\n        expTime: null,\n        flowResetTime: 1\n      };\n      if (this.$refs.userForm) {\n        this.$refs.userForm.resetFields();\n      }\n    },\n\n    // 重置隧道权限对话框\n    resetTunnelDialog() {\n      this.currentUser = {};\n      this.userTunnelList = [];\n      this.resetTunnelForm();\n    },\n\n    // 重置隧道分配表单\n    resetTunnelForm() {\n      this.tunnelForm = {\n        tunnelId: null,\n        flow: 100,\n        flowResetTime: 1,\n        expTime: null,\n        speedId: null,\n        num: 0\n      };\n      if (this.$refs.tunnelForm) {\n        this.$refs.tunnelForm.resetFields();\n      }\n      // 重置后设置默认时间\n      this.setDefaultTimes();\n    },\n\n    // 编辑隧道权限\n    handleEditTunnelPermission(row) {\n      this.editTunnelForm = {\n        id: row.id,\n        tunnelId: row.tunnelId,\n        tunnelName: row.tunnelName,\n        flow: row.flow,\n        flowResetTime: row.flowResetTime,\n        expTime: new Date(row.expTime),\n        speedId: row.speedId,\n        num: row.num\n      };\n      this.editTunnelDialogVisible = true;\n    },\n\n    // 更新隧道权限\n    handleUpdateTunnelPermission() {\n      this.$refs.editTunnelForm.validate(valid => {\n        if (valid) {\n          this.updateLoading = true;\n          const data = {\n            id: this.editTunnelForm.id,\n            flow: this.editTunnelForm.flow,\n            flowResetTime: this.editTunnelForm.flowResetTime,\n            expTime: this.editTunnelForm.expTime.getTime(),\n            speedId: this.editTunnelForm.speedId,\n            num: this.editTunnelForm.num\n          };\n          \n          updateUserTunnel(data).then(res => {\n            this.updateLoading = false;\n            if (res.code === 0) {\n              this.$message.success('更新成功');\n              this.editTunnelDialogVisible = false;\n              this.getUserTunnelList();\n            } else {\n              this.$message.error(res.msg || '更新失败');\n            }\n          }).catch(() => {\n            this.updateLoading = false;\n            this.$message.error('更新失败');\n          });\n        }\n      });\n    },\n\n    // 重置编辑隧道权限表单\n    resetEditTunnelForm() {\n      this.editTunnelForm = {\n        id: null,\n        tunnelId: null,\n        tunnelName: '',\n        flow: 100,\n        flowResetTime: 1,\n        expTime: null,\n        speedId: null,\n        num: 0\n      };\n      if (this.$refs.editTunnelForm) {\n        this.$refs.editTunnelForm.resetFields();\n      }\n    },\n\n    // 获取限速规则列表\n    getSpeedLimitList() {\n      getSpeedLimitList().then(res => {\n        if (res.code === 0) {\n          this.speedLimitList = res.data || [];\n        }\n      }).catch(() => {\n        console.error('获取限速规则列表失败');\n      });\n    },\n\n    formatFlow(value, unit = 'bytes') {\n      if (unit === 'gb') {\n        // flow字段，单位是GB\n        return value + ' GB';\n      } else {\n        // inFlow、outFlow字段，单位是字节\n        if (value === 0) return '0 B';\n        if (value < 1024) return value + ' B';\n        if (value < 1024 * 1024) return (value / 1024).toFixed(2) + ' KB';\n        if (value < 1024 * 1024 * 1024) return (value / (1024 * 1024)).toFixed(2) + ' MB';\n        return (value / (1024 * 1024 * 1024)).toFixed(2) + ' GB';\n      }\n    },\n\n    calculateFlowPercentage(row) {\n      const totalUsedBytes = this.calculateTunnelUsedFlow(row);\n      if (row.flow === 0) return 0;\n      const flowLimitBytes = row.flow * 1024 * 1024 * 1024; // 将GB转换为字节\n      const percentage = (totalUsedBytes / flowLimitBytes) * 100;\n      return Math.min(percentage, 100); // 限制最大值为100%\n    },\n\n    getFlowStatus(row) {\n      const percentage = this.calculateFlowPercentage(row);\n      if (percentage >= 90) return 'exception';\n      if (percentage >= 70) return 'warning';\n      return 'success';\n    },\n\n    getExpTimeClass(expTime) {\n      const now = new Date();\n      const expDate = new Date(expTime);\n      \n      if (expDate < now) {\n        // 已过期\n        return 'exp-time-expired';\n      }\n      \n      const diffTime = expDate - now;\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n      if (diffDays <= 7) {\n        return 'exp-time-soon';\n      } else if (diffDays <= 30) {\n        return 'exp-time-mid';\n      } else {\n        return 'exp-time-long';\n      }\n    },\n\n         /**\n      * 计算隧道已用流量\n      * 根据隧道的流量计算类型（tunnelFlow）决定单向还是双向计算\n      */\n     calculateTunnelUsedFlow(tunnel) {\n       if (!tunnel) return 0;\n       \n       const inFlow = tunnel.inFlow || 0;   // 下载流量\n       const outFlow = tunnel.outFlow || 0; // 上传流量\n       \n       // tunnelFlow: 1-单向计算（仅上传），2-双向计算（上传+下载）\n       if (tunnel.tunnelFlow === 1) {\n         // 单向计算：只计算上传流量（outFlow）\n         return outFlow;\n       } else {\n         // 双向计算或默认：计算上传和下载的总流量\n         return inFlow + outFlow;\n       }\n     },\n\n         /**\n      * 计算用户总已用流量\n      * 直接使用后端计算好的用户流量统计\n      */\n     calculateUserTotalUsedFlow(user) {\n       // 后端已经根据隧道类型计算了实际流量，直接使用\n       return (user.inFlow || 0) + (user.outFlow || 0);\n     }\n  },\n\n  filters: {\n    dateFormat(value) {\n      if (!value) return '';\n      const date = new Date(value);\n      return date.toLocaleString();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.user-container {\n  padding: 20px;\n  background-color: #f5f5f5;\n  min-height: 100vh;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 20px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n}\n\n.add-btn {\n  border-radius: 6px;\n}\n\n.table-container {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n/* 对话框样式调整 */\n.dialog-footer {\n  text-align: right;\n}\n\n/* 隧道权限管理样式 */\n.assign-section {\n  margin-bottom: 20px;\n}\n\n.assign-section h4,\n.permission-list-section h4 {\n  margin-bottom: 15px;\n  color: #333;\n  font-weight: 600;\n}\n\n.permission-list-section {\n  margin-top: 20px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .user-container {\n    padding: 10px;\n  }\n  \n  .page-header {\n    flex-direction: column;\n    gap: 15px;\n    align-items: stretch;\n  }\n  \n  .header-actions {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .page-title {\n    text-align: center;\n  }\n  \n  .pagination-container {\n    text-align: center;\n  }\n}\n\n/* 表格样式优化 */\n.table-container >>> .el-table th {\n  background-color: #fafafa;\n}\n\n.table-container >>> .el-table--border td,\n.table-container >>> .el-table--border th {\n  border-right: 1px solid #ebeef5;\n}\n\n/* 按钮样式调整 */\n.table-container >>> .el-button--mini {\n  padding: 5px 10px;\n  margin: 0 2px;\n}\n\n/* 分页样式 */\n.pagination-container >>> .el-pagination {\n  padding: 0;\n}\n\n/* 流量统计样式 */\n.flow-stats {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.flow-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.flow-label {\n  font-size: 12px;\n  color: #909399;\n  font-weight: 500;\n}\n\n.flow-value {\n  font-size: 12px;\n  font-weight: 600;\n}\n\n.flow-value.used {\n  color: #F56C6C;\n}\n\n.flow-value.in {\n  color: #67C23A;\n}\n\n.flow-value.out {\n  color: #E6A23C;\n}\n\n/* 隧道流量统计样式 */\n.tunnel-flow-stats {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.tunnel-flow-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.tunnel-flow-label {\n  font-size: 12px;\n  color: #909399;\n  font-weight: 500;\n}\n\n.tunnel-flow-value {\n  font-size: 12px;\n  font-weight: 600;\n}\n\n.tunnel-flow-value.used {\n  color: #F56C6C;\n}\n\n.tunnel-flow-usage {\n  margin-top: 4px;\n}\n\n/* 过期时间样式 */\n.exp-time-expired {\n  color: #F56C6C;\n  font-weight: 700;\n  text-decoration: line-through;\n}\n\n.exp-time-soon {\n  color: #F56C6C;\n  font-weight: 600;\n}\n\n.exp-time-mid {\n  color: #E6A23C;\n  font-weight: 500;\n}\n\n.exp-time-long {\n  color: #67C23A;\n  font-weight: 500;\n}\n\n.no-exptime {\n  color: #909399;\n  font-style: italic;\n}\n\n.no-reset-time {\n  color: #909399;\n  font-style: italic;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./User.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./User.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./User.vue?vue&type=template&id=1ce36542&scoped=true\"\nimport script from \"./User.vue?vue&type=script&lang=js\"\nexport * from \"./User.vue?vue&type=script&lang=js\"\nimport style0 from \"./User.vue?vue&type=style&index=0&id=1ce36542&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1ce36542\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"node-container\"},[_c('div',{staticClass:\"page-header\"},[_vm._m(0),_c('div',{staticClass:\"header-actions\"},[_c('el-button',{staticClass:\"add-btn\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\" 新增节点 \")]),_c('el-button',{attrs:{\"type\":\"success\",\"icon\":\"el-icon-refresh\",\"loading\":_vm.loading},on:{\"click\":_vm.loadNodes}},[_vm._v(\" 刷新 \")])],1)]),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"cards-container\"},[_c('div',{staticClass:\"cards-grid\"},_vm._l((_vm.nodeList),function(node){return _c('div',{key:node.id,staticClass:\"node-card\",class:{ 'online': node.connectionStatus === 'online', 'offline': node.connectionStatus !== 'online' }},[_c('div',{staticClass:\"status-indicator\"},[_c('div',{staticClass:\"status-dot\",class:{ 'online': node.connectionStatus === 'online', 'offline': node.connectionStatus !== 'online' }}),_c('span',{staticClass:\"status-text\"},[_vm._v(\" \"+_vm._s(node.connectionStatus === 'online' ? '在线' : '离线')+\" \")])]),_c('div',{staticClass:\"node-info\"},[_c('div',{staticClass:\"node-header\"},[_c('h3',{staticClass:\"node-name\"},[_vm._v(_vm._s(node.name))])]),_c('div',{staticClass:\"system-stats\"},[_c('div',{staticClass:\"charts-container\",class:{ 'offline-charts': node.connectionStatus !== 'online' }},[_c('div',{staticClass:\"chart-item\"},[_c('div',{staticClass:\"chart-title\"},[_vm._v(\"CPU使用率\")]),_c('div',{staticClass:\"chart-wrapper\"},[_c('v-chart',{staticStyle:{\"height\":\"120px\",\"width\":\"100%\"},attrs:{\"option\":_vm.getCpuChartOption(node.connectionStatus === 'online' ? (node.systemInfo?.cpuUsage || 0) : 0, node.connectionStatus !== 'online')}})],1)]),_c('div',{staticClass:\"chart-item\"},[_c('div',{staticClass:\"chart-title\"},[_vm._v(\"内存使用率\")]),_c('div',{staticClass:\"chart-wrapper\"},[_c('v-chart',{staticStyle:{\"height\":\"120px\",\"width\":\"100%\"},attrs:{\"option\":_vm.getMemoryChartOption(node.connectionStatus === 'online' ? (node.systemInfo?.memoryUsage || 0) : 0, node.connectionStatus !== 'online')}})],1)])]),_c('div',{staticClass:\"traffic-stats\",class:{ 'offline-stats': node.connectionStatus !== 'online' }},[_c('div',{staticClass:\"stat-item\"},[_vm._m(1,true),_c('div',{staticClass:\"stat-content\"},[_c('span',{staticClass:\"traffic-value\"},[_vm._v(\" \"+_vm._s(node.connectionStatus === 'online' ? _vm.formatBytes(node.systemInfo?.uploadTraffic || 0) : '-')+\" \")])])]),_c('div',{staticClass:\"stat-item\"},[_vm._m(2,true),_c('div',{staticClass:\"stat-content\"},[_c('span',{staticClass:\"traffic-value\"},[_vm._v(\" \"+_vm._s(node.connectionStatus === 'online' ? _vm.formatBytes(node.systemInfo?.downloadTraffic || 0) : '-')+\" \")])])]),_c('div',{staticClass:\"stat-item\"},[_vm._m(3,true),_c('div',{staticClass:\"stat-content\"},[(node.connectionStatus === 'online')?_c('div',{staticClass:\"speed-info\"},[_c('div',{staticClass:\"speed-item\"},[_c('span',{staticClass:\"speed-label\"},[_vm._v(\"↑\")]),_c('span',{staticClass:\"speed-value\"},[_vm._v(_vm._s(_vm.formatSpeed(node.systemInfo?.uploadSpeed || 0)))])]),_c('div',{staticClass:\"speed-item\"},[_c('span',{staticClass:\"speed-label\"},[_vm._v(\"↓\")]),_c('span',{staticClass:\"speed-value\"},[_vm._v(_vm._s(_vm.formatSpeed(node.systemInfo?.downloadSpeed || 0)))])])]):_c('span',{staticClass:\"traffic-value total\"},[_vm._v(\"-\")])])]),_c('div',{staticClass:\"stat-item\"},[_vm._m(4,true),_c('div',{staticClass:\"stat-content\"},[_c('span',{staticClass:\"ip-value\"},[_vm._v(_vm._s(node.connectionStatus === 'online' ? (node.ip || '-') : '-'))])])])])])]),_c('div',{staticClass:\"node-actions\"},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"success\",\"icon\":\"el-icon-copy-document\",\"loading\":node.copyLoading},on:{\"click\":function($event){return _vm.handleCopyInstallCommand(node)}}},[_vm._v(\" 复制安装命令 \")]),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.handleEdit(node)}}},[_vm._v(\" 编辑 \")]),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.handleDelete(node)}}},[_vm._v(\" 删除 \")])],1)])}),0),(!_vm.loading && _vm.nodeList.length === 0)?_c('div',{staticClass:\"empty-state\"},[_c('i',{staticClass:\"el-icon-box\"}),_c('p',[_vm._v(\"暂无节点数据\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"创建第一个节点\")])],1):_vm._e()]),_c('el-dialog',{attrs:{\"title\":_vm.dialogTitle,\"visible\":_vm.dialogVisible,\"width\":\"500px\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.resetForm}},[_c('el-form',{ref:\"nodeForm\",attrs:{\"model\":_vm.nodeForm,\"rules\":_vm.rules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"节点名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入节点名称\",\"clearable\":\"\"},model:{value:(_vm.nodeForm.name),callback:function ($$v) {_vm.$set(_vm.nodeForm, \"name\", $$v)},expression:\"nodeForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"控制端口\",\"prop\":\"port\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入控制端口\",\"type\":\"number\",\"min\":\"1\",\"max\":\"65535\",\"clearable\":\"\"},model:{value:(_vm.nodeForm.port),callback:function ($$v) {_vm.$set(_vm.nodeForm, \"port\", _vm._n($$v))},expression:\"nodeForm.port\"}})],1),(!_vm.isEdit)?_c('el-alert',{staticStyle:{\"margin-bottom\":\"20px\"},attrs:{\"title\":\"系统将自动为新节点生成UUID密钥\",\"type\":\"info\",\"closable\":false,\"show-icon\":\"\"}}):_vm._e(),(_vm.isEdit)?_c('el-alert',{staticStyle:{\"margin-bottom\":\"20px\"},attrs:{\"title\":\"编辑模式下只能修改节点名称和端口，密钥不可更改\",\"type\":\"warning\",\"closable\":false,\"show-icon\":\"\"}}):_vm._e()],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.submitLoading},on:{\"click\":_vm.handleSubmit}},[_vm._v(\" \"+_vm._s(_vm.submitLoading ? '提交中...' : '确 定')+\" \")])],1)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('h1',{staticClass:\"page-title\"},[_c('i',{staticClass:\"el-icon-s-platform\"}),_vm._v(\" 节点管理 \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-header\"},[_c('i',{staticClass:\"el-icon-upload2\"}),_c('span',[_vm._v(\"上传流量\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-header\"},[_c('i',{staticClass:\"el-icon-download\"}),_c('span',[_vm._v(\"下载流量\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-header\"},[_c('i',{staticClass:\"el-icon-s-grid\"}),_c('span',[_vm._v(\"实时网速\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"stat-header\"},[_c('i',{staticClass:\"el-icon-position\"}),_c('span',[_vm._v(\"主机IP\")])])\n}]\n\nexport { render, staticRenderFns }","// 环境变量配置\nconst config = {\n  // 优先使用运行时配置，然后是环境变量，最后是默认值\n  API_BASE_URL: window.APP_CONFIG?.VUE_APP_API_URL || process.env.VUE_APP_API_BASE_URL || \"http://127.0.0.1:6365/api/v1\",\n  \n  // WebSocket地址配置\n  WS_BASE_URL: window.APP_CONFIG?.VUE_APP_WS_URL || process.env.VUE_APP_WS_BASE_URL || \"ws://127.0.0.1:6365\",\n  \n  // 其他配置\n  REQUEST_TIMEOUT: process.env.VUE_APP_REQUEST_TIMEOUT || 60000\n}\n\nexport default config ","<template>\n  <div class=\"node-container\">\n    <!-- 页面头部 -->\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">\n        <i class=\"el-icon-s-platform\"></i>\n        节点管理\n      </h1>\n      <div class=\"header-actions\">\n        <el-button\n          type=\"primary\" \n          icon=\"el-icon-plus\" \n          @click=\"handleAdd\"\n          class=\"add-btn\"\n        >\n          新增节点\n        </el-button>\n        \n        <el-button \n          type=\"success\" \n          icon=\"el-icon-refresh\" \n          @click=\"loadNodes\"\n          :loading=\"loading\"\n        >\n          刷新\n        </el-button>\n\n      </div>\n    </div>\n\n    <!-- 节点卡片展示 -->\n    <div class=\"cards-container\" v-loading=\"loading\">\n      <div class=\"cards-grid\">\n        <div \n          v-for=\"node in nodeList\" \n          :key=\"node.id\" \n          class=\"node-card\"\n          :class=\"{ 'online': node.connectionStatus === 'online', 'offline': node.connectionStatus !== 'online' }\"\n        >\n          <!-- 节点状态指示器 -->\n          <div class=\"status-indicator\">\n            <div \n              class=\"status-dot\"\n              :class=\"{ 'online': node.connectionStatus === 'online', 'offline': node.connectionStatus !== 'online' }\"\n            ></div>\n            <span class=\"status-text\">\n              {{ node.connectionStatus === 'online' ? '在线' : '离线' }}\n            </span>\n          </div>\n\n          <!-- 节点信息 -->\n          <div class=\"node-info\">\n            <div class=\"node-header\">\n              <h3 class=\"node-name\">{{ node.name }}</h3>\n            </div>\n\n            <!-- 系统监控信息 -->\n            <div class=\"system-stats\">\n              <!-- CPU和内存使用率图表 -->\n              <div class=\"charts-container\" :class=\"{ 'offline-charts': node.connectionStatus !== 'online' }\">\n                <div class=\"chart-item\">\n                  <div class=\"chart-title\">CPU使用率</div>\n                  <div class=\"chart-wrapper\">\n                    <v-chart \n                      :option=\"getCpuChartOption(node.connectionStatus === 'online' ? (node.systemInfo?.cpuUsage || 0) : 0, node.connectionStatus !== 'online')\"\n                      style=\"height: 120px; width: 100%;\"\n                    />\n                  </div>\n                </div>\n                \n                <div class=\"chart-item\">\n                  <div class=\"chart-title\">内存使用率</div>\n                  <div class=\"chart-wrapper\">\n                    <v-chart \n                      :option=\"getMemoryChartOption(node.connectionStatus === 'online' ? (node.systemInfo?.memoryUsage || 0) : 0, node.connectionStatus !== 'online')\"\n                      style=\"height: 120px; width: 100%;\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <!-- 流量信息 -->\n              <div class=\"traffic-stats\" :class=\"{ 'offline-stats': node.connectionStatus !== 'online' }\">\n                <div class=\"stat-item\">\n                  <div class=\"stat-header\">\n                    <i class=\"el-icon-upload2\"></i>\n                    <span>上传流量</span>\n                  </div>\n                  <div class=\"stat-content\">\n                    <span class=\"traffic-value\">\n                      {{ node.connectionStatus === 'online' ? formatBytes(node.systemInfo?.uploadTraffic || 0) : '-' }}\n                    </span>\n                  </div>\n                </div>\n\n                <div class=\"stat-item\">\n                  <div class=\"stat-header\">\n                    <i class=\"el-icon-download\"></i>\n                    <span>下载流量</span>\n                  </div>\n                  <div class=\"stat-content\">\n                    <span class=\"traffic-value\">\n                      {{ node.connectionStatus === 'online' ? formatBytes(node.systemInfo?.downloadTraffic || 0) : '-' }}\n                    </span>\n                  </div>\n                </div>\n\n                <div class=\"stat-item\">\n                  <div class=\"stat-header\">\n                    <i class=\"el-icon-s-grid\"></i>\n                    <span>实时网速</span>\n                  </div>\n                  <div class=\"stat-content\">\n                    <div v-if=\"node.connectionStatus === 'online'\" class=\"speed-info\">\n                      <div class=\"speed-item\">\n                        <span class=\"speed-label\">↑</span>\n                        <span class=\"speed-value\">{{ formatSpeed(node.systemInfo?.uploadSpeed || 0) }}</span>\n                      </div>\n                      <div class=\"speed-item\">\n                        <span class=\"speed-label\">↓</span>\n                        <span class=\"speed-value\">{{ formatSpeed(node.systemInfo?.downloadSpeed || 0) }}</span>\n                      </div>\n                    </div>\n                    <span v-else class=\"traffic-value total\">-</span>\n                  </div>\n                </div>\n\n                <div class=\"stat-item\">\n                  <div class=\"stat-header\">\n                    <i class=\"el-icon-position\"></i>\n                    <span>主机IP</span>\n                  </div>\n                  <div class=\"stat-content\">\n                    <span class=\"ip-value\">{{ node.connectionStatus === 'online' ? (node.ip || '-') : '-' }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"node-actions\">\n            <el-button\n              size=\"small\" \n              type=\"success\" \n              icon=\"el-icon-copy-document\"\n              @click=\"handleCopyInstallCommand(node)\"\n              :loading=\"node.copyLoading\"\n            >\n              复制安装命令\n            </el-button>\n\n            <el-button\n              size=\"small\" \n              type=\"primary\" \n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(node)\"\n            >\n              编辑\n            </el-button>\n\n            <el-button\n              size=\"small\" \n              type=\"danger\" \n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(node)\"\n            >\n              删除\n            </el-button>\n\n          </div>\n        </div>\n      </div>\n\n      <!-- 空状态 -->\n      <div v-if=\"!loading && nodeList.length === 0\" class=\"empty-state\">\n        <i class=\"el-icon-box\"></i>\n        <p>暂无节点数据</p>\n        <el-button type=\"primary\" @click=\"handleAdd\">创建第一个节点</el-button>\n      </div>\n    </div>\n\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\" \n      width=\"500px\"\n      @close=\"resetForm\"\n    >\n      <el-form \n        :model=\"nodeForm\" \n        :rules=\"rules\" \n        ref=\"nodeForm\" \n        label-width=\"80px\"\n      >\n        <el-form-item label=\"节点名称\" prop=\"name\">\n          <el-input \n            v-model=\"nodeForm.name\" \n            placeholder=\"请输入节点名称\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"控制端口\" prop=\"port\">\n          <el-input \n            v-model.number=\"nodeForm.port\" \n            placeholder=\"请输入控制端口\"\n            type=\"number\"\n            min=\"1\"\n            max=\"65535\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        \n        <el-alert\n          v-if=\"!isEdit\"\n          title=\"系统将自动为新节点生成UUID密钥\"\n          type=\"info\"\n          :closable=\"false\"\n          show-icon\n          style=\"margin-bottom: 20px;\">\n        </el-alert>\n        \n        <el-alert\n          v-if=\"isEdit\"\n          title=\"编辑模式下只能修改节点名称和端口，密钥不可更改\"\n          type=\"warning\"\n          :closable=\"false\"\n          show-icon\n          style=\"margin-bottom: 20px;\">\n        </el-alert>\n      </el-form>\n      \n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button \n          type=\"primary\" \n          @click=\"handleSubmit\"\n          :loading=\"submitLoading\"\n        >\n          {{ submitLoading ? '提交中...' : '确 定' }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {createNode, updateNode, deleteNode, getNodeList, getNodeInstallCommand} from \"@/api\";\nimport VChart from 'vue-echarts';\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { GaugeChart } from 'echarts/charts';\nimport { TooltipComponent } from 'echarts/components';\nimport config from '@/config/env';\n\n// 注册必要的组件\nuse([\n  CanvasRenderer,\n  GaugeChart,\n  TooltipComponent\n]);\n\nexport default {\n  name: \"Node\",\n  components: {\n    VChart\n  },\n  data() {\n    return {\n      nodeList: [],\n      loading: false,\n      dialogVisible: false,\n      dialogTitle: '',\n      isEdit: false,\n      submitLoading: false,\n      nodeForm: {\n        id: null,\n        name: '',\n        port: null\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入节点名称', trigger: 'blur' },\n          { min: 2, message: '节点名称长度至少2位', trigger: 'blur' },\n          { max: 50, message: '节点名称长度不能超过50位', trigger: 'blur' }\n        ],\n        port: [\n          { required: true, message: '请输入控制端口', trigger: 'blur' },\n          { type: 'number', message: '控制端口必须为数字', trigger: 'blur' },\n          { \n            validator: (rule, value, callback) => {\n              if (value && (value < 1 || value > 65535)) {\n                callback(new Error('端口号必须在1-65535之间'));\n              } else {\n                callback();\n              }\n            }, \n            trigger: 'blur' \n          }\n        ]\n      },\n      websocket: null,\n      reconnectTimer: null,\n      maxReconnectAttempts: 5,\n      reconnectAttempts: 0\n    };\n  },\n  \n  filters: {\n    dateFormat(timestamp) {\n      if (!timestamp) return '-';\n      const date = new Date(timestamp);\n      return date.toLocaleString('zh-CN');\n    }\n  },\n  \n  mounted() {\n    this.loadNodes();\n    this.initWebSocket();\n  },\n  \n  // 组件激活时（如果使用keep-alive）\n  activated() {\n    // 如果WebSocket已断开，重新连接\n    if (!this.websocket || this.websocket.readyState !== WebSocket.OPEN) {\n      this.initWebSocket();\n    }\n  },\n  \n  // 组件停用时（如果使用keep-alive）\n  deactivated() {\n    this.closeWebSocket();\n  },\n  \n  // 组件销毁前\n  beforeDestroy() {\n    this.closeWebSocket();\n  },\n  \n  // 路由离开守卫\n  beforeRouteLeave(to, from, next) {\n    this.closeWebSocket();\n    next();\n  },\n  \n  methods: {\n    // 加载节点列表\n    loadNodes() {\n      this.loading = true;\n\n      getNodeList().then(res => {\n        this.loading = false;\n        if (res.code === 0) {\n          this.nodeList = res.data.map(node => ({\n            ...node,\n            // 使用接口返回的status作为初始连接状态\n            // status: 1-在线, 0-离线\n            connectionStatus: node.status === 1 ? 'online' : 'offline',\n            systemInfo: null, // 初始化系统信息为空，等待WebSocket数据\n            copyLoading: false // 初始化复制加载状态\n          }));\n        } else {\n          this.$message.error(res.msg || '加载节点列表失败');\n        }\n      }).catch(error => {\n        this.loading = false;\n        this.$message.error('网络错误，请重试');\n      });\n    },\n    \n    // 新增节点\n    handleAdd() {\n      this.dialogTitle = '新增节点';\n      this.isEdit = false;\n      this.dialogVisible = true;\n      this.resetForm();\n    },\n    \n    // 编辑节点\n    handleEdit(node) {\n      this.dialogTitle = '编辑节点';\n      this.isEdit = true;\n      this.nodeForm = {\n        id: node.id,\n        name: node.name,\n        port: node.port\n      };\n      this.dialogVisible = true;\n    },\n    \n    // 删除节点\n    handleDelete(node) {\n      this.$confirm(`确定要删除节点 \"${node.name}\" 吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteNode(node.id).then(res => {\n          if (res.code === 0) {\n            this.$message.success('删除成功');\n            // 从当前列表中移除节点，不重新加载\n            const index = this.nodeList.findIndex(n => n.id === node.id);\n            if (index !== -1) {\n              this.nodeList.splice(index, 1);\n            }\n          } else {\n            this.$message.error(res.msg || '删除失败');\n          }\n        });\n      }).catch(() => {\n        // 用户取消删除\n      });\n    },\n\n    // 复制安装命令\n    handleCopyInstallCommand(node) {\n      // 设置加载状态\n      this.$set(node, 'copyLoading', true);\n      \n      getNodeInstallCommand(node.id).then(res => {\n        this.$set(node, 'copyLoading', false);\n        \n        if (res.code === 0 && res.data) {\n          // 将命令复制到剪贴板\n          this.copyToClipboard(res.data);\n          this.$message.success('安装命令已复制到剪贴板');\n        } else {\n          this.$message.error(res.msg || '获取安装命令失败');\n        }\n      }).catch(error => {\n        this.$set(node, 'copyLoading', false);\n        this.$message.error('网络错误，请重试');\n      });\n    },\n\n    // 复制文本到剪贴板\n    copyToClipboard(text) {\n      // 创建一个临时的文本域元素\n      const textArea = document.createElement('textarea');\n      textArea.value = text;\n      textArea.style.position = 'fixed';\n      textArea.style.left = '-999999px';\n      textArea.style.top = '-999999px';\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      \n      try {\n        // 执行复制命令\n        document.execCommand('copy');\n      } catch (err) {\n        // 如果复制失败，尝试使用现代API\n        if (navigator.clipboard) {\n          navigator.clipboard.writeText(text);\n        }\n      }\n      \n      // 清理临时元素\n      document.body.removeChild(textArea);\n    },\n\n    \n    // 提交表单\n    handleSubmit() {\n      this.$refs.nodeForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          \n          const apiCall = this.isEdit ? updateNode : createNode;\n          const data = this.isEdit ? this.nodeForm : { name: this.nodeForm.name, port: this.nodeForm.port };\n          \n          apiCall(data).then(res => {\n            this.submitLoading = false;\n            if (res.code === 0) {\n              this.$message.success(this.isEdit ? '更新成功' : '创建成功');\n              this.dialogVisible = false;\n              \n              if (this.isEdit) {\n                // 更新操作：只更新当前节点的名称，保持连接状态\n                const existingNode = this.nodeList.find(n => n.id === this.nodeForm.id);\n                if (existingNode) {\n                  existingNode.name = this.nodeForm.name;\n                  existingNode.port = this.nodeForm.port;\n                  existingNode.updatedTime = Date.now(); // 更新时间戳\n                }\n              } else {\n                // 创建操作：重新获取节点列表但保持现有连接状态\n                this.loadNodesWithStatePreservation();\n              }\n            } else {\n              this.$message.error(res.msg || (this.isEdit ? '更新失败' : '创建失败'));\n            }\n          }).catch(() => {\n            this.submitLoading = false;\n            this.$message.error('网络错误，请重试');\n          });\n        }\n      });\n    },\n    \n    // 加载节点列表但保持现有连接状态\n    loadNodesWithStatePreservation() {\n      getNodeList().then(res => {\n        if (res.code === 0) {\n          // 保存当前的连接状态和系统信息\n          const currentStates = {};\n          this.nodeList.forEach(node => {\n            currentStates[node.id] = {\n              connectionStatus: node.connectionStatus,\n              systemInfo: node.systemInfo\n            };\n          });\n          \n          // 更新节点列表，但保持已连接节点的状态\n          this.nodeList = res.data.map(node => ({\n            ...node,\n            // 优先使用已有的连接状态，对于新节点使用接口返回的status\n            // status: 1-在线, 0-离线\n            connectionStatus: currentStates[node.id]?.connectionStatus || \n                            (node.status === 1 ? 'online' : 'offline'),\n            systemInfo: currentStates[node.id]?.systemInfo || null,\n            copyLoading: false // 初始化复制加载状态\n          }));\n        } else {\n          this.$message.error(res.msg || '加载节点列表失败');\n        }\n      }).catch(error => {\n        this.$message.error('网络错误，请重试');\n      });\n    },\n    \n    // 重置表单\n    resetForm() {\n      this.nodeForm = {\n        id: null,\n        name: '',\n        port: null\n      };\n      if (this.$refs.nodeForm) {\n        this.$refs.nodeForm.clearValidate();\n      }\n    },\n    \n    // 初始化WebSocket连接\n    initWebSocket() {\n      // 如果已经存在连接且状态正常，则不重复创建\n      if (this.websocket && \n          (this.websocket.readyState === WebSocket.OPEN || \n           this.websocket.readyState === WebSocket.CONNECTING)) {\n        return;\n      }\n      \n      // 先关闭现有连接（如果有的话）\n      if (this.websocket) {\n        this.closeWebSocket();\n      }\n      \n      const wsUrl = `${config.WS_BASE_URL}/system-info?type=0&secret=` + localStorage.getItem('token');\n      \n      try {\n        this.websocket = new WebSocket(wsUrl);\n        \n        this.websocket.onopen = () => {\n          this.reconnectAttempts = 0;\n        };\n        \n        this.websocket.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            this.handleWebSocketMessage(data);\n          } catch (error) {\n            // 解析失败时不输出错误信息\n          }\n        };\n        \n        this.websocket.onerror = (error) => {\n        };\n        \n        this.websocket.onclose = (event) => {\n          this.websocket = null;\n          // 只有在组件还存在时才尝试重连\n          if (!this._isDestroyed && !this._inactive) {\n            this.attemptReconnect();\n          }\n        };\n      } catch (error) {\n        this.attemptReconnect();\n      }\n    },\n    \n    // 处理WebSocket消息\n    handleWebSocketMessage(data) {\n      const { id, type, data: messageData } = data;\n      \n      if (type === 'status') {\n        // WebSocket状态更新会覆盖初始的接口状态\n        // 这里的状态是实时的连接状态，比接口返回的status更准确\n        const node = this.nodeList.find(n => n.id == id);\n        if (node) {\n          node.connectionStatus = messageData === 1 ? 'online' : 'offline';\n          if (messageData === 0) {\n            node.systemInfo = null;\n          }\n        }\n      } else if (type === 'info') {\n        // 系统监控信息同步，只有在线的节点才会发送这类数据\n        const node = this.nodeList.find(n => n.id == id);\n        if (node) {\n          node.connectionStatus = 'online'; // 收到info说明节点在线\n          \n          try {\n            // data是字符串化的JSON，需要解析\n            let systemInfo;\n            if (typeof messageData === 'string') {\n              systemInfo = JSON.parse(messageData);\n            } else {\n              systemInfo = messageData;\n            }\n            \n            const currentUpload = parseInt(systemInfo.bytes_transmitted) || 0;\n            const currentDownload = parseInt(systemInfo.bytes_received) || 0;\n            const currentUptime = parseInt(systemInfo.uptime) || 0;\n            \n            // 计算网速（如果有历史数据）\n            let uploadSpeed = 0;\n            let downloadSpeed = 0;\n            \n            if (node.systemInfo && node.systemInfo.uptime) {\n              const timeDiff = currentUptime - node.systemInfo.uptime; // 服务器运行时间差（秒）\n              \n              // 确保时间差为正数且合理（避免服务器重启导致uptime重置）\n              if (timeDiff > 0 && timeDiff <= 10) {\n                const lastUpload = node.systemInfo.uploadTraffic || 0;\n                const lastDownload = node.systemInfo.downloadTraffic || 0;\n                \n                const uploadDiff = currentUpload - lastUpload;\n                const downloadDiff = currentDownload - lastDownload;\n                \n                // 检测流量是否重置（当前值小于历史值，可能是服务器重启）\n                const uploadReset = currentUpload < lastUpload;\n                const downloadReset = currentDownload < lastDownload;\n                \n                // 只有在流量正常增长的情况下才计算速度\n                if (!uploadReset && uploadDiff >= 0) {\n                  uploadSpeed = uploadDiff / timeDiff;\n                }\n                \n                if (!downloadReset && downloadDiff >= 0) {\n                  downloadSpeed = downloadDiff / timeDiff;\n                }\n              }\n            }\n            \n            node.systemInfo = {\n              cpuUsage: parseFloat(systemInfo.cpu_usage) || 0,\n              memoryUsage: parseFloat(systemInfo.memory_usage) || 0,\n              uploadTraffic: currentUpload,\n              downloadTraffic: currentDownload,\n              uploadSpeed: uploadSpeed,\n              downloadSpeed: downloadSpeed,\n              uptime: currentUptime\n            };\n            \n          } catch (error) {\n            // 解析失败时不输出错误信息\n          }\n        }\n      }\n    },\n    \n    // 尝试重新连接\n    attemptReconnect() {\n      // 检查组件是否还存在，如果已销毁则不重连\n      if (this._isDestroyed || this._inactive) {\n        return;\n      }\n      \n      if (this.reconnectAttempts < this.maxReconnectAttempts) {\n        this.reconnectAttempts++;\n        \n        this.reconnectTimer = setTimeout(() => {\n          // 再次检查组件状态\n          if (!this._isDestroyed && !this._inactive) {\n            this.initWebSocket();\n          }\n        }, 3000 * this.reconnectAttempts);\n      }\n    },\n    \n    // 关闭WebSocket连接\n    closeWebSocket() {\n      // 清理重连定时器\n      if (this.reconnectTimer) {\n        clearTimeout(this.reconnectTimer);\n        this.reconnectTimer = null;\n      }\n      \n      // 重置重连次数\n      this.reconnectAttempts = 0;\n      \n      // 关闭WebSocket连接\n      if (this.websocket) {\n        // 移除事件监听器，避免触发onclose事件导致重连\n        this.websocket.onopen = null;\n        this.websocket.onmessage = null;\n        this.websocket.onerror = null;\n        this.websocket.onclose = null;\n        \n        // 如果连接还在开启状态，则关闭它\n        if (this.websocket.readyState === WebSocket.OPEN || \n            this.websocket.readyState === WebSocket.CONNECTING) {\n          this.websocket.close();\n        }\n        \n        this.websocket = null;\n      }\n      \n      // 重置所有节点的连接状态为离线\n      this.nodeList.forEach(node => {\n        node.connectionStatus = 'offline';\n        node.systemInfo = null;\n      });\n    },\n    \n    // 获取CPU图表配置\n    getCpuChartOption(cpuUsage, offline = false) {\n      const colors = offline ? \n        [[1, '#d4d4d4']] : \n        [\n          [0.5, '#67c23a'],\n          [0.8, '#e6a23c'],\n          [1, '#f56c6c']\n        ];\n      \n      return {\n        series: [{\n          type: 'gauge',\n          radius: '85%',\n          center: ['50%', '55%'],\n          startAngle: 180,\n          endAngle: 0,\n          min: 0,\n          max: 100,\n          splitNumber: 5,\n          axisLine: {\n            lineStyle: {\n              width: 8,\n              color: colors\n            }\n          },\n          pointer: {\n            width: 3,\n            length: '45%',\n            itemStyle: {\n              color: offline ? '#909399' : '#409eff'\n            }\n          },\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            show: false\n          },\n          axisLabel: {\n            show: false\n          },\n          detail: {\n            formatter: offline ? '-' : '{value}%',\n            fontSize: 18,\n            fontWeight: 'bold',\n            color: offline ? '#909399' : '#303133',\n            offsetCenter: [0, '25%']\n          },\n          title: {\n            show: false\n          },\n          data: [{\n            value: offline ? 0 : cpuUsage.toFixed(1)\n          }]\n        }]\n      };\n    },\n    \n    // 获取内存图表配置\n    getMemoryChartOption(memoryUsage, offline = false) {\n      const colors = offline ? \n        [[1, '#d4d4d4']] : \n        [\n          [0.5, '#67c23a'],\n          [0.8, '#e6a23c'],\n          [1, '#f56c6c']\n        ];\n      \n      return {\n        series: [{\n          type: 'gauge',\n          radius: '85%',\n          center: ['50%', '55%'],\n          startAngle: 180,\n          endAngle: 0,\n          min: 0,\n          max: 100,\n          splitNumber: 5,\n          axisLine: {\n            lineStyle: {\n              width: 8,\n              color: colors\n            }\n          },\n          pointer: {\n            width: 3,\n            length: '45%',\n            itemStyle: {\n              color: offline ? '#909399' : '#409eff'\n            }\n          },\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            show: false\n          },\n          axisLabel: {\n            show: false\n          },\n          detail: {\n            formatter: offline ? '-' : '{value}%',\n            fontSize: 18,\n            fontWeight: 'bold',\n            color: offline ? '#909399' : '#303133',\n            offsetCenter: [0, '25%']\n          },\n          title: {\n            show: false\n          },\n          data: [{\n            value: offline ? 0 : memoryUsage.toFixed(1)\n          }]\n        }]\n      };\n    },\n    \n    // 格式化字节数\n    formatBytes(bytes) {\n      if (bytes === 0) return '0 B';\n      \n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      \n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    },\n    \n    // 格式化速度\n    formatSpeed(bytesPerSecond) {\n      if (bytesPerSecond === 0) return '0 B/s';\n      \n      const k = 1024;\n      const sizes = ['B/s', 'KB/s', 'MB/s', 'GB/s', 'TB/s'];\n      const i = Math.floor(Math.log(bytesPerSecond) / Math.log(k));\n      \n      return parseFloat((bytesPerSecond / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n  }\n};\n</script>\n\n<style scoped>\n.node-container {\n  padding: 20px;\n  background-color: #f5f7fa;\n  min-height: calc(100vh - 60px);\n}\n\n/* 页面头部 */\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  background: white;\n  padding: 20px 30px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n  display: flex;\n  align-items: center;\n}\n\n.page-title i {\n  margin-right: 8px;\n  color: #409eff;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n/* 卡片容器 */\n.cards-container {\n  min-height: 400px;\n}\n\n.cards-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(420px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n/* 节点卡片 */\n.node-card {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  border-left: 4px solid #ddd;\n}\n\n.node-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.15);\n}\n\n.node-card.online {\n  border-left-color: #67c23a;\n}\n\n.node-card.offline {\n  border-left-color: #f56c6c;\n}\n\n/* 状态指示器 */\n.status-indicator {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.status-dot {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  margin-right: 8px;\n  animation: pulse 2s infinite;\n}\n\n.status-dot.online {\n  background-color: #67c23a;\n}\n\n.status-dot.offline {\n  background-color: #f56c6c;\n}\n\n@keyframes pulse {\n  0% { opacity: 1; }\n  50% { opacity: 0.5; }\n  100% { opacity: 1; }\n}\n\n.status-text {\n  font-size: 12px;\n  font-weight: 500;\n  color: #909399;\n}\n\n/* 节点信息 */\n.node-info {\n  margin-bottom: 20px;\n}\n\n.node-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.node-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n}\n\n/* 图表容器 */\n.charts-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.charts-container.offline-charts {\n  opacity: 0.6;\n}\n\n.charts-container.offline-charts .chart-title {\n  color: #909399;\n}\n\n.chart-item {\n  text-align: center;\n}\n\n.chart-title {\n  font-size: 13px;\n  font-weight: 500;\n  color: #606266;\n  margin-bottom: 8px;\n}\n\n.chart-wrapper {\n  background: #fafafa;\n  border-radius: 8px;\n  padding: 10px;\n}\n\n.charts-container.offline-charts .chart-wrapper {\n  background: #f5f5f5;\n}\n\n/* 流量统计 */\n.traffic-stats {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 10px;\n}\n\n.traffic-stats.offline-stats {\n  opacity: 0.6;\n}\n\n.traffic-stats.offline-stats .stat-header {\n  color: #909399;\n}\n\n.traffic-stats.offline-stats .stat-header i {\n  color: #c0c4cc;\n}\n\n.traffic-stats.offline-stats .traffic-value,\n.traffic-stats.offline-stats .ip-value {\n  color: #909399;\n}\n\n.traffic-stats.offline-stats .stat-item {\n  background: #f5f5f5;\n}\n\n.stat-item {\n  background: #fafafa;\n  border-radius: 6px;\n  padding: 10px;\n}\n\n.stat-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 6px;\n  font-size: 12px;\n  color: #606266;\n  font-weight: 500;\n}\n\n.stat-header i {\n  margin-right: 6px;\n  color: #409eff;\n  width: 14px;\n}\n\n.stat-content {\n  text-align: center;\n}\n\n.traffic-value {\n  font-size: 13px;\n  font-weight: 600;\n  color: #409eff;\n  font-family: monospace;\n}\n\n.traffic-value.total {\n  color: #67c23a;\n  font-size: 14px;\n}\n\n.speed-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n}\n\n.speed-item {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 3px;\n  flex: 1;\n}\n\n.speed-label {\n  font-size: 12px;\n  font-weight: bold;\n  color: #909399;\n  width: 12px;\n}\n\n.speed-value {\n  font-size: 11px;\n  font-weight: 600;\n  color: #409eff;\n  font-family: monospace;\n}\n\n.ip-value {\n  font-size: 12px;\n  font-weight: 600;\n  color: #303133;\n  font-family: monospace;\n}\n\n/* 空状态 */\n.empty-state {\n  text-align: center;\n  padding: 60px 20px;\n  color: #909399;\n}\n\n.empty-state i {\n  font-size: 64px;\n  margin-bottom: 20px;\n  opacity: 0.5;\n}\n\n.empty-state p {\n  font-size: 16px;\n  margin-bottom: 20px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .cards-grid {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n  \n  .charts-container {\n    grid-template-columns: 1fr;\n  }\n  \n  .traffic-stats {\n    grid-template-columns: 1fr;\n  }\n  \n  .page-header {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 15px;\n  }\n  \n  .header-actions {\n    justify-content: center;\n  }\n  \n  .node-card {\n    padding: 15px;\n  }\n}\n\n/* 节点操作 */\n.node-actions {\n  display: flex;\n  justify-content: flex-end;\n  flex-wrap: wrap;\n  gap: 8px;\n  border-top: 1px solid #ebeef5;\n  padding-top: 15px;\n}\n\n@media (max-width: 480px) {\n  .node-actions {\n    justify-content: center;\n  }\n  \n  .node-actions .el-button {\n    font-size: 12px;\n    padding: 7px 12px;\n  }\n}\n\n/* 管理员信息面板 */\n.admin-info-panel {\n  margin-top: 15px;\n  padding: 12px;\n  background: linear-gradient(135deg, #f8f9fa, #e9ecef);\n  border-radius: 8px;\n  border-left: 3px solid #007bff;\n}\n\n.admin-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: #007bff;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n}\n\n.admin-title:before {\n  content: '👑';\n  margin-right: 6px;\n}\n\n.admin-details {\n  display: grid;\n  gap: 6px;\n}\n\n.admin-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 4px 0;\n  border-bottom: 1px dotted #dee2e6;\n}\n\n.admin-item:last-child {\n  border-bottom: none;\n}\n\n.admin-item .label {\n  font-size: 12px;\n  color: #6c757d;\n  font-weight: 500;\n}\n\n.admin-item .value {\n  font-size: 12px;\n  color: #495057;\n  font-family: monospace;\n  background: rgba(255, 255, 255, 0.6);\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n/* 管理员状态信息 */\n.admin-info {\n  font-size: 11px;\n  color: #007bff;\n  font-weight: 500;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./node.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./node.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./node.vue?vue&type=template&id=0e93ac7f&scoped=true\"\nimport script from \"./node.vue?vue&type=script&lang=js\"\nexport * from \"./node.vue?vue&type=script&lang=js\"\nimport style0 from \"./node.vue?vue&type=style&index=0&id=0e93ac7f&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0e93ac7f\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tunnel-container\"},[_c('div',{staticClass:\"page-header\"},[_vm._m(0),_c('div',{staticClass:\"header-actions\"},[_c('el-button',{staticClass:\"add-btn\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\" 新增隧道 \")]),_c('el-button',{attrs:{\"type\":\"success\",\"icon\":\"el-icon-refresh\",\"loading\":_vm.loading},on:{\"click\":_vm.loadTunnels}},[_vm._v(\" 刷新 \")])],1)]),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"cards-container\"},[_c('div',{staticClass:\"cards-grid\"},_vm._l((_vm.tunnelList),function(tunnel){return _c('div',{key:tunnel.id,staticClass:\"tunnel-card\",class:{ \n          'disabled': tunnel.status === 0\n        }},[_c('div',{staticClass:\"tunnel-header\"},[_c('h3',{staticClass:\"tunnel-name\"},[_vm._v(_vm._s(tunnel.name))]),_c('div',{staticClass:\"tunnel-badges\"},[(tunnel.type === 1)?_c('el-tag',{attrs:{\"type\":\"primary\",\"size\":\"mini\"}},[_vm._v(\"端口转发\")]):_c('el-tag',{attrs:{\"type\":\"warning\",\"size\":\"mini\"}},[_vm._v(\"隧道转发\")]),(tunnel.flow === 1)?_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"mini\"}},[_vm._v(\"单向计算\")]):_c('el-tag',{attrs:{\"type\":\"info\",\"size\":\"mini\"}},[_vm._v(\"双向计算\")])],1)]),_c('div',{staticClass:\"tunnel-flow\"},[_vm._m(1,true),_vm._m(2,true),_c('div',{staticClass:\"flow-item entrance\"},[_vm._m(3,true),_c('div',{staticClass:\"flow-label\"},[_vm._v(\"入口\")]),_c('div',{staticClass:\"flow-detail\"},[_c('div',{staticClass:\"detail-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"IP:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(tunnel.inIp))])]),_c('div',{staticClass:\"detail-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"端口:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(tunnel.inPortSta === tunnel.inPortEnd ? tunnel.inPortSta : `${tunnel.inPortSta}-${tunnel.inPortEnd}`))])])])]),_vm._m(4,true),_c('div',{staticClass:\"flow-item exit\"},[_vm._m(5,true),_c('div',{staticClass:\"flow-label\"},[_vm._v(\"出口\")]),_c('div',{staticClass:\"flow-detail\"},[_c('div',{staticClass:\"detail-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"IP:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(tunnel.outIp))])]),_c('div',{staticClass:\"detail-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"端口:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(tunnel.outIpSta === tunnel.outIpEnd ? tunnel.outIpSta : `${tunnel.outIpSta}-${tunnel.outIpEnd}`))])])])]),_vm._m(6,true),_vm._m(7,true)]),_c('div',{staticClass:\"tunnel-meta\"},[_c('div',{staticClass:\"meta-item\"},[_c('i',{staticClass:\"el-icon-time\"}),_c('span',[_vm._v(_vm._s(_vm._f(\"dateFormat\")(tunnel.createdTime)))])])]),_c('div',{staticClass:\"tunnel-actions\"},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.handleDelete(tunnel)}}},[_vm._v(\" 删除 \")])],1)])}),0),(!_vm.loading && _vm.tunnelList.length === 0)?_c('div',{staticClass:\"empty-state\"},[_c('i',{staticClass:\"el-icon-connection\"}),_c('p',[_vm._v(\"暂无隧道数据\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"创建第一个隧道\")])],1):_vm._e()]),_c('el-dialog',{attrs:{\"title\":_vm.dialogTitle,\"visible\":_vm.dialogVisible,\"width\":\"600px\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.resetForm}},[_c('el-form',{ref:\"tunnelForm\",attrs:{\"model\":_vm.tunnelForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"隧道名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入隧道名称\",\"clearable\":\"\"},model:{value:(_vm.tunnelForm.name),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"name\", $$v)},expression:\"tunnelForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"隧道类型\",\"prop\":\"type\"}},[_c('el-radio-group',{on:{\"change\":_vm.handleTypeChange},model:{value:(_vm.tunnelForm.type),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"type\", $$v)},expression:\"tunnelForm.type\"}},[_c('el-radio',{attrs:{\"label\":1}},[_vm._v(\"端口转发\")]),_c('el-radio',{attrs:{\"label\":2}},[_vm._v(\"隧道转发\")])],1)],1),_c('el-form-item',{attrs:{\"label\":\"流量计算\",\"prop\":\"flow\"}},[_c('el-radio-group',{model:{value:(_vm.tunnelForm.flow),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"flow\", $$v)},expression:\"tunnelForm.flow\"}},[_c('el-radio',{attrs:{\"label\":1}},[_vm._v(\"单向计算（仅上传）\")]),_c('el-radio',{attrs:{\"label\":2}},[_vm._v(\"双向计算（上传+下载）\")])],1),_c('div',{staticClass:\"form-hint\"},[_vm._v(\" 单向：仅计算上传流量；双向：计算上传和下载的总流量 \")])],1),_c('el-divider',{attrs:{\"content-position\":\"left\"}},[_vm._v(\"入口配置\")]),_c('el-form-item',{attrs:{\"label\":\"入口节点\",\"prop\":\"inNodeId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择入口节点\"},on:{\"change\":_vm.handleNodeChange},model:{value:(_vm.tunnelForm.inNodeId),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"inNodeId\", $$v)},expression:\"tunnelForm.inNodeId\"}},_vm._l((_vm.onlineNodes),function(node){return _c('el-option',{key:node.id,attrs:{\"label\":`${node.name} (${node.status === 1 ? '在线' : '离线'})`,\"value\":node.id,\"disabled\":false}},[_c('span',{staticStyle:{\"float\":\"left\"}},[_vm._v(_vm._s(node.name))]),_c('span',{staticStyle:{\"float\":\"right\",\"font-size\":\"13px\"},style:({ color: node.status === 1 ? '#67c23a' : '#f56c6c' })},[_vm._v(\" \"+_vm._s(node.status === 1 ? '在线' : '离线')+\" \")])])}),1)],1),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"起始端口\",\"prop\":\"inPortSta\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":1,\"max\":65535,\"placeholder\":\"起始端口\"},model:{value:(_vm.tunnelForm.inPortSta),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"inPortSta\", $$v)},expression:\"tunnelForm.inPortSta\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"结束端口\",\"prop\":\"inPortEnd\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":1,\"max\":65535,\"placeholder\":\"结束端口\"},model:{value:(_vm.tunnelForm.inPortEnd),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"inPortEnd\", $$v)},expression:\"tunnelForm.inPortEnd\"}})],1)],1)],1),(_vm.tunnelForm.type === 2)?[_c('el-divider',{attrs:{\"content-position\":\"left\"}},[_vm._v(\"出口配置\")]),_c('el-form-item',{attrs:{\"label\":\"出口节点\",\"prop\":\"outNodeId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择出口节点\"},on:{\"change\":_vm.handleNodeChange},model:{value:(_vm.tunnelForm.outNodeId),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"outNodeId\", $$v)},expression:\"tunnelForm.outNodeId\"}},_vm._l((_vm.onlineNodes),function(node){return _c('el-option',{key:node.id,attrs:{\"label\":`${node.name} (${node.status === 1 ? '在线' : '离线'})`,\"value\":node.id,\"disabled\":_vm.tunnelForm.inNodeId && node.id === _vm.tunnelForm.inNodeId}},[_c('span',{staticStyle:{\"float\":\"left\"}},[_vm._v(_vm._s(node.name))]),_c('span',{staticStyle:{\"float\":\"right\",\"font-size\":\"13px\"},style:({ color: node.status === 1 ? '#67c23a' : '#f56c6c' })},[_vm._v(\" \"+_vm._s(node.status === 1 ? '在线' : '离线')+\" \"+_vm._s(_vm.tunnelForm.inNodeId && node.id === _vm.tunnelForm.inNodeId ? ' (已选为入口)' : '')+\" \")])])}),1)],1),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"起始端口\",\"prop\":\"outIpSta\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":10000,\"max\":65535,\"placeholder\":\"起始端口\"},model:{value:(_vm.tunnelForm.outIpSta),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"outIpSta\", $$v)},expression:\"tunnelForm.outIpSta\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"结束端口\",\"prop\":\"outIpEnd\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":10000,\"max\":65535,\"placeholder\":\"结束端口\"},model:{value:(_vm.tunnelForm.outIpEnd),callback:function ($$v) {_vm.$set(_vm.tunnelForm, \"outIpEnd\", $$v)},expression:\"tunnelForm.outIpEnd\"}})],1)],1)],1)]:_vm._e(),(_vm.tunnelForm.type === 1)?_c('el-alert',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"title\":\"端口转发模式：出口配置将自动使用入口配置\",\"type\":\"info\",\"closable\":false,\"show-icon\":\"\"}}):_vm._e()],2),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.submitLoading},on:{\"click\":_vm.handleSubmit}},[_vm._v(\" \"+_vm._s(_vm.submitLoading ? '创建中...' : '创 建')+\" \")])],1)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('h1',{staticClass:\"page-title\"},[_c('i',{staticClass:\"el-icon-connection\"}),_vm._v(\" 隧道管理 \")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"flow-item client\"},[_c('div',{staticClass:\"flow-icon\"},[_c('i',{staticClass:\"el-icon-monitor\"})]),_c('div',{staticClass:\"flow-label\"},[_vm._v(\"客户端\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"flow-arrow\"},[_c('i',{staticClass:\"el-icon-right\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"flow-icon\"},[_c('i',{staticClass:\"el-icon-upload\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"flow-arrow\"},[_c('i',{staticClass:\"el-icon-right\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"flow-icon\"},[_c('i',{staticClass:\"el-icon-download\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"flow-arrow\"},[_c('i',{staticClass:\"el-icon-right\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"flow-item target\"},[_c('div',{staticClass:\"flow-icon\"},[_c('i',{staticClass:\"el-icon-position\"})]),_c('div',{staticClass:\"flow-label\"},[_vm._v(\"目标\")]),_c('div',{staticClass:\"flow-detail\"},[_c('div',{staticClass:\"detail-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"目标服务\")])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"tunnel-container\">\n    <!-- 页面头部 -->\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">\n        <i class=\"el-icon-connection\"></i>\n        隧道管理\n      </h1>\n      <div class=\"header-actions\">\n        <el-button \n          type=\"primary\" \n          icon=\"el-icon-plus\" \n          @click=\"handleAdd\"\n          class=\"add-btn\"\n        >\n          新增隧道\n        </el-button>\n        \n        <el-button \n          type=\"success\" \n          icon=\"el-icon-refresh\" \n          @click=\"loadTunnels\"\n          :loading=\"loading\"\n        >\n          刷新\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 隧道卡片展示 -->\n    <div class=\"cards-container\" v-loading=\"loading\">\n      <div class=\"cards-grid\">\n        <div \n          v-for=\"tunnel in tunnelList\" \n          :key=\"tunnel.id\" \n          class=\"tunnel-card\"\n          :class=\"{ \n            'disabled': tunnel.status === 0\n          }\"\n        >\n          <!-- 隧道头部 -->\n          <div class=\"tunnel-header\">\n            <h3 class=\"tunnel-name\">{{ tunnel.name }}</h3>\n            <div class=\"tunnel-badges\">\n              <el-tag v-if=\"tunnel.type === 1\" type=\"primary\" size=\"mini\">端口转发</el-tag>\n              <el-tag v-else type=\"warning\" size=\"mini\">隧道转发</el-tag>\n              <el-tag v-if=\"tunnel.flow === 1\" type=\"success\" size=\"mini\">单向计算</el-tag>\n              <el-tag v-else type=\"info\" size=\"mini\">双向计算</el-tag>\n            </div>\n          </div>\n\n          <!-- 流程图 -->\n          <div class=\"tunnel-flow\">\n            <!-- 客户端 -->\n            <div class=\"flow-item client\">\n              <div class=\"flow-icon\">\n                <i class=\"el-icon-monitor\"></i>\n              </div>\n              <div class=\"flow-label\">客户端</div>\n            </div>\n\n            <!-- 箭头 -->\n            <div class=\"flow-arrow\">\n              <i class=\"el-icon-right\"></i>\n            </div>\n\n            <!-- 入口 -->\n            <div class=\"flow-item entrance\">\n              <div class=\"flow-icon\">\n                <i class=\"el-icon-upload\"></i>\n              </div>\n              <div class=\"flow-label\">入口</div>\n              <div class=\"flow-detail\">\n                <div class=\"detail-item\">\n                  <span class=\"label\">IP:</span>\n                  <span class=\"value\">{{ tunnel.inIp }}</span>\n                </div>\n                <div class=\"detail-item\">\n                  <span class=\"label\">端口:</span>\n                  <span class=\"value\">{{ tunnel.inPortSta === tunnel.inPortEnd ? tunnel.inPortSta : `${tunnel.inPortSta}-${tunnel.inPortEnd}` }}</span>\n                </div>\n              </div>\n            </div>\n\n            <!-- 箭头 -->\n            <div class=\"flow-arrow\">\n              <i class=\"el-icon-right\"></i>\n            </div>\n\n            <!-- 出口 -->\n            <div class=\"flow-item exit\">\n              <div class=\"flow-icon\">\n                <i class=\"el-icon-download\"></i>\n              </div>\n              <div class=\"flow-label\">出口</div>\n              <div class=\"flow-detail\">\n                <div class=\"detail-item\">\n                  <span class=\"label\">IP:</span>\n                  <span class=\"value\">{{ tunnel.outIp }}</span>\n                </div>\n                <div class=\"detail-item\">\n                  <span class=\"label\">端口:</span>\n                  <span class=\"value\">{{ tunnel.outIpSta === tunnel.outIpEnd ? tunnel.outIpSta : `${tunnel.outIpSta}-${tunnel.outIpEnd}` }}</span>\n                </div>\n              </div>\n            </div>\n\n            <!-- 箭头 -->\n            <div class=\"flow-arrow\">\n              <i class=\"el-icon-right\"></i>\n            </div>\n\n            <!-- 目标 -->\n            <div class=\"flow-item target\">\n              <div class=\"flow-icon\">\n                <i class=\"el-icon-position\"></i>\n              </div>\n              <div class=\"flow-label\">目标</div>\n              <div class=\"flow-detail\">\n                <div class=\"detail-item\">\n                  <span class=\"label\">目标服务</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 创建时间 -->\n          <div class=\"tunnel-meta\">\n            <div class=\"meta-item\">\n              <i class=\"el-icon-time\"></i>\n              <span>{{ tunnel.createdTime | dateFormat }}</span>\n            </div>\n          </div>\n\n          <!-- 操作按钮 -->\n          <div class=\"tunnel-actions\">\n            <el-button \n              size=\"small\" \n              type=\"danger\" \n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(tunnel)\"\n            >\n              删除\n            </el-button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 空状态 -->\n      <div v-if=\"!loading && tunnelList.length === 0\" class=\"empty-state\">\n        <i class=\"el-icon-connection\"></i>\n        <p>暂无隧道数据</p>\n        <el-button type=\"primary\" @click=\"handleAdd\">创建第一个隧道</el-button>\n      </div>\n    </div>\n\n    <!-- 新增/编辑隧道对话框 -->\n    <el-dialog \n      :title=\"dialogTitle\" \n      :visible.sync=\"dialogVisible\" \n      width=\"600px\"\n      @close=\"resetForm\"\n    >\n      <el-form \n        :model=\"tunnelForm\" \n        :rules=\"rules\" \n        ref=\"tunnelForm\" \n        label-width=\"100px\"\n      >\n        <el-form-item label=\"隧道名称\" prop=\"name\">\n          <el-input \n            v-model=\"tunnelForm.name\" \n            placeholder=\"请输入隧道名称\"\n            clearable\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"隧道类型\" prop=\"type\">\n          <el-radio-group v-model=\"tunnelForm.type\" @change=\"handleTypeChange\">\n            <el-radio :label=\"1\">端口转发</el-radio>\n            <el-radio :label=\"2\">隧道转发</el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"流量计算\" prop=\"flow\">\n          <el-radio-group v-model=\"tunnelForm.flow\">\n            <el-radio :label=\"1\">单向计算（仅上传）</el-radio>\n            <el-radio :label=\"2\">双向计算（上传+下载）</el-radio>\n          </el-radio-group>\n          <div class=\"form-hint\">\n            单向：仅计算上传流量；双向：计算上传和下载的总流量\n          </div>\n        </el-form-item>\n\n        <el-divider content-position=\"left\">入口配置</el-divider>\n\n        <el-form-item label=\"入口节点\" prop=\"inNodeId\">\n          <el-select \n            v-model=\"tunnelForm.inNodeId\" \n            placeholder=\"请选择入口节点\"\n            style=\"width: 100%\"\n            @change=\"handleNodeChange\"\n          >\n            <el-option \n              v-for=\"node in onlineNodes\" \n              :key=\"node.id\" \n              :label=\"`${node.name} (${node.status === 1 ? '在线' : '离线'})`\" \n              :value=\"node.id\"\n              :disabled=\"false\"\n            >\n              <span style=\"float: left\">{{ node.name }}</span>\n              <span style=\"float: right; font-size: 13px\"\n                    :style=\"{ color: node.status === 1 ? '#67c23a' : '#f56c6c' }\">\n                {{ node.status === 1 ? '在线' : '离线' }}\n              </span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"起始端口\" prop=\"inPortSta\">\n              <el-input-number \n                v-model=\"tunnelForm.inPortSta\" \n                :min=\"1\" \n                :max=\"65535\"\n                placeholder=\"起始端口\"\n                style=\"width: 100%\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"结束端口\" prop=\"inPortEnd\">\n              <el-input-number \n                v-model=\"tunnelForm.inPortEnd\" \n                :min=\"1\" \n                :max=\"65535\"\n                placeholder=\"结束端口\"\n                style=\"width: 100%\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n        <!-- 只有隧道转发(type=2)时才显示出口配置 -->\n        <template v-if=\"tunnelForm.type === 2\">\n          <el-divider content-position=\"left\">出口配置</el-divider>\n\n          <el-form-item label=\"出口节点\" prop=\"outNodeId\">\n            <el-select \n              v-model=\"tunnelForm.outNodeId\" \n              placeholder=\"请选择出口节点\"\n              style=\"width: 100%\"\n              @change=\"handleNodeChange\"\n            >\n              <el-option \n                v-for=\"node in onlineNodes\" \n                :key=\"node.id\" \n                :label=\"`${node.name} (${node.status === 1 ? '在线' : '离线'})`\" \n                :value=\"node.id\"\n                :disabled=\"tunnelForm.inNodeId && node.id === tunnelForm.inNodeId\"\n              >\n                <span style=\"float: left\">{{ node.name }}</span>\n                <span style=\"float: right; font-size: 13px\"\n                      :style=\"{ color: node.status === 1 ? '#67c23a' : '#f56c6c' }\">\n                  {{ node.status === 1 ? '在线' : '离线' }}\n                  {{ tunnelForm.inNodeId && node.id === tunnelForm.inNodeId ? ' (已选为入口)' : '' }}\n                </span>\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-row :gutter=\"20\">\n            <el-col :span=\"12\">\n              <el-form-item label=\"起始端口\" prop=\"outIpSta\">\n                <el-input-number \n                  v-model=\"tunnelForm.outIpSta\" \n                  :min=\"10000\"\n                  :max=\"65535\"\n                  placeholder=\"起始端口\"\n                  style=\"width: 100%\"\n                ></el-input-number>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"结束端口\" prop=\"outIpEnd\">\n                <el-input-number \n                  v-model=\"tunnelForm.outIpEnd\" \n                  :min=\"10000\"\n                  :max=\"65535\"\n                  placeholder=\"结束端口\"\n                  style=\"width: 100%\"\n                ></el-input-number>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </template>\n\n        <el-alert\n          v-if=\"tunnelForm.type === 1\"\n          title=\"端口转发模式：出口配置将自动使用入口配置\"\n          type=\"info\"\n          :closable=\"false\"\n          show-icon\n          style=\"margin-top: 20px;\">\n        </el-alert>\n      </el-form>\n      \n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button \n          type=\"primary\" \n          @click=\"handleSubmit\"\n          :loading=\"submitLoading\"\n        >\n          {{ submitLoading ? '创建中...' : '创 建' }}\n        </el-button>\n      </span>\n    </el-dialog>\n          </div>\n</template>\n\n<script>\nimport { createTunnel, deleteTunnel, getTunnelList, getNodeList } from \"@/api\";\n\nexport default {\n  name: \"Tunnel\",\n  data() {\n    return {\n      tunnelList: [],\n      nodeList: [],\n      loading: false,\n      dialogVisible: false,\n      dialogTitle: '新增隧道',\n      submitLoading: false,\n      tunnelForm: {\n        id: null,\n        name: '',\n        inNodeId: null,\n        inPortSta: 10000,\n        inPortEnd: 65535,\n        outNodeId: null,\n        outIpSta: 10000,\n        outIpEnd: 65535,\n        type: 1,\n        flow: 1,  // 默认单向计算\n        status: 1  // 默认启用\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入隧道名称', trigger: 'blur' },\n          { min: 2, message: '隧道名称长度至少2位', trigger: 'blur' },\n          { max: 50, message: '隧道名称长度不能超过50位', trigger: 'blur' }\n        ],\n        inNodeId: [\n          { required: true, message: '请选择入口节点', trigger: 'change' }\n        ],\n        inPortSta: [\n          { required: true, message: '请输入起始端口', trigger: 'blur' }\n        ],\n        inPortEnd: [\n          { required: true, message: '请输入结束端口', trigger: 'blur' }\n        ],\n        type: [\n          { required: true, message: '请选择隧道类型', trigger: 'change' }\n        ],\n        flow: [\n          { required: true, message: '请选择流量计算类型', trigger: 'change' }\n        ],\n        // 隧道转发时的出口验证规则\n        outNodeId: [\n          { required: false, message: '请选择出口节点', trigger: 'change' }\n        ],\n        outIpSta: [\n          { required: false, message: '请输入起始端口', trigger: 'blur' }\n        ],\n        outIpEnd: [\n          { required: false, message: '请输入结束端口', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n\n  filters: {\n    dateFormat(timestamp) {\n      if (!timestamp) return '-';\n      const date = new Date(timestamp);\n      return date.toLocaleString('zh-CN');\n    }\n  },\n\n  computed: {\n    // 可用节点列表（显示所有节点，但在选择器中标识状态）\n    onlineNodes() {\n      return this.nodeList || [];\n    }\n  },\n\n  mounted() {\n    this.loadTunnels();\n  },\n\n  methods: {\n    // 加载节点列表\n    loadNodes() {\n      getNodeList().then(res => {\n        if (res.code === 0) {\n          this.nodeList = res.data || [];\n        } else {\n          this.$message.error(res.msg || '加载节点列表失败');\n        }\n      }).catch(error => {\n        this.$message.error('加载节点列表失败');\n      });\n    },\n\n    // 节点选择改变时的处理\n    handleNodeChange() {\n      // 可以在这里添加一些节点选择后的逻辑\n      // 例如：更新相关配置或验证\n    },\n\n    // 加载隧道列表\n    loadTunnels() {\n      this.loading = true;\n\n      getTunnelList().then(res => {\n        this.loading = false;\n        if (res.code === 0) {\n          this.tunnelList = res.data || [];\n        } else {\n          this.$message.error(res.msg || '加载隧道列表失败');\n        }\n      }).catch(error => {\n        this.loading = false;\n        this.$message.error('网络错误，请重试');\n      });\n    },\n\n    // 新增隧道\n    handleAdd() {\n      this.dialogVisible = true;\n      this.resetForm();\n      this.loadNodes(); // 打开对话框时加载节点列表\n    },\n\n    // 编辑功能已移除 - 隧道创建后不能修改\n\n    // 删除隧道\n    handleDelete(tunnel) {\n      this.$confirm(`确定要删除隧道 \"${tunnel.name}\" 吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteTunnel(tunnel.id).then(res => {\n          if (res.code === 0) {\n            this.$message.success('删除成功');\n            this.loadTunnels();\n          } else {\n            this.$message.error(res.msg || '删除失败');\n          }\n        });\n      }).catch(() => {\n        // 用户取消删除\n      });\n    },\n\n    // 状态切换功能已移除 - 隧道创建后不能修改状态\n\n    // 隧道类型改变时的处理\n    handleTypeChange(value) {\n      if (value === 2) {\n        // 隧道转发时，出口字段变为必填\n        this.rules.outNodeId[0].required = true;\n        this.rules.outIpSta[0].required = true;\n        this.rules.outIpEnd[0].required = true;\n      } else {\n        // 端口转发时，出口字段不必填\n        this.rules.outNodeId[0].required = false;\n        this.rules.outIpSta[0].required = false;\n        this.rules.outIpEnd[0].required = false;\n        \n        // 清空出口字段\n        this.tunnelForm.outNodeId = null;\n        this.tunnelForm.outIpSta = null;\n        this.tunnelForm.outIpEnd = null;\n      }\n    },\n\n    // 提交表单\n    handleSubmit() {\n      this.$refs.tunnelForm.validate(valid => {\n        if (valid) {\n          // 端口范围验证\n          if (this.tunnelForm.inPortSta > this.tunnelForm.inPortEnd) {\n            this.$message.error('入口起始端口不能大于结束端口');\n            return;\n          }\n\n          // 隧道转发时验证入口和出口节点不能相同\n          if (this.tunnelForm.type === 2 && \n              this.tunnelForm.inNodeId === this.tunnelForm.outNodeId) {\n            this.$message.error('隧道转发模式下，入口和出口不能是同一个节点');\n            return;\n          }\n\n          if (this.tunnelForm.type === 2 && \n              this.tunnelForm.outIpSta && this.tunnelForm.outIpEnd &&\n              this.tunnelForm.outIpSta > this.tunnelForm.outIpEnd) {\n            this.$message.error('出口起始端口不能大于结束端口');\n            return;\n          }\n\n          this.submitLoading = true;\n          \n          // 只支持创建隧道，不支持编辑\n          const data = { ...this.tunnelForm };\n          \n          createTunnel(data).then(res => {\n            this.submitLoading = false;\n            if (res.code === 0) {\n              this.$message.success('创建成功');\n              this.dialogVisible = false;\n              this.loadTunnels();\n            } else {\n              this.$message.error(res.msg || '创建失败');\n            }\n          }).catch(() => {\n            this.submitLoading = false;\n            this.$message.error('网络错误，请重试');\n          });\n        }\n      });\n    },\n\n    // 重置表单\n    resetForm() {\n      this.tunnelForm = {\n        id: null,\n        name: '',\n        inNodeId: null,\n        inPortSta: 10000,\n        inPortEnd: 65535,\n        outNodeId: null,\n        outIpSta: 10000,\n        outIpEnd: 65535,\n        type: 1,\n        flow: 1,  // 默认单向计算\n        status: 1  // 默认启用\n      };\n      if (this.$refs.tunnelForm) {\n        this.$refs.tunnelForm.clearValidate();\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.tunnel-container {\n  padding: 20px;\n  background-color: #f5f7fa;\n  min-height: calc(100vh - 60px);\n}\n\n/* 页面头部 */\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  background: white;\n  padding: 20px 30px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n  display: flex;\n  align-items: center;\n}\n\n.page-title i {\n  margin-right: 8px;\n  color: #409eff;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n/* 卡片容器 */\n.cards-container {\n  min-height: 400px;\n}\n\n.cards-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n  align-items: start;\n}\n\n/* 隧道卡片 */\n.tunnel-card {\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  border-left: 4px solid #409eff;\n  position: relative;\n  height: auto;\n  min-height: 320px;\n  display: flex;\n  flex-direction: column;\n}\n\n.tunnel-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.15);\n}\n\n/* 禁用状态样式 */\n.tunnel-card.disabled {\n  opacity: 0.6;\n  background: #f5f7fa !important;\n  border-left-color: #c0c4cc !important;\n}\n\n.tunnel-card.disabled .flow-icon {\n  background: #c0c4cc !important;\n}\n\n.tunnel-card.disabled .tunnel-name {\n  color: #909399 !important;\n}\n\n.tunnel-card.disabled .detail-item .value {\n  color: #c0c4cc !important;\n}\n\n.tunnel-card.disabled .flow-label {\n  color: #c0c4cc !important;\n}\n\n.tunnel-card.disabled::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(192, 196, 204, 0.1);\n  pointer-events: none;\n  border-radius: 12px;\n}\n\n/* 隧道头部 */\n.tunnel-header {\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.tunnel-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n  flex: 1;\n}\n\n.tunnel-badges {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n/* 流程图 */\n.tunnel-flow {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  padding: 20px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  overflow-x: auto;\n}\n\n.flow-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-width: 100px;\n  flex-shrink: 0;\n}\n\n.flow-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 8px;\n  font-size: 18px;\n  color: white;\n}\n\n.client .flow-icon {\n  background: #909399;\n}\n\n.entrance .flow-icon {\n  background: #409eff;\n}\n\n.exit .flow-icon {\n  background: #f56c6c;\n}\n\n.target .flow-icon {\n  background: #67c23a;\n}\n\n.flow-label {\n  font-size: 14px;\n  font-weight: 500;\n  color: #606266;\n  margin-bottom: 8px;\n}\n\n.flow-detail {\n  text-align: center;\n}\n\n.detail-item {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 2px;\n}\n\n.detail-item .label {\n  font-weight: 500;\n}\n\n.detail-item .value {\n  color: #303133;\n  font-family: monospace;\n}\n\n.flow-arrow {\n  color: #c0c4cc;\n  font-size: 16px;\n  margin: 0 10px;\n}\n\n/* 隧道元信息 */\n.tunnel-meta {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  font-size: 12px;\n  color: #909399;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n}\n\n.meta-item i {\n  margin-right: 5px;\n}\n\n/* 操作按钮 */\n.tunnel-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  padding-top: 15px;\n  margin-top: auto;\n}\n\n/* 表单提示 */\n.form-hint {\n  color: #909399;\n  font-size: 12px;\n  margin-top: 5px;\n  line-height: 1.4;\n}\n\n/* 空状态 */\n.empty-state {\n  text-align: center;\n  padding: 60px 20px;\n  color: #909399;\n}\n\n.empty-state i {\n  font-size: 64px;\n  margin-bottom: 20px;\n  opacity: 0.5;\n}\n\n.empty-state p {\n  font-size: 16px;\n  margin-bottom: 20px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .cards-grid {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n  \n  .tunnel-flow {\n    flex-direction: column;\n    gap: 15px;\n  }\n  \n  .flow-arrow {\n    transform: rotate(90deg);\n  }\n  \n  .page-header {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 15px;\n  }\n  \n  .header-actions {\n    justify-content: center;\n  }\n  \n  .tunnel-card {\n    padding: 15px;\n  }\n  \n  .tunnel-name {\n    margin-right: 80px;\n  }\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Tunnel.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Tunnel.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Tunnel.vue?vue&type=template&id=0242d058&scoped=true\"\nimport script from \"./Tunnel.vue?vue&type=script&lang=js\"\nexport * from \"./Tunnel.vue?vue&type=script&lang=js\"\nimport style0 from \"./Tunnel.vue?vue&type=style&index=0&id=0242d058&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0242d058\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"forward-container\"},[_c('div',{staticClass:\"page-header\"},[_c('h1',{staticClass:\"page-title\"},[_vm._v(\"转发管理\")]),_c('div',{staticClass:\"header-actions\"},[_c('el-input',{staticStyle:{\"width\":\"250px\",\"margin-right\":\"15px\"},attrs:{\"placeholder\":\"搜索转发名称或远程地址\",\"prefix-icon\":\"el-icon-search\",\"clearable\":\"\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleSearch.apply(null, arguments)}},model:{value:(_vm.searchKeyword),callback:function ($$v) {_vm.searchKeyword=$$v},expression:\"searchKeyword\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.handleSearch},slot:\"append\"})],1),_c('el-button',{staticClass:\"add-btn\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\" 新增转发 \")])],1)]),_c('div',{staticClass:\"table-container\"},[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"cards-container\"},[(_vm.forwardList.length === 0 && !_vm.loading)?_c('div',{staticClass:\"empty-state\"},[_c('el-empty',{attrs:{\"description\":\"暂无转发配置\"}})],1):_vm._e(),_vm._l((_vm.forwardList),function(forward){return _c('div',{key:forward.id,staticClass:\"forward-card\"},[_c('div',{staticClass:\"card-header\"},[_c('div',{staticClass:\"card-title\"},[_c('i',{staticClass:\"el-icon-connection\"}),_vm._v(\" \"+_vm._s(forward.name)+\" \")]),_c('div',{staticClass:\"card-actions\"},[_c('el-switch',{staticStyle:{\"margin-right\":\"10px\"},attrs:{\"loading\":forward.switchLoading,\"disabled\":forward.status !== 1 && forward.status !== 0,\"active-color\":\"#13ce66\",\"inactive-color\":\"#ff4949\"},on:{\"change\":function($event){return _vm.handleServiceToggle(forward)}},model:{value:(forward.serviceRunning),callback:function ($$v) {_vm.$set(forward, \"serviceRunning\", $$v)},expression:\"forward.serviceRunning\"}}),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.handleEdit(forward)}}}),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.handleDelete(forward)}}})],1)]),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"info-row\"},[_c('div',{staticClass:\"info-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"隧道名称:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(forward.tunnelName || '未知隧道'))])]),_c('div',{staticClass:\"info-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"状态:\")]),_c('el-tag',{attrs:{\"type\":_vm.getStatusType(forward.status),\"size\":\"small\"}},[_vm._v(\" \"+_vm._s(_vm.getStatusText(forward.status))+\" \")])],1)]),_c('div',{staticClass:\"info-row\"},[_c('div',{staticClass:\"info-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"入口地址:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(forward.inIp)+\":\"+_vm._s(forward.inPort))])]),_c('div',{staticClass:\"info-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"目标地址:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(forward.remoteAddr))])])]),_c('div',{staticClass:\"info-row\"},[_c('div',{staticClass:\"info-item full-width\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"创建时间:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(_vm._f(\"dateFormat\")(forward.createdTime)))])]),_c('div',{directives:[{name:\"admin\",rawName:\"v-admin\"}],staticClass:\"info-item full-width\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"归属账号:\")]),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(forward.userName))])])]),_c('div',{staticClass:\"info-row\"},[_c('div',{staticClass:\"info-item\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"流量统计:\")]),_c('div',{staticClass:\"flow-stats-mini\"},[_c('div',{staticClass:\"flow-stat-item\"},[_c('span',{staticClass:\"flow-stat-label\"},[_vm._v(\"入站:\")]),_c('span',{staticClass:\"flow-stat-value in\"},[_vm._v(_vm._s(_vm.formatFlow(forward.inFlow || 0)))])]),_c('div',{staticClass:\"flow-stat-item\"},[_c('span',{staticClass:\"flow-stat-label\"},[_vm._v(\"出站:\")]),_c('span',{staticClass:\"flow-stat-value out\"},[_vm._v(_vm._s(_vm.formatFlow(forward.outFlow || 0)))])]),_c('div',{staticClass:\"flow-stat-item\"},[_c('span',{staticClass:\"flow-stat-label\"},[_vm._v(\"总计:\")]),_c('span',{staticClass:\"flow-stat-value total\"},[_vm._v(_vm._s(_vm.formatFlow((forward.inFlow || 0) + (forward.outFlow || 0))))])])])])])])])})],2)]),_c('el-dialog',{attrs:{\"title\":_vm.dialogTitle,\"visible\":_vm.dialogVisible,\"width\":\"600px\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.resetForm}},[_c('el-form',{ref:\"forwardForm\",attrs:{\"model\":_vm.forwardForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"转发名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入转发名称\",\"clearable\":\"\"},model:{value:(_vm.forwardForm.name),callback:function ($$v) {_vm.$set(_vm.forwardForm, \"name\", $$v)},expression:\"forwardForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"选择隧道\",\"prop\":\"tunnelId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择关联的隧道\"},on:{\"change\":_vm.handleTunnelChange},model:{value:(_vm.forwardForm.tunnelId),callback:function ($$v) {_vm.$set(_vm.forwardForm, \"tunnelId\", $$v)},expression:\"forwardForm.tunnelId\"}},_vm._l((_vm.tunnelList),function(tunnel){return _c('el-option',{key:tunnel.id || tunnel.tunnelId,attrs:{\"label\":_vm.getTunnelDisplayName(tunnel),\"value\":tunnel.id || tunnel.tunnelId}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"远程地址\",\"prop\":\"remoteAddr\"}},[_c('el-input',{attrs:{\"placeholder\":\"例如: 192.168.1.100:8080\",\"clearable\":\"\"},model:{value:(_vm.forwardForm.remoteAddr),callback:function ($$v) {_vm.$set(_vm.forwardForm, \"remoteAddr\", $$v)},expression:\"forwardForm.remoteAddr\"}},[_c('template',{slot:\"prepend\"},[_vm._v(\"目标\")])],2),_c('div',{staticClass:\"form-hint\"},[_vm._v(\" 格式: IP:端口 或 域名:端口 \")])],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.submitLoading},on:{\"click\":_vm.handleSubmit}},[_vm._v(\" \"+_vm._s(_vm.submitLoading ? '提交中...' : '确 定')+\" \")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"forward-container\">\n    <!-- 页面头部 -->\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">转发管理</h1>\n      <div class=\"header-actions\">\n        <!-- 搜索框 -->\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索转发名称或远程地址\"\n          prefix-icon=\"el-icon-search\"\n          @keyup.enter.native=\"handleSearch\"\n          clearable\n          style=\"width: 250px; margin-right: 15px;\"\n        >\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\n        </el-input>\n        \n        <el-button \n          type=\"primary\" \n          icon=\"el-icon-plus\" \n          @click=\"handleAdd\"\n          class=\"add-btn\"\n        >\n          新增转发\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 转发列表 -->\n    <div class=\"table-container\">\n      <div v-loading=\"loading\" class=\"cards-container\">\n        <div v-if=\"forwardList.length === 0 && !loading\" class=\"empty-state\">\n          <el-empty description=\"暂无转发配置\"></el-empty>\n        </div>\n        \n        <div \n          v-for=\"forward in forwardList\" \n          :key=\"forward.id\" \n          class=\"forward-card\"\n        >\n          <div class=\"card-header\">\n            <div class=\"card-title\">\n              <i class=\"el-icon-connection\"></i>\n              {{ forward.name }}\n            </div>\n            <div class=\"card-actions\">\n              <!-- 服务开关 -->\n              <el-switch\n                v-model=\"forward.serviceRunning\"\n                :loading=\"forward.switchLoading\"\n                :disabled=\"forward.status !== 1 && forward.status !== 0\"\n                active-color=\"#13ce66\"\n                inactive-color=\"#ff4949\"\n                @change=\"handleServiceToggle(forward)\"\n                style=\"margin-right: 10px;\"\n              ></el-switch>\n              \n              <el-button \n                size=\"mini\" \n                type=\"primary\" \n                icon=\"el-icon-edit\"\n                @click=\"handleEdit(forward)\"\n                circle\n              ></el-button>\n              <el-button \n                size=\"mini\" \n                type=\"danger\" \n                icon=\"el-icon-delete\"\n                @click=\"handleDelete(forward)\"\n                circle\n              ></el-button>\n            </div>\n          </div>\n          \n          <div class=\"card-body\">\n            <div class=\"info-row\">\n              <div class=\"info-item\">\n                <span class=\"label\">隧道名称:</span>\n                <span class=\"value\">{{ forward.tunnelName || '未知隧道' }}</span>\n              </div>\n              <div class=\"info-item\">\n                <span class=\"label\">状态:</span>\n                <el-tag \n                  :type=\"getStatusType(forward.status)\"\n                  size=\"small\"\n                >\n                  {{ getStatusText(forward.status) }}\n                </el-tag>\n              </div>\n            </div>\n            \n            <div class=\"info-row\">\n              <div class=\"info-item\">\n                <span class=\"label\">入口地址:</span>\n                <span class=\"value\">{{ forward.inIp}}:{{ forward.inPort }}</span>\n              </div>\n              <div class=\"info-item\">\n                <span class=\"label\">目标地址:</span>\n                <span class=\"value\">{{ forward.remoteAddr}}</span>\n              </div>\n            </div>\n            \n            <div class=\"info-row\">\n              <div class=\"info-item full-width\">\n                <span class=\"label\">创建时间:</span>\n                <span class=\"value\">{{ forward.createdTime | dateFormat }}</span>\n              </div>\n              <div class=\"info-item full-width\" v-admin>\n                <span class=\"label\">归属账号:</span>\n                <span class=\"value\">{{ forward.userName}}</span>\n              </div>\n            </div>\n            \n            <div class=\"info-row\">\n              <div class=\"info-item\">\n                <span class=\"label\">流量统计:</span>\n                <div class=\"flow-stats-mini\">\n                  <div class=\"flow-stat-item\">\n                    <span class=\"flow-stat-label\">入站:</span>\n                    <span class=\"flow-stat-value in\">{{ formatFlow(forward.inFlow || 0) }}</span>\n                  </div>\n                  <div class=\"flow-stat-item\">\n                    <span class=\"flow-stat-label\">出站:</span>\n                    <span class=\"flow-stat-value out\">{{ formatFlow(forward.outFlow || 0) }}</span>\n                  </div>\n                  <div class=\"flow-stat-item\">\n                    <span class=\"flow-stat-label\">总计:</span>\n                    <span class=\"flow-stat-value total\">{{ formatFlow((forward.inFlow || 0) + (forward.outFlow || 0)) }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 新增/编辑转发对话框 -->\n    <el-dialog \n      :title=\"dialogTitle\" \n      :visible.sync=\"dialogVisible\" \n      width=\"600px\"\n      @close=\"resetForm\"\n    >\n      <el-form \n        :model=\"forwardForm\" \n        :rules=\"rules\" \n        ref=\"forwardForm\" \n        label-width=\"100px\"\n      >\n        <el-form-item label=\"转发名称\" prop=\"name\">\n          <el-input \n            v-model=\"forwardForm.name\" \n            placeholder=\"请输入转发名称\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"选择隧道\" prop=\"tunnelId\">\n          <el-select \n            v-model=\"forwardForm.tunnelId\" \n            placeholder=\"请选择关联的隧道\"\n            style=\"width: 100%;\"\n            @change=\"handleTunnelChange\"\n          >\n            <el-option\n              v-for=\"tunnel in tunnelList\"\n              :key=\"tunnel.id || tunnel.tunnelId\"\n              :label=\"getTunnelDisplayName(tunnel)\"\n              :value=\"tunnel.id || tunnel.tunnelId\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"远程地址\" prop=\"remoteAddr\">\n          <el-input \n            v-model=\"forwardForm.remoteAddr\" \n            placeholder=\"例如: 192.168.1.100:8080\"\n            clearable\n          >\n            <template slot=\"prepend\">目标</template>\n          </el-input>\n          <div class=\"form-hint\">\n            格式: IP:端口 或 域名:端口\n          </div>\n        </el-form-item>\n        \n\n      </el-form>\n      \n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button \n          type=\"primary\" \n          @click=\"handleSubmit\"\n          :loading=\"submitLoading\"\n        >\n          {{ submitLoading ? '提交中...' : '确 定' }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { \n  createForward, \n  getForwardList, \n  updateForward, \n  deleteForward, \n  userTunnel, \n  getTunnelList,\n  pauseForwardService,\n  resumeForwardService\n} from \"@/api\";\n\nexport default {\n  name: \"Forward\",\n  data() {\n    return {\n      loading: false,\n      submitLoading: false,\n      searchKeyword: '',\n      forwardList: [],\n      tunnelList: [],\n      selectedTunnel: null,\n      \n      // 对话框状态\n      dialogVisible: false,\n      dialogTitle: '',\n      isEdit: false,\n      \n      // 表单数据\n      forwardForm: {\n        id: null,\n        userId: null,\n        name: '',\n        tunnelId: null,\n        remoteAddr: ''\n      },\n      \n      // 表单验证规则\n      rules: {\n        name: [\n          { required: true, message: '请输入转发名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        tunnelId: [\n          { required: true, message: '请选择关联隧道', trigger: 'change' }\n        ],\n        remoteAddr: [\n          { required: true, message: '请输入远程地址', trigger: 'blur' },\n          { \n            pattern: /^[\\w\\.-]+:\\d+$/, \n            message: '请输入正确的地址格式，如: 192.168.1.100:8080', \n            trigger: 'blur' \n          }\n        ]\n      }\n    }\n  },\n  \n  created() {\n    this.loadForwardList();\n  },\n  \n  methods: {\n    // 加载转发列表\n    async loadForwardList() {\n      try {\n        this.loading = true;\n        const res = await getForwardList();\n        if (res.code === 0) {\n          // 直接使用后端返回的状态数据\n          this.forwardList = res.data.map(forward => ({\n            ...forward,\n            serviceRunning: forward.status === 1, // 根据 status 初始化开关状态\n            switchLoading: false // 开关加载状态\n          }));\n        } else {\n          this.$message.error(res.msg || '获取转发列表失败');\n        }\n      } catch (error) {\n        console.error('加载转发列表失败:', error);\n        this.$message.error('加载转发列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 加载隧道列表\n    async loadTunnelList(callback, forceReload = false) {\n      try {\n        // 如果已经有隧道数据且不强制重新加载，直接返回\n        if (this.tunnelList.length > 0 && !forceReload) {\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n          return Promise.resolve();\n        }\n\n        // 先尝试获取用户可用的隧道权限列表\n        let res = await userTunnel();\n        if (res.code === 0 && res.data && res.data.length > 0) {\n          // 如果是普通用户，使用用户隧道权限列表\n          this.tunnelList = res.data;\n          // 如果有回调函数，在隧道列表加载完成后执行\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n          return Promise.resolve();\n        } else {\n          throw new Error(res.msg || '没有可用的隧道');\n        }\n      } catch (error) {\n        console.error('加载隧道列表失败:', error);\n        this.$message.error('加载隧道列表失败');\n        return Promise.reject(error);\n      }\n    },\n    \n    // 搜索功能\n    handleSearch() {\n      if (!this.searchKeyword.trim()) {\n        this.loadForwardList();\n        return;\n      }\n      \n      // 实现本地搜索过滤\n      this.loading = true;\n      setTimeout(() => {\n        const filtered = this.forwardList.filter(forward => \n          forward.name.includes(this.searchKeyword) || \n          forward.remoteAddr.includes(this.searchKeyword)\n        );\n        this.forwardList = filtered;\n        this.loading = false;\n      }, 300);\n    },\n    \n    // 新增转发\n    async handleAdd() {\n      this.isEdit = false;\n      this.dialogTitle = '新增转发';\n      \n      try {\n        // 只在没有隧道数据时才加载\n        await this.loadTunnelList();\n        this.dialogVisible = true;\n      } catch (error) {\n        this.$message.error('加载隧道列表失败，无法新增');\n      }\n    },\n    \n    // 编辑转发\n    async handleEdit(row) {\n      this.isEdit = true;\n      this.dialogTitle = '编辑转发';\n      \n      try {\n        // 只在没有隧道数据时才加载\n        await this.loadTunnelList();\n        \n        // 隧道列表加载完成后，设置表单数据并弹出对话框\n      this.forwardForm = { \n        ...row,\n        userId: row.userId // 确保userId被正确设置\n      };\n      this.handleTunnelChange(row.tunnelId);\n      this.dialogVisible = true;\n      } catch (error) {\n        this.$message.error('加载隧道列表失败，无法编辑');\n      }\n    },\n    \n    // 删除转发\n    async handleDelete(row) {\n      try {\n        await this.$confirm(`确定要删除转发 \"${row.name}\" 吗？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        \n        const res = await deleteForward(row.id);\n        if (res.code === 0) {\n          this.$message.success('删除成功');\n          this.loadForwardList();\n        } else {\n          this.$message.error(res.msg || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除转发失败:', error);\n          this.$message.error('删除失败');\n        }\n      }\n    },\n    \n    // 隧道选择变化处理\n    handleTunnelChange(tunnelId) {\n      this.selectedTunnel = this.tunnelList.find(tunnel => \n        tunnel.id === tunnelId || tunnel.tunnelId === tunnelId\n      ) || null;\n    },\n    \n    // 提交表单\n    async handleSubmit() {\n      try {\n        await this.$refs.forwardForm.validate();\n        \n        this.submitLoading = true;\n        let res;\n        \n        if (this.isEdit) {\n          // 更新时确保包含必要字段\n          const updateData = {\n            id: this.forwardForm.id,\n            userId: this.forwardForm.userId,\n            name: this.forwardForm.name,\n            tunnelId: this.forwardForm.tunnelId,\n            remoteAddr: this.forwardForm.remoteAddr\n          };\n          res = await updateForward(updateData);\n        } else {\n          // 创建时不需要id和userId（后端会自动设置）\n          const createData = {\n            name: this.forwardForm.name,\n            tunnelId: this.forwardForm.tunnelId,\n            remoteAddr: this.forwardForm.remoteAddr\n          };\n          res = await createForward(createData);\n        }\n        \n        if (res.code === 0) {\n          this.$message.success(this.isEdit ? '修改成功' : '创建成功');\n          this.dialogVisible = false;\n          await this.loadForwardList();\n        } else {\n          this.$message.error(res.msg || '操作失败');\n        }\n      } catch (error) {\n        if (error !== false) { // 表单验证失败时不显示错误消息\n          console.error('提交失败:', error);\n          this.$message.error('操作失败');\n        }\n      } finally {\n        this.submitLoading = false;\n      }\n    },\n    \n    // 重置表单\n    resetForm() {\n      this.forwardForm = {\n        id: null,\n        userId: null,\n        name: '',\n        tunnelId: null,\n        remoteAddr: ''\n      };\n      this.selectedTunnel = null;\n      this.$nextTick(() => {\n        if (this.$refs.forwardForm) {\n          this.$refs.forwardForm.clearValidate();\n        }\n      });\n    },\n    \n    // 获取隧道显示名称\n    getTunnelDisplayName(tunnel) {\n      if (!tunnel) return '未知隧道';\n      \n      // 处理用户隧道权限列表的数据结构\n      if (tunnel.tunnelId) {\n        const tunnelInfo = this.tunnelList.find(t => t.id === tunnel.tunnelId);\n        if (tunnelInfo && tunnelInfo.ip && tunnelInfo.port) {\n          return `${tunnelInfo.name || tunnel.tunnelId} (${tunnelInfo.ip}:${tunnelInfo.port})`;\n        }\n        return `隧道ID: ${tunnel.tunnelId}`;\n      }\n      \n      // 处理直接隧道数据结构\n      if (tunnel.name) {\n        if (tunnel.ip && tunnel.port) {\n          return `${tunnel.name} (${tunnel.ip}:${tunnel.port})`;\n        }\n        return tunnel.name;\n      }\n      \n      return `隧道ID: ${tunnel.id || 'unknown'}`;\n    },\n    \n    formatFlow(value) {\n      if (value === 0) return '0';\n      if (value < 1024) return value + ' B';\n      if (value < 1024 * 1024) return (value / 1024).toFixed(2) + ' KB';\n      if (value < 1024 * 1024 * 1024) return (value / (1024 * 1024)).toFixed(2) + ' MB';\n      return (value / (1024 * 1024 * 1024)).toFixed(2) + ' GB';\n    },\n    \n    // 获取状态类型\n    getStatusType(status) {\n      switch (parseInt(status)) {\n        case 1:\n          return 'success'; // 绿色 - 正常\n        case 0:\n          return 'danger';  // 红色 - 停用\n        case -1:\n          return 'danger';  // 红色 - 停用\n        default:\n          return 'info';    // 蓝色 - 未知状态\n      }\n    },\n    \n    // 获取状态文本\n    getStatusText(status) {\n      switch (parseInt(status)) {\n        case 1:\n          return '正常';\n        case 0:\n          return '停用';\n        case -1:\n          return '异常';\n\n        default:\n          return '未知';\n      }\n    },\n    \n\n\n\n     \n     // 处理服务开关\n      async handleServiceToggle(forward) {\n        // 检查转发状态，只有状态为1（正常）或0（暂停）时才能操作\n        if (forward.status !== 1 && forward.status !== 0) {\n          this.$message.warning('转发状态异常，无法操作');\n          // 恢复开关状态\n          this.$set(forward, 'serviceRunning', !forward.serviceRunning);\n          return;\n        }\n        \n        const targetState = forward.serviceRunning;\n       \n       try {\n         // 设置加载状态\n         this.$set(forward, 'switchLoading', true);\n         \n         let res;\n         if (targetState) {\n           // 启动服务\n           res = await resumeForwardService(forward.id);\n         } else {\n           // 暂停服务\n           res = await pauseForwardService(forward.id);\n         }\n         \n         if (res.code === 0) {\n           this.$message.success(targetState ? '服务已启动' : '服务已暂停');\n           // 更新转发状态\n           forward.status = targetState ? 1 : 0;\n         } else {\n           // 操作失败，恢复开关状态\n           this.$set(forward, 'serviceRunning', !targetState);\n           this.$message.error(res.msg || '操作失败');\n         }\n       } catch (error) {\n         console.error('服务开关操作失败:', error);\n         // 操作失败，恢复开关状态\n         this.$set(forward, 'serviceRunning', !targetState);\n         this.$message.error('网络错误，操作失败');\n       } finally {\n         // 取消加载状态\n         this.$set(forward, 'switchLoading', false);\n       }\n     }\n  },\n  \n  filters: {\n    dateFormat(value) {\n      if (!value) return '';\n      const date = new Date(value);\n      return date.toLocaleString();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.forward-container {\n  padding: 20px;\n  background-color: #f5f5f5;\n  min-height: 100vh;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.page-title {\n  margin: 0;\n  color: #303133;\n  font-size: 24px;\n  font-weight: 600;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n}\n\n.add-btn {\n  border-radius: 6px;\n  font-weight: 500;\n}\n\n.table-container {\n  padding: 20px;\n}\n\n.form-hint {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.tunnel-info {\n  margin-top: 10px;\n}\n\n.dialog-footer {\n  text-align: right;\n}\n\n/* Element UI 样式调整 */\n.el-table {\n  border-radius: 8px;\n}\n\n.el-dialog {\n  border-radius: 12px;\n}\n\n.el-dialog__title {\n  font-weight: 600;\n}\n\n.el-button--mini {\n  border-radius: 4px;\n}\n\n.el-tag {\n  border-radius: 4px;\n}\n\n.el-input-group__prepend {\n  background-color: #f5f7fa;\n  border-color: #dcdfe6;\n  color: #606266;\n}\n\n.cards-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 20px;\n  padding: 10px 0;\n}\n\n.forward-card {\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  padding: 24px;\n  transition: all 0.3s ease;\n  border: 1px solid #f0f0f0;\n}\n\n.forward-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 24px rgba(0,0,0,0.15);\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.card-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #303133;\n  display: flex;\n  align-items: center;\n}\n\n.card-title i {\n  margin-right: 8px;\n  color: #409EFF;\n}\n\n.card-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.card-body {\n  margin-top: 16px;\n}\n\n.info-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 16px;\n}\n\n.info-row:last-child {\n  margin-bottom: 0;\n}\n\n.info-item {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.info-item.full-width {\n  flex: 1;\n}\n\n.info-item:not(:last-child) {\n  margin-right: 20px;\n}\n\n.label {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 4px;\n  font-weight: 500;\n}\n\n.value {\n  font-size: 14px;\n  color: #303133;\n  font-weight: 500;\n}\n\n.empty-state {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 300px;\n}\n\n.flow-stats-mini {\n  display: flex;\n  gap: 8px;\n}\n\n.flow-stat-item {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.flow-stat-label {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 4px;\n  font-weight: 500;\n}\n\n.flow-stat-value {\n  font-size: 14px;\n  color: #303133;\n  font-weight: 500;\n}\n\n.flow-stat-value.in {\n  color: #67C23A;\n}\n\n.flow-stat-value.out {\n  color: #E6A23C;\n}\n\n.flow-stat-value.total {\n  color: #F56C6C;\n}\n\n/* 服务开关样式优化 */\n.el-switch {\n  margin-right: 8px;\n}\n\n.el-switch__label {\n  color: #606266;\n  font-weight: 500;\n}\n\n.el-switch__label.is-active {\n  color: #13ce66;\n}\n\n.card-actions .el-switch {\n  transform: scale(0.9);\n}\n\n/* 禁用状态的开关样式 */\n.el-switch.is-disabled {\n  opacity: 0.6;\n}\n\n.el-switch.is-disabled .el-switch__label {\n  color: #c0c4cc !important;\n}\n\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Forward.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Forward.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Forward.vue?vue&type=template&id=066b1068&scoped=true\"\nimport script from \"./Forward.vue?vue&type=script&lang=js\"\nexport * from \"./Forward.vue?vue&type=script&lang=js\"\nimport style0 from \"./Forward.vue?vue&type=style&index=0&id=066b1068&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"066b1068\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"speed-limit-container\"},[_c('div',{staticClass:\"page-header\"},[_vm._m(0),_c('div',{staticClass:\"header-actions\"},[_c('el-input',{staticStyle:{\"width\":\"250px\",\"margin-right\":\"15px\"},attrs:{\"placeholder\":\"搜索规则名称\",\"prefix-icon\":\"el-icon-search\",\"clearable\":\"\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleSearch.apply(null, arguments)}},model:{value:(_vm.searchKeyword),callback:function ($$v) {_vm.searchKeyword=$$v},expression:\"searchKeyword\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.handleSearch},slot:\"append\"})],1),_c('el-button',{staticClass:\"add-btn\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\" 新增限速规则 \")]),_c('el-button',{attrs:{\"type\":\"success\",\"icon\":\"el-icon-refresh\",\"loading\":_vm.loading},on:{\"click\":_vm.loadSpeedLimits}},[_vm._v(\" 刷新 \")])],1)]),_c('div',{staticClass:\"table-container\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.speedLimitList,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"80\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"规则名称\",\"show-overflow-tooltip\":\"\"}}),_c('el-table-column',{attrs:{\"prop\":\"speed\",\"label\":\"速度限制\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":\"info\"}},[_vm._v(_vm._s(scope.row.speed)+\" Mbps\")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":scope.row.status === 1 ? 'success' : 'danger'}},[_vm._v(\" \"+_vm._s(scope.row.status === 1 ? '运行' : '异常')+\" \")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"tunnelName\",\"label\":\"绑定隧道\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.tunnelName)?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(_vm._s(scope.row.tunnelName))]):_c('span',{staticClass:\"text-muted\"},[_vm._v(\"未绑定\")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"createdTime\",\"label\":\"创建时间\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm._f(\"dateFormat\")(scope.row.createdTime))+\" \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"updatedTime\",\"label\":\"更新时间\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm._f(\"dateFormat\")(scope.row.updatedTime))+\" \")]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"fixed\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.handleEdit(scope.row)}}}),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.handleDelete(scope.row)}}})]}}])})],1),(!_vm.loading && _vm.speedLimitList.length === 0)?_c('div',{staticClass:\"empty-state\"},[_c('el-empty',{attrs:{\"description\":\"暂无限速规则\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"创建第一个限速规则\")])],1)],1):_vm._e()],1),_c('el-dialog',{attrs:{\"title\":_vm.dialogTitle,\"visible\":_vm.dialogVisible,\"width\":\"500px\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.resetForm}},[_c('el-form',{ref:\"speedLimitForm\",attrs:{\"model\":_vm.speedLimitForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"规则名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入限速规则名称\",\"clearable\":\"\"},model:{value:(_vm.speedLimitForm.name),callback:function ($$v) {_vm.$set(_vm.speedLimitForm, \"name\", $$v)},expression:\"speedLimitForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"速度限制\",\"prop\":\"speed\"}},[_c('el-input-number',{staticStyle:{\"width\":\"100%\"},attrs:{\"min\":1,\"max\":1000000,\"placeholder\":\"请输入速度限制\"},model:{value:(_vm.speedLimitForm.speed),callback:function ($$v) {_vm.$set(_vm.speedLimitForm, \"speed\", $$v)},expression:\"speedLimitForm.speed\"}}),_c('div',{staticClass:\"form-hint\"},[_vm._v(\" 单位：Mbps \")])],1),_c('el-form-item',{attrs:{\"label\":\"绑定隧道\",\"prop\":\"tunnelId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择要绑定的隧道\",\"filterable\":\"\"},on:{\"change\":_vm.handleTunnelChange},model:{value:(_vm.speedLimitForm.tunnelId),callback:function ($$v) {_vm.$set(_vm.speedLimitForm, \"tunnelId\", $$v)},expression:\"speedLimitForm.tunnelId\"}},_vm._l((_vm.tunnelList),function(tunnel){return _c('el-option',{key:tunnel.id,attrs:{\"label\":tunnel.name,\"value\":tunnel.id}})}),1),_c('div',{staticClass:\"form-hint\"},[_vm._v(\" 选择要应用限速规则的隧道 \")])],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.submitLoading},on:{\"click\":_vm.handleSubmit}},[_vm._v(\" \"+_vm._s(_vm.submitLoading ? '提交中...' : '确 定')+\" \")])],1)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('h1',{staticClass:\"page-title\"},[_c('i',{staticClass:\"el-icon-odometer\"}),_vm._v(\" 限速管理 \")])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"speed-limit-container\">\n    <!-- 页面头部 -->\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">\n        <i class=\"el-icon-odometer\"></i>\n        限速管理\n      </h1>\n      <div class=\"header-actions\">\n        <!-- 搜索框 -->\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索规则名称\"\n          prefix-icon=\"el-icon-search\"\n          @keyup.enter.native=\"handleSearch\"\n          clearable\n          style=\"width: 250px; margin-right: 15px;\"\n        >\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\n        </el-input>\n        \n        <el-button\n          type=\"primary\" \n          icon=\"el-icon-plus\" \n          @click=\"handleAdd\"\n          class=\"add-btn\"\n        >\n          新增限速规则\n        </el-button>\n        \n        <el-button \n          type=\"success\" \n          icon=\"el-icon-refresh\" \n          @click=\"loadSpeedLimits\"\n          :loading=\"loading\"\n        >\n          刷新\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 限速规则列表 -->\n    <div class=\"table-container\">\n      <el-table \n        :data=\"speedLimitList\" \n        v-loading=\"loading\"\n        stripe\n        border\n        style=\"width: 100%\"\n      >\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"规则名称\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"speed\" label=\"速度限制\" >\n          <template slot-scope=\"scope\">\n            <el-tag type=\"info\">{{ scope.row.speed }} Mbps</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '运行' : '异常' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"tunnelName\" label=\"绑定隧道\" show-overflow-tooltip>\n          <template slot-scope=\"scope\">\n            <el-tag type=\"success\" v-if=\"scope.row.tunnelName\">{{ scope.row.tunnelName }}</el-tag>\n            <span v-else class=\"text-muted\">未绑定</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createdTime\" label=\"创建时间\" >\n          <template slot-scope=\"scope\">\n            {{ scope.row.createdTime | dateFormat }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"updatedTime\" label=\"更新时间\" >\n          <template slot-scope=\"scope\">\n            {{ scope.row.updatedTime | dateFormat }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\"  fixed=\"right\">\n          <template slot-scope=\"scope\">\n            <el-button \n              size=\"mini\" \n              type=\"primary\" \n              icon=\"el-icon-edit\"\n              @click=\"handleEdit(scope.row)\"\n            >\n            </el-button>\n            <el-button \n              size=\"mini\" \n              type=\"danger\" \n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.row)\"\n            >\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 空状态 -->\n      <div v-if=\"!loading && speedLimitList.length === 0\" class=\"empty-state\">\n        <el-empty description=\"暂无限速规则\">\n          <el-button type=\"primary\" @click=\"handleAdd\">创建第一个限速规则</el-button>\n        </el-empty>\n      </div>\n    </div>\n\n    <!-- 新增/编辑对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\" \n      width=\"500px\"\n      @close=\"resetForm\"\n    >\n      <el-form \n        :model=\"speedLimitForm\" \n        :rules=\"rules\" \n        ref=\"speedLimitForm\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"规则名称\" prop=\"name\">\n          <el-input \n            v-model=\"speedLimitForm.name\" \n            placeholder=\"请输入限速规则名称\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"速度限制\" prop=\"speed\">\n          <el-input-number\n            v-model=\"speedLimitForm.speed\"\n            :min=\"1\"\n            :max=\"1000000\"\n            placeholder=\"请输入速度限制\"\n            style=\"width: 100%;\"\n          ></el-input-number>\n          <div class=\"form-hint\">\n            单位：Mbps\n          </div>\n        </el-form-item>\n        \n\n        \n        <el-form-item label=\"绑定隧道\" prop=\"tunnelId\">\n          <el-select \n            v-model=\"speedLimitForm.tunnelId\" \n            placeholder=\"请选择要绑定的隧道\"\n            style=\"width: 100%;\"\n            filterable\n            @change=\"handleTunnelChange\"\n          >\n            <el-option\n              v-for=\"tunnel in tunnelList\"\n              :key=\"tunnel.id\"\n              :label=\"tunnel.name\"\n              :value=\"tunnel.id\"\n            ></el-option>\n          </el-select>\n          <div class=\"form-hint\">\n            选择要应用限速规则的隧道\n          </div>\n        </el-form-item>\n      </el-form>\n      \n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button \n          type=\"primary\" \n          @click=\"handleSubmit\"\n          :loading=\"submitLoading\"\n        >\n          {{ submitLoading ? '提交中...' : '确 定' }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { createSpeedLimit, getSpeedLimitList, updateSpeedLimit, deleteSpeedLimit, getTunnelList } from \"@/api\";\n\nexport default {\n  name: \"Limit\",\n  data() {\n    return {\n      speedLimitList: [],\n      tunnelList: [],\n      loading: false,\n      dialogVisible: false,\n      dialogTitle: '',\n      isEdit: false,\n      submitLoading: false,\n      searchKeyword: '',\n      \n      // 表单数据\n      speedLimitForm: {\n        id: null,\n        name: '',\n        speed: 100,\n        tunnelId: null,\n        tunnelName: '',\n        status: 1\n      },\n      \n      // 表单验证规则\n      rules: {\n        name: [\n          { required: true, message: '请输入规则名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        speed: [\n          { required: true, message: '请输入速度限制', trigger: 'blur' },\n          { type: 'number', min: 1, message: '速度限制必须大于0', trigger: 'blur' }\n        ],\n        tunnelId: [\n          { required: true, message: '请选择要绑定的隧道', trigger: 'change' }\n        ]\n      }\n    };\n  },\n  \n  mounted() {\n    this.loadSpeedLimits();\n    this.loadTunnels();\n  },\n  \n  methods: {\n    // 加载限速规则列表\n    async loadSpeedLimits() {\n      try {\n        this.loading = true;\n        const res = await getSpeedLimitList();\n        if (res.code === 0) {\n          this.speedLimitList = res.data || [];\n        } else {\n          this.$message.error(res.msg || '获取限速规则列表失败');\n        }\n      } catch (error) {\n        console.error('加载限速规则列表失败:', error);\n        this.$message.error('加载限速规则列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // 加载隧道列表\n    async loadTunnels() {\n      try {\n        const res = await getTunnelList();\n        if (res.code === 0) {\n          this.tunnelList = res.data || [];\n        } else {\n          console.error('获取隧道列表失败:', res.msg);\n        }\n      } catch (error) {\n        console.error('加载隧道列表失败:', error);\n      }\n    },\n    \n    // 搜索功能\n    handleSearch() {\n      if (!this.searchKeyword.trim()) {\n        this.loadSpeedLimits();\n        return;\n      }\n      \n      // 实现本地搜索过滤\n      this.loading = true;\n      setTimeout(() => {\n        const filtered = this.speedLimitList.filter(item => \n          item.name.includes(this.searchKeyword)\n        );\n        this.speedLimitList = filtered;\n        this.loading = false;\n      }, 300);\n    },\n    \n    // 处理隧道选择变化\n    handleTunnelChange(tunnelId) {\n      const selectedTunnel = this.tunnelList.find(tunnel => tunnel.id === tunnelId);\n      if (selectedTunnel) {\n        this.speedLimitForm.tunnelName = selectedTunnel.name;\n      } else {\n        this.speedLimitForm.tunnelName = '';\n      }\n    },\n\n    // 新增限速规则\n    handleAdd() {\n      this.isEdit = false;\n      this.dialogTitle = '新增限速规则';\n      this.dialogVisible = true;\n    },\n    \n    // 编辑限速规则\n    handleEdit(row) {\n      this.isEdit = true;\n      this.dialogTitle = '编辑限速规则';\n      this.speedLimitForm = { \n        id: row.id,\n        name: row.name,\n        speed: row.speed,\n        tunnelId: row.tunnelId,\n        tunnelName: row.tunnelName,\n        status: row.status || 1\n      };\n      this.dialogVisible = true;\n    },\n    \n    // 删除限速规则\n    async handleDelete(row) {\n      try {\n        await this.$confirm(`确定要删除限速规则 \"${row.name}\" 吗？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        \n        const res = await deleteSpeedLimit(row.id);\n        if (res.code === 0) {\n          this.$message.success('删除成功');\n          this.loadSpeedLimits();\n        } else {\n          this.$message.error(res.msg || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除限速规则失败:', error);\n          this.$message.error('删除失败');\n        }\n      }\n    },\n    \n    // 提交表单\n    async handleSubmit() {\n      try {\n        await this.$refs.speedLimitForm.validate();\n        \n        this.submitLoading = true;\n        let res;\n        \n        if (this.isEdit) {\n          res = await updateSpeedLimit(this.speedLimitForm);\n        } else {\n          const { id, ...createData } = this.speedLimitForm;\n          res = await createSpeedLimit(createData);\n        }\n        \n        if (res.code === 0) {\n          this.$message.success(this.isEdit ? '修改成功' : '创建成功');\n          this.dialogVisible = false;\n          this.loadSpeedLimits();\n        } else {\n          this.$message.error(res.msg || '操作失败');\n        }\n      } catch (error) {\n        if (error !== false) { // 表单验证失败时不显示错误消息\n          console.error('提交失败:', error);\n          this.$message.error('操作失败');\n        }\n      } finally {\n        this.submitLoading = false;\n      }\n    },\n    \n    // 重置表单\n    resetForm() {\n      this.speedLimitForm = {\n        id: null,\n        name: '',\n        speed: 100,\n        tunnelId: null,\n        tunnelName: '',\n        status: 1\n      };\n      this.$nextTick(() => {\n        if (this.$refs.speedLimitForm) {\n          this.$refs.speedLimitForm.clearValidate();\n        }\n      });\n    }\n  },\n  \n  filters: {\n    dateFormat(value) {\n      if (!value) return '';\n      const date = new Date(value);\n      return date.toLocaleString();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.speed-limit-container {\n  padding: 20px;\n  background-color: #f5f5f5;\n  min-height: 100vh;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.page-title {\n  margin: 0;\n  color: #303133;\n  font-size: 24px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n}\n\n.page-title i {\n  margin-right: 12px;\n  font-size: 28px;\n  color: #409EFF;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n}\n\n.add-btn {\n  border-radius: 6px;\n  font-weight: 500;\n}\n\n.table-container {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  padding: 20px;\n}\n\n.form-hint {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.dialog-footer {\n  text-align: right;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 40px;\n}\n\n/* Element UI 样式调整 */\n.el-table {\n  border-radius: 8px;\n}\n\n.el-dialog {\n  border-radius: 12px;\n}\n\n.el-dialog__title {\n  font-weight: 600;\n}\n\n.el-button--mini {\n  border-radius: 4px;\n}\n\n.el-tag {\n  border-radius: 4px;\n}\n\n.text-muted {\n  color: #909399;\n  font-style: italic;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .speed-limit-container {\n    padding: 10px;\n  }\n  \n  .page-header {\n    flex-direction: column;\n    gap: 15px;\n    align-items: stretch;\n  }\n  \n  .header-actions {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .page-title {\n    text-align: center;\n  }\n}\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Limit.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Limit.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Limit.vue?vue&type=template&id=c8993518&scoped=true\"\nimport script from \"./Limit.vue?vue&type=script&lang=js\"\nexport * from \"./Limit.vue?vue&type=script&lang=js\"\nimport style0 from \"./Limit.vue?vue&type=style&index=0&id=c8993518&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c8993518\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport VueRouter from 'vue-router';\n\n// 路由懒加载\n\nimport Home from \"@/views/Home.vue\";\nimport Login from \"@/views/Login.vue\";\nimport Index from \"@/views/Index\";\nimport User from \"@/views/User\";\nimport Node from \"@/views/node\";\nimport Tunnel from \"@/views/Tunnel\";\nimport Forward from \"@/views/Forward\";\nimport Limit from \"@/views/Limit\";\n\nVue.use(VueRouter);\n\n// 路由配置\n\nconst routes = [\n    {path: '/', redirect: '/login'},\n    {path: '/login', component: Login},\n    {\n        path: '/home', component: Home, redirect: '/index', children: [\n            {path: '/index', component: Index},\n            {path: '/user', component: User},\n            {path: '/node', component: Node},\n            {path: '/tunnel', component: Tunnel},\n            {path: '/forward', component: Forward},\n            {path: '/limit', component: Limit}\n        ]\n    },\n]\n\nconst router = new VueRouter({\n    base: process.env.BASE_URL,\n    routes\n})\n\nrouter.beforeEach((to, from, next) => {\n    if (to.path === '/login') return next();\n    const tokenStr = localStorage.getItem('token')\n    if (!tokenStr) {\n        return next('/login')\n    }\n    next()\n})\n\n\nexport default router\n","/**\n * JWT工具类 - 前端版本\n */\n\n/**\n * 从JWT Token中获取payload\n * @param {string} token JWT Token\n * @returns {object|null} payload数据\n */\nfunction getPayloadFromToken(token) {\n  try {\n    if (!token) return null;\n    \n    const parts = token.split('.');\n    if (parts.length !== 3) return null;\n    \n    const encodedPayload = parts[1];\n    const decodedPayload = atob(encodedPayload);\n    return JSON.parse(decodedPayload);\n  } catch (error) {\n    return null;\n  }\n}\n\n/**\n * 从JWT Token中获取用户ID\n * @param {string} token JWT Token\n * @returns {number|null} 用户ID\n */\nexport function getUserIdFromToken(token) {\n  const payload = getPayloadFromToken(token);\n  return payload ? parseInt(payload.sub) : null;\n}\n\n/**\n * 从JWT Token中获取用户角色ID\n * @param {string} token JWT Token\n * @returns {number|null} 角色ID\n */\nexport function getRoleIdFromToken(token) {\n  const payload = getPayloadFromToken(token);\n  return payload ? payload.role_id : null;\n}\n\n/**\n * 从JWT Token中获取用户名\n * @param {string} token JWT Token\n * @returns {string|null} 用户名\n */\nexport function getUsernameFromToken(token) {\n  const payload = getPayloadFromToken(token);\n  return payload ? payload.user : null;\n}\n\n/**\n * 验证token是否过期\n * @param {string} token JWT Token\n * @returns {boolean} 是否有效\n */\nexport function isTokenValid(token) {\n  const payload = getPayloadFromToken(token);\n  if (!payload) return false;\n  \n  const now = Math.floor(Date.now() / 1000);\n  return payload.exp > now;\n}\n\n// JwtUtil对象，提供便捷的静态方法调用\nexport const JwtUtil = {\n  /**\n   * 从localStorage获取token并解析用户ID\n   * @returns {number|null} 用户ID\n   */\n  getUserIdFromToken() {\n    const token = localStorage.getItem('token');\n    return getUserIdFromToken(token);\n  },\n  \n  /**\n   * 从localStorage获取token并解析角色ID\n   * @returns {number|null} 角色ID\n   */\n  getRoleIdFromToken() {\n    const token = localStorage.getItem('token');\n    return getRoleIdFromToken(token);\n  },\n  \n  /**\n   * 从localStorage获取token并解析用户名\n   * @returns {string|null} 用户名\n   */\n  getUsernameFromToken() {\n    const token = localStorage.getItem('token');\n    return getUsernameFromToken(token);\n  },\n  \n  /**\n   * 验证localStorage中的token是否有效\n   * @returns {boolean} 是否有效\n   */\n  isTokenValid() {\n    const token = localStorage.getItem('token');\n    return isTokenValid(token);\n  }\n}; ","import { getRoleIdFromToken, isTokenValid } from './jwt'\n\n/**\n * 权限工具类\n */\n\n/**\n * 获取当前用户的token\n * @returns {string|null} token\n */\nexport function getToken() {\n  return localStorage.getItem('token')\n}\n\n/**\n * 获取当前用户的角色ID\n * @returns {number|null} 角色ID\n */\nexport function getCurrentUserRoleId() {\n  const token = getToken()\n  if (!token || !isTokenValid(token)) {\n    return null\n  }\n  return getRoleIdFromToken(token)\n}\n\n/**\n * 判断当前用户是否是管理员\n * @returns {boolean} 是否是管理员\n */\nexport function isAdmin() {\n  const roleId = getCurrentUserRoleId()\n  return roleId === 0\n}\n\n/**\n * 判断当前用户是否有指定角色\n * @param {number} targetRoleId 目标角色ID\n * @returns {boolean} 是否有指定角色\n */\nexport function hasRole(targetRoleId) {\n  const roleId = getCurrentUserRoleId()\n  return roleId === targetRoleId\n}\n\n/**\n * 判断当前用户是否已登录且token有效\n * @returns {boolean} 是否已登录\n */\nexport function isLoggedIn() {\n  const token = getToken()\n  return token && isTokenValid(token)\n}\n\n/**\n * 权限检查装饰器函数\n * @param {Function} fn 要执行的函数\n * @param {string} errorMsg 权限不足时的错误提示\n * @returns {Function} 包装后的函数\n */\nexport function requireAdmin(fn, errorMsg = '权限不足，仅管理员可操作') {\n  return function(...args) {\n    if (!isAdmin()) {\n      // 可以在这里集成消息提示组件\n      console.warn(errorMsg)\n      return false\n    }\n    return fn.apply(this, args)\n  }\n} ","import { isAdmin, hasRole, isLoggedIn } from '@/utils/auth'\n\n/**\n * 权限指令\n * 使用方法：\n * v-admin - 只有管理员可见\n * v-role=\"0\" - 只有指定角色可见\n * v-auth - 只有已登录用户可见\n */\n\n// 管理员权限指令\nexport const adminDirective = {\n  inserted(el, binding) {\n    if (!isAdmin()) {\n      // 移除元素\n      el.parentNode && el.parentNode.removeChild(el)\n    }\n  },\n  \n  update(el, binding) {\n    // 动态更新权限状态\n    if (!isAdmin()) {\n      el.style.display = 'none'\n    } else {\n      el.style.display = ''\n    }\n  }\n}\n\n// 角色权限指令\nexport const roleDirective = {\n  inserted(el, binding) {\n    const targetRole = binding.value\n    if (!hasRole(targetRole)) {\n      el.parentNode && el.parentNode.removeChild(el)\n    }\n  },\n  \n  update(el, binding) {\n    const targetRole = binding.value\n    if (!hasRole(targetRole)) {\n      el.style.display = 'none'\n    } else {\n      el.style.display = ''\n    }\n  }\n}\n\n// 登录权限指令\nexport const authDirective = {\n  inserted(el, binding) {\n    if (!isLoggedIn()) {\n      el.parentNode && el.parentNode.removeChild(el)\n    }\n  },\n  \n  update(el, binding) {\n    if (!isLoggedIn()) {\n      el.style.display = 'none'\n    } else {\n      el.style.display = ''\n    }\n  }\n}\n\n// 批量注册指令的函数\nexport function installPermissionDirectives(Vue) {\n  Vue.directive('admin', adminDirective)\n  Vue.directive('role', roleDirective)\n  Vue.directive('auth', authDirective)\n} ","import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport axios from 'axios'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport { installPermissionDirectives } from '@/directives/permission'\nimport { isAdmin, hasRole, isLoggedIn, getCurrentUserRoleId } from '@/utils/auth'\nimport config from '@/config/env'\n\n\n// 注册Element UI\nVue.use(ElementUI)\n\n// 注册权限指令\ninstallPermissionDirectives(Vue)\n\n// 添加全局权限方法\nVue.prototype.$isAdmin = isAdmin\nVue.prototype.$hasRole = hasRole\nVue.prototype.$isLoggedIn = isLoggedIn\nVue.prototype.$getCurrentUserRoleId = getCurrentUserRoleId\n\n// 注册axios\nconst base_url = config.API_BASE_URL\nVue.prototype.baseUrl = base_url\nVue.prototype.$axios = axios\naxios.defaults.baseURL = base_url\nVue.config.productionTip = false\n\n\nVue.filter('dateFormat',function(originVal){\n  const dt = new Date(originVal)\n  const y = dt.getFullYear()\n  const m = (dt.getMonth() + 1 + '').padStart(2,'0')\n  const d = (dt.getDate() + '').padStart(2,'0')\n  const hh = (dt.getHours()+'').padStart(2,'0')\n  const mm = (dt.getMinutes()+'').padStart(2,'0')\n  const ss = (dt.getSeconds()+'').padStart(2,'0')\n  return `${y}-${m}-${d} ${hh}:${mm}:${ss}`\n})\n\nnew Vue({\n  router,\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgost\"] = self[\"webpackChunkgost\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(3705); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","staticRenderFns","name","created","setRem","window","addEventListener","beforeDestroy","removeEventListener","methods","width","document","documentElement","clientWidth","body","ratio","style","fontSize","component","staticStyle","_v","staticClass","_s","slot","nativeOn","$event","showPasswordDialog","apply","arguments","logout","path","on","save","directives","rawName","passwordDialogVisible","handlePasswordDialogClose","ref","passwordForm","passwordRules","model","value","currentPassword","callback","$$v","$set","expression","newPassword","confirmPassword","passwordLoading","submitPasswordChange","get","data","Promise","resolve","reject","axios","params","timeout","headers","localStorage","getItem","then","response","catch","error","console","message","post","put","delete","login","Network","createUser","getAllUsers","pageData","updateUser","deleteUser","id","getUserPackageInfo","createNode","getNodeList","updateNode","deleteNode","getNodeInstallCommand","createTunnel","getTunnelList","deleteTunnel","assignUserTunnel","getUserTunnelList","queryData","removeUserTunnel","updateUserTunnel","userTunnel","createForward","getForwardList","updateForward","deleteForward","pauseForwardService","forwardId","resumeForwardService","createSpeedLimit","getSpeedLimitList","updateSpeedLimit","deleteSpeedLimit","updatePassword","required","trigger","min","max","validator","validateConfirmPassword","e","setItem","clear","$router","push","resetPasswordForm","$refs","clearValidate","rule","Error","validate","code","$message","success","msg","$confirm","confirmButtonText","type","showCancelButton","_m","loginForm","rules","indexOf","_k","keyCode","key","handleLogin","username","password","loading","valid","res","token","role_id","userInfo","expTime","getExpStatus","text","formatFlow","flow","calculateUserTotalUsedFlow","num","totalUsedForwards","flowResetTime","formatResetTime","_e","calculateUsagePercentage","toFixed","getUsageStatus","userTunnels","length","_l","tunnel","tunnelName","getTunnelExpStatus","tunnelFlow","calculateTunnelUsedFlow","getTunnelUsedForwards","tunnelId","calculateTunnelFlowPercentage","getTunnelFlowStatus","calculateTunnelForwardPercentage","getTunnelForwardStatus","_f","Date","groupedForwards","group","forwards","forward","inIp","inPort","remoteAddr","inFlow","outFlow","calculateForwardBillingFlow","refreshLoading","forwardList","computed","groups","forEach","Object","values","mounted","loadPackageData","tunnelPermissions","refreshData","unit","now","expDate","diffTime","diffDays","Math","ceil","totalUsed","totalLimit","percentage","filter","resetDay","currentDay","getDate","daysUntilReset","nextMonth","getFullYear","getMonth","find","t","filters","dateFormat","date","toLocaleString","handleSearch","searchKeyword","handleAdd","userList","scopedSlots","_u","fn","scope","row","status","class","getExpTimeClass","createdTime","updatedTime","handleEdit","handleAssignTunnel","handleDelete","pagination","current","size","total","handleSizeChange","handleCurrentChange","dialogTitle","dialogVisible","resetForm","userForm","user","isEdit","pwd","pickerOptions","day","submitLoading","handleSubmit","currentUser","tunnelDialogVisible","resetTunnelDialog","tunnelForm","tunnelRules","availableTunnels","speedId","speedLimitList","speedLimit","assignLoading","handleAssignTunnelPermission","tunnelListLoading","userTunnelList","speedLimitName","handleEditTunnelPermission","handleRemoveTunnelPermission","editTunnelForm","editTunnelDialogVisible","resetEditTunnelForm","editTunnelRules","updateLoading","handleUpdateTunnelPermission","trim","allTunnels","disabledDate","getTime","assignedTunnelIds","map","item","includes","getUserList","keyword","records","setDefaultTimes","getHours","getMinutes","cancelButtonText","apiCall","submitData","userId","resetTunnelForm","resetFields","calculateFlowPercentage","totalUsedBytes","flowLimitBytes","getFlowStatus","loadNodes","nodeList","node","connectionStatus","getCpuChartOption","systemInfo","cpuUsage","getMemoryChartOption","memoryUsage","formatBytes","uploadTraffic","downloadTraffic","formatSpeed","uploadSpeed","downloadSpeed","ip","copyLoading","handleCopyInstallCommand","nodeForm","port","_n","config","API_BASE_URL","APP_CONFIG","VUE_APP_API_URL","process","VUE_APP_API_BASE_URL","WS_BASE_URL","VUE_APP_WS_URL","VUE_APP_WS_BASE_URL","REQUEST_TIMEOUT","VUE_APP_REQUEST_TIMEOUT","use","CanvasRenderer","GaugeChart","TooltipComponent","components","VChart","websocket","reconnectTimer","maxReconnectAttempts","reconnectAttempts","timestamp","initWebSocket","activated","readyState","WebSocket","OPEN","deactivated","closeWebSocket","beforeRouteLeave","to","from","next","index","findIndex","n","splice","copyToClipboard","textArea","createElement","position","left","top","appendChild","focus","select","execCommand","err","navigator","clipboard","writeText","removeChild","existingNode","loadNodesWithStatePreservation","currentStates","CONNECTING","wsUrl","onopen","onmessage","event","JSON","parse","handleWebSocketMessage","onerror","onclose","_isDestroyed","_inactive","attemptReconnect","messageData","currentUpload","parseInt","bytes_transmitted","currentDownload","bytes_received","currentUptime","uptime","timeDiff","lastUpload","lastDownload","uploadDiff","downloadDiff","uploadReset","downloadReset","parseFloat","cpu_usage","memory_usage","setTimeout","clearTimeout","close","offline","colors","series","radius","center","startAngle","endAngle","splitNumber","axisLine","lineStyle","color","pointer","itemStyle","axisTick","show","splitLine","axisLabel","detail","formatter","fontWeight","offsetCenter","title","bytes","k","sizes","i","floor","log","pow","bytesPerSecond","loadTunnels","tunnelList","inPortSta","inPortEnd","outIp","outIpSta","outIpEnd","handleTypeChange","handleNodeChange","inNodeId","onlineNodes","outNodeId","switchLoading","handleServiceToggle","serviceRunning","getStatusType","getStatusText","userName","forwardForm","handleTunnelChange","getTunnelDisplayName","selectedTunnel","pattern","loadForwardList","loadTunnelList","forceReload","filtered","updateData","createData","$nextTick","tunnelInfo","warning","targetState","loadSpeedLimits","speed","speedLimitForm","Vue","VueRouter","routes","redirect","Login","Home","children","Index","User","Node","Tunnel","Forward","Limit","router","base","beforeEach","tokenStr","getPayloadFromToken","parts","split","encodedPayload","decodedPayload","atob","getRoleIdFromToken","payload","isTokenValid","exp","getToken","getCurrentUserRoleId","isAdmin","roleId","hasRole","targetRoleId","isLoggedIn","adminDirective","inserted","el","binding","parentNode","update","display","roleDirective","targetRole","authDirective","installPermissionDirectives","directive","ElementUI","prototype","$isAdmin","$hasRole","$isLoggedIn","$getCurrentUserRoleId","base_url","baseUrl","$axios","defaults","baseURL","productionTip","originVal","dt","y","m","padStart","d","hh","mm","ss","getSeconds","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","amdO","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","keys","every","r","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}