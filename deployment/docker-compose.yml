version: "3.7"
services:
  mysql:
    image: mysql:8.0
    container_name: gost-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} # 数据库密码
      MYSQL_DATABASE: ${DB_NAME} # 数据库名
      MYSQL_USER: ${DB_USER} # 数据库用户
      MYSQL_PASSWORD: ${DB_PASSWORD} # 数据库密码
      TZ: Asia/Shanghai
    ports:
      - "127.0.0.1:3306:3306"  # 只绑定到本机内部，不暴露到公网
    volumes:
      - mysql_data:/var/lib/mysql
      - ./gost.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - gost-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10


  redis:
    image: redis:alpine
    container_name: gost-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"  # 只绑定到本机内部，不暴露到公网
    networks:
      - gost-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5


  backend:
    image: openjdk:8-jre-alpine
    container_name: gost-backend
    restart: unless-stopped
    environment:
      DB_HOST: mysql 
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD} 
      JWT_SECRET: ${JWT_SECRET} 
      LOG_DIR: /app/logs
      SERVER_ADDR: ${SERVER_HOST} # 服务器地址  ip:port 不能套cdn  用于节点连接
      JAVA_OPTS: >-
        -XX:+UseContainerSupport
        -XX:InitialRAMPercentage=25.0
        -XX:MaxRAMPercentage=75.0
        -XX:MinRAMPercentage=50.0
        -XX:+UseG1GC
        -XX:MaxGCPause=200ms
        -XX:+UseStringDeduplication
        -XX:+UseCompressedOops
        -XX:+UseCompressedClassPointers
        -XX:MaxMetaspaceSize=128m
        -Dfile.encoding=UTF-8
        -Duser.timezone=Asia/Shanghai
        -Djava.awt.headless=true
        --add-opens=java.base/java.lang=ALL-UNNAMED
    ports:
      - "6365:6365"
    volumes:
      - ./admin-0.0.1-SNAPSHOT.jar:/app/admin.jar:ro
      - ./applog:/app/logs
    deploy:
      resources:
        limits:
          memory: 512M  
        reservations:
          memory: 128M 
    command: sh -c "java $$JAVA_OPTS -jar /app/admin.jar"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gost-network
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://localhost:6365/flow/test || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.vue
    container_name: gost-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      BACKEND_HOST: backend
      BACKEND_PORT: 6365
      VUE_APP_API_URL: ${VUE_APP_API_URL}
      VUE_APP_WS_URL: ${VUE_APP_WS_URL}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - gost-network

volumes:
  mysql_data:
    driver: local

networks:
  gost-network:
    driver: bridge 